{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-view",
    "title": "ALTER VIEW | Snowflake Documentation",
    "paragraphs": [
        "Modifies the properties for an existing view. Currently the only supported operations are:",
        "Renaming a view.",
        "Converting to (or reverting from) a secure view.",
        "Adding, overwriting, removing a comment for a view.",
        "Note that you cannot use this command to change the definition for a view. To change the view definition, you must drop the view and\nthen recreate it.",
        "CREATE VIEW , DROP VIEW , SHOW VIEWS , DESCRIBE VIEW",
        "Where:",
        "Specifies the identifier for the view to alter. If the identifier contains spaces or special characters, the entire string must be enclosed\nin double quotes. Identifiers enclosed in double quotes are also case-sensitive.",
        "Specifies the new identifier for the view; must be unique for the schema.",
        "For more details, see Identifier requirements.",
        "You can move the object to a different database and/or schema while optionally renaming the object. To do so, specify\na qualified new_name value that includes the new database and/or schema name in the form\ndb_name.schema_name.object_name or schema_name.object_name, respectively.",
        "Note",
        "The destination database and/or schema must already exist. In addition, an object with the same name cannot already\nexist in the new location; otherwise, the statement returns an error.",
        "Moving an object to a managed access schema is prohibited unless the object owner (that is, the role that has\nthe OWNERSHIP privilege on the object) also owns the target schema.",
        "When an object is renamed, other objects that reference it must be updated with the new name.",
        "Specifies the property to set for the view:",
        "Specifies a view as secure.",
        "Specifies to enable or disable change tracking on the table.",
        "TRUE enables change tracking on the view, and cascades the setting to all underlying tables.",
        "FALSE disables change tracking on the view, and cascades the setting to all underlying tables.",
        "Adds a comment or overwrites an existing comment for the view.",
        "Note",
        "You must set each view property individually.",
        "Specifies the property to unset for the view, which resets it to the default:",
        "SECURE",
        "COMMENT",
        "When resetting a property, specify only the name; specifying a value for the property will return an error.",
        "Note",
        "You must reset each view property individually.",
        "Specifies the schedule to run the data metric function periodically.",
        "Specifies an interval (in minutes) of wait time inserted between runs of the data metric function. Accepts positive integers only.",
        "Also supports num M syntax.",
        "For data metric functions, use one of the following values: 5, 15, 30, 60, 720, or 1440.",
        "Specifies a cron expression and time zone for periodically running the data metric function. Supports a subset of standard cron utility\nsyntax.",
        "For a list of time zones, see the list of tz database time zones.",
        "The cron expression consists of the following fields, and the periodic interval must be at least 5 minutes:",
        "The following special characters are supported:",
        "Wildcard. Specifies any occurrence of the field.",
        "Stands for \u201clast\u201d. When used in the day-of-week field, it allows you to specify constructs such as \u201cthe last Friday\u201d (\u201c5L\u201d) of\na given month. In the day-of-month field, it specifies the last day of the month.",
        "Indicates the nth instance of a given unit of time. Each quanta of time is computed independently. For example, if 4/3 is\nspecified in the month field, then the data metric function is scheduled for April, July and October (i.e. every 3 months, starting\nwith the 4th month of the year). The same schedule is maintained in subsequent years. That is, the data metric function is\nnot scheduled to run in January (3 months after the October run).",
        "Note",
        "The cron expression currently evaluates against the specified time zone only. Altering the TIMEZONE parameter value\nfor the account (or setting the value at the user or session level) does not change the time zone for the data metric\nfunction.",
        "The cron expression defines all valid run times for the data metric function. Snowflake attempts to run a data metric\nfunction based on this schedule; however, any valid run time is skipped if a previous run has not completed before the next valid\nrun time starts.",
        "When both a specific day of month and day of week are included in the cron expression, then the data metric function is scheduled\non days satisfying either the day of month or day of week. For example,\nDATA_METRIC_SCHEDULE = 'USING CRON 0 0 10-20 * TUE,THU UTC' schedules a data metric function at 0AM on any 10th to 20th day\nof the month and also on any Tuesday or Thursday outside of those dates.",
        "The shortest granularity of time in cron is minutes.",
        "If a data metric function is resumed during the minute defined in its cron expression, the first scheduled run of the data metric\nfunction is the next occurrence of the instance of the cron expression. For example, if data metric function scheduled to run daily\nat midnight (USING CRON 0 0 * * *) is resumed at midnight plus 5 seconds (00:00:05), the first data metric function run\nis scheduled for the following midnight.",
        "Specifies that the DMF runs when a DML operation modifies the table, such as inserting a new row or\ndeleting a row.",
        "You can specify 'TRIGGER_ON_CHANGES' for the following objects:",
        "Dynamic tables",
        "External tables",
        "Apache Iceberg\u2122 tables",
        "Regular tables",
        "Temporary tables",
        "Transient tables",
        "You cannot specify 'TRIGGER_ON_CHANGES' for views.",
        "Changes to the table as a result of reclustering do not trigger the DMF to run.",
        "Identifier of the data metric function to add to the table or view or drop from the table or view.",
        "The table or view columns on which to associate the data metric function. The data types of the columns must match the data types of\nthe columns specified in the data metric function definition.",
        "Additional data metric functions to add to the table or view. Use a comma to separate each data metric function and its specified\ncolumns.",
        "Identifier of the data metric function to modify.",
        "Suspends or resumes the data metric function on the specified columns. When a data metric function is set for a table or view, the data\nmetric function is automatically included in the schedule.",
        "SUSPEND removes the data metric function from the schedule.",
        "RESUME brings a suspended date metric function back into the schedule.",
        "Additional data metric functions to suspend or resume. Use a comma to separate each data metric function and its specified\ncolumns.",
        "For details about the access control requirements for these actions, see DMF privileges.",
        "Specifies the tag name and the tag string value.",
        "The tag value is always a string, and the maximum number of characters for the tag value is 256.",
        "For information about specifying tags in a statement, see Tag quotas for objects and columns.",
        "Identifier for the policy; must be unique for your schema.",
        "The following clauses apply to all table kinds that support row access policies, such as but not limited to tables, views, and event tables.\nTo simplify, the clauses just refer to \u201ctable.\u201d",
        "Adds a row access policy to the table.",
        "At least one column name must be specified. Additional columns can be specified with a comma separating each column name. Use this\nexpression to add a row access policy to both an event table and an external table.",
        "Drops a row access policy from the table.",
        "Use this clause to drop the policy from the table.",
        "Drops the row access policy that is set on the table and adds a row access policy to the same table in a single SQL statement.",
        "Drops all row access policy associations from the table.",
        "This expression is helpful when a row access policy is dropped from a schema before dropping the policy from an event table. Use this expression to drop row access policy associations from the table.",
        "Assigns an aggregation policy to the table.",
        "Use the optional ENTITY KEY parameter to define which columns uniquely identity an entity within the table. For more information, see\nImplementing entity-level privacy with aggregation policies.",
        "Use the optional FORCE parameter to atomically replace an existing aggregation policy with the new aggregation policy.",
        "Detaches an aggregation policy from the table.",
        "Specifies the arguments to pass into the conditional masking policy SQL expression.",
        "The first column in the list specifies the column for the policy conditions to mask or tokenize the data and must match the\ncolumn to which the masking policy is set.",
        "The additional columns specify the columns to evaluate to determine whether to mask or tokenize the data in each row of the query\nresult when a query is made on the first column.",
        "If the USING clause is omitted, Snowflake treats the conditional masking policy as a normal\nmasking policy.",
        "Replaces a masking or projection policy that is currently set on a column with a different policy in a single statement.",
        "Note that using the FORCE keyword with a masking policy requires the data type of the policy\nin the ALTER TABLE statement (i.e. STRING) to match the data type of the masking policy currently set on the column (i.e. STRING).",
        "If a masking policy is not currently set on the column, specifying this keyword has no effect.",
        "For details, see: Replace a masking policy on a column or Replace a projection policy.",
        "Moving a view to a managed access schema (using the ALTER VIEW \u2026 RENAME TO syntax) is prohibited unless the view owner (i.e.\nthe role that has the OWNERSHIP privilege on the view) also owns the target schema.",
        "For masking policies:",
        "The USING clause and the FORCE keyword are both optional; neither are required to set a masking policy on a column. The\nUSING clause and the FORCE keyword can be used separately or together. For details, see:",
        "Apply a conditional masking policy on a column",
        "Replace a masking policy on a column",
        "A single masking policy that uses conditional columns can be applied to multiple tables provided that the column structure of the table\nmatches the columns specified in the policy.",
        "When modifying one or more table columns with a masking policy or the table itself with a row access policy, use the\nPOLICY_CONTEXT function to simulate a query on the column(s) protected by a masking policy and the\ntable protected by a row access policy.",
        "A single masking policy that uses conditional columns can be applied to multiple views provided that the column structure of the view\nmatches the columns specified in the policy.",
        "For row access policies:",
        "Snowflake supports adding and dropping row access policies in a single SQL statement.",
        "For example, to replace a row access policy that is already set on a table with a different policy, drop the row access policy first\nand then add the new row access policy.",
        "For a given resource (i.e. table or view), to ADD or DROP a row access policy you must have either the\nAPPLY ROW ACCESS POLICY privilege on the schema, or the\nOWNERSHIP privilege on the resource and the APPLY privilege on the row access policy resource.",
        "A table or view can only be protected by one row access policy at a time. Adding a policy fails if the policy body refers to a table or\nview column that is protected by a row access policy or the column protected by a masking policy.",
        "Similarly, adding a masking policy to a table column fails if the masking policy body refers to a table that is protected by a row\naccess policy or another masking policy.",
        "Row access policies cannot be applied to system views or table functions.",
        "Similar to other DROP <object> operations, Snowflake returns an error if attempting to drop a row access policy from a\nresource that does not have a row access policy added to it.",
        "If an object has both a row access policy and one or more masking policies, the row access policy is evaluated first.",
        "Regarding metadata:",
        "Attention",
        "Customers should ensure that no personal data (other than for a User object), sensitive data, export-controlled data, or other regulated data is entered as metadata when using the Snowflake service. For more information, see Metadata fields in Snowflake.",
        "Prior to adding a data metric function to a table, you must:",
        "Set the schedule for the data metric function to run. For details, see\nDATA_METRIC_SCHEDULE.",
        "Configure the event table to store the results of calling the data metric function. For details, see\nView the DMF results.",
        "Ensure that the table is view is not granted to a share because you cannot set a data metric function on a shared table or view.",
        "Additionally:",
        "You can add a data metric function to a table, external table, view, or materialized view. You cannot set a data metric function on any\nother kind of table, such as a dynamic table.",
        "When you specify a column, Snowflake uses the ordinal position. If you rename a column after adding a data metric function to the table\nor view, the association of the data metric function to the column remains valid.",
        "Only one data metric function of its kind can be added to a column. For example, a NULL_COUNT data metric function cannot be added to a\nsingle column twice.",
        "If you drop a column after adding a data metric function that references the column, Snowflake cannot evaluate the data metric function.",
        "Referencing a virtual column is not supported.",
        "Drop the data metric function from the table before using the DROP FUNCTION command to remove the data metric\nfunction from the system.",
        "You can use the DATA_METRIC_FUNCTION_REFERENCES function to identify the table and view\nobjects that have a data metric function set on them.",
        "It takes ten minutes for the schedule to become effective once the schedule is set.",
        "Similarly, it takes ten minutes once the DMF is unset for the scheduling changes to take effect. For more information, see\nSchedule your DMFs to run.",
        "Rename view view1 to view2:",
        "Convert a view to a secure view:",
        "Revert a secure view to a regular view:",
        "Apply a Column-level Security masking policy to a view column:",
        "Unset a Column-level Security masking policy from a view column:",
        "The following example adds a row access policy on a view. After setting the policies, you can verify by checking the\ninformation schema.",
        "The following example drops a row access policy from a view. Verify the policies were dropped by querying the\ninformation schema.",
        "The following example shows how to combine adding and dropping row access policies in a single SQL statement for a view. Verify the\nresults by checking the information schema.",
        "Was this page helpful?",
        "On this page"
    ]
}