{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-clone",
    "title": "CREATE <object> \u2026 CLONE | Snowflake Documentation",
    "paragraphs": [
        "Creates a copy of an existing object in the system. This command is primarily used for creating\nzero-copy clones of databases, schemas, and tables.\nYou can also use this command to create clones of other schema objects, including\nexternal stages, file formats, sequences, and database roles.",
        "The command is a variation of the object-specific CREATE <object> commands with the addition of the CLONE keyword.",
        "For databases, schemas, and non-temporary tables, CLONE supports an additional AT | BEFORE clause for cloning using\nTime Travel.",
        "For databases and schemas:",
        "CLONE supports the IGNORE TABLES WITH INSUFFICIENT DATA RETENTION parameter to skip any\ntables that have been purged from Time Travel (for example,\ntransient tables with a one day data retention period).",
        "CLONE supports the IGNORE HYBRID TABLES parameter to skip hybrid tables.",
        "Preview Feature \u2014 Open",
        "Available to all accounts.",
        "The AT | BEFORE clause accepts one of the following parameters:",
        "Specifies an exact date and time to use for Time Travel. The value must be explicitly cast to a TIMESTAMP,\nTIMESTAMP_LTZ, TIMESTAMP_NTZ, or TIMESTAMP_TZ data type.",
        "If no explicit cast is specified, the timestamp in the AT clause is treated as a timestamp with the UTC time zone (equivalent to\nTIMESTAMP_NTZ). Using the TIMESTAMP data type for an explicit cast may also result in the value being treated as a TIMESTAMP_NTZ\nvalue. For details, see Date & time data types.",
        "Specifies the difference in seconds from the current time to use for Time Travel, in the form -N where N\ncan be an integer or arithmetic expression (e.g. -120 is 120 seconds, -30*60 is 1800 seconds or 30 minutes).",
        "Specifies the query ID of a statement to use as the reference point for Time Travel. This parameter supports any statement of one of the\nfollowing types:",
        "DML (e.g. INSERT, UPDATE, DELETE)",
        "TCL (BEGIN, COMMIT transaction)",
        "SELECT",
        "The query ID must reference a query that has been executed within the last 14 days. If the query ID references a query over 14 days old,\nthe following error is returned:",
        "To work around this limitation, use the timestamp for the referenced query.",
        "Ignore tables that no longer have historical data available in Time Travel to clone. If the time in the past specified in the\nAT | BEFORE clause is beyond the data retention period for any child table in a database or schema, skip the cloning operation\nfor the child table. For more information, see\nChild Objects and Data Retention Time.",
        "Ignore hybrid tables, which will not be cloned. Use this option to clone a database or schema that contains hybrid tables.\nThe cloned database or schema includes other objects but skips hybrid tables.",
        "If you don\u2019t use this option and your database or schema contains one or more hybrid tables, the command ignores hybrid tables silently. However, the error handling for databases and schemas that contain hybrid tables will change in an upcoming release; therefore, you may want to add this parameter to your commands preemptively.",
        "To create a clone, your current role must have the following privilege(s) on the source object:",
        "USAGE on the database.",
        "OWNERSHIP on the database role and the CREATE DATABASE ROLE privilege on the target database.",
        "If you specify the WITH MANAGED ACCESS clause, the required privileges depends on whether the source schema is a\nmanaged or unmanaged schema. For details, see CREATE SCHEMA privileges.",
        "SELECT",
        "OWNERSHIP",
        "USAGE",
        "In addition, to clone a schema or an object within a schema, your current role must have required privileges on the container object(s)\nfor both the source and the clone.",
        "A clone is writable and is independent of its source. Changes made to the source or clone aren\u2019t reflected in the other object.",
        "Parameters that are explicitly set on a source database, schema, or table are retained in any clones created from the source container or\nchild objects.",
        "For database roles:",
        "A database role is cloned when you run the CREATE DATABASE \u2026 CLONE command to clone a database. However, if you clone other database\nobjects, such as a schema or table, database roles in the database are not cloned with the schema or table.",
        "If the database role is already cloned to the target database, the command fails. If this occurs, drop the database role from the\ntarget database and try the CLONE command again.",
        "For databases and schemas, cloning is recursive:",
        "Cloning a database clones all the schemas and other objects in the database.",
        "Cloning a schema clones all the contained objects in the schema.",
        "However, the following object types are not cloned:",
        "External tables",
        "Internal (Snowflake) stages",
        "For databases, schemas, and tables, a clone does not contribute to the overall data storage for the object until operations are\nperformed on the clone that modify existing data or add new data, such as:",
        "Adding, deleting, or modifying rows in a cloned table.",
        "Creating a new, populated table in a cloned schema.",
        "Cloning a table replicates the structure, data, and certain other properties (for example, STAGE FILE FORMAT) of the source table.",
        "However:",
        "A cloned table does not include the load history of the source table. One consequence of this is that data files that\nwere loaded into a source table can be loaded again into its clones.",
        "Although a cloned table replicates the source table\u2019s clustering keys, the new table starts with Automatic Clustering\nsuspended \u2013 even if Automatic Clustering is not suspended for the source table.",
        "The COPY GRANTS parameter affect a new table clone as follows:",
        "If the COPY GRANTS parameter is used, then the new object inherits any explicit access privileges granted on the original table but does\nnot inherit any future grants defined for the object type in the schema.",
        "If the COPY GRANTS parameter is not used, then the new object clone does not inherit any explicit access privileges granted on\nthe original table but does inherit any future grants defined for the object type in the schema (using the\nGRANT <privileges> \u2026 ON FUTURE syntax).",
        "Note",
        "If the statement is replacing an existing table of the same name, then the grants are copied from the table\nbeing replaced. If there is no existing table of that name, then the grants are copied from the source table\nbeing cloned.",
        "For Apache Iceberg\u2122 tables, cloning is currently supported for Snowflake-managed tables only. For more information, see\nCloning and Apache Iceberg\u2122 tables.",
        "Regarding metadata:",
        "Attention",
        "Customers should ensure that no personal data (other than for a User object), sensitive data, export-controlled data, or other regulated data is entered as metadata when using the Snowflake service. For more information, see Metadata fields in Snowflake.",
        "CREATE OR REPLACE <object> statements are atomic. That is, when an object is replaced, the old object is deleted and the new object is created in a single transaction.",
        "An object clone inherits the name and structure of the source object current at the time the CREATE <object> CLONE\nstatement is executed or at a specified time/point in the past using Time Travel. An object clone\ninherits any other metadata, such as comments or table clustering keys, that is current in the source object at the time the statement\nis executed, regardless of whether Time Travel is used.",
        "A database or schema clone includes all child objects active at the time the statement is executed or at the specified time/point\nin the past. A snapshot of the table data represents the state of the source data when the statement is executed or at the specified time/point\nin the past. Child objects inherit the name and structure of the source child objects at the time the statement is executed.",
        "Cloning a database or schema does not clone objects of the following types in the database or schema:",
        "External tables",
        "Internal (Snowflake) stages",
        "A database or schema clone includes only pipe objects that reference external (Amazon S3, Google Cloud Storage, or Microsoft Azure)\nstages; internal (Snowflake) pipes are not cloned.",
        "The default state of a pipe clone is as follows:",
        "When AUTO_INGEST = FALSE, a cloned pipe is paused by default.",
        "When AUTO_INGEST = TRUE, a cloned pipe is set to the STOPPED_CLONED state. In this state, pipes do not accumulate event\nnotifications as a result of newly staged files. When a pipe is explicitly resumed, it only processes data files triggered as a\nresult of new event notifications.",
        "A pipe clone in either state can be resumed by executing an ALTER PIPE \u2026 RESUME statement.",
        "Cloning a database or schema affects tags in that database or schema as follows:",
        "Tag associations in the source object (e.g. table) are maintained in the cloned objects.",
        "For a database or a schema:",
        "The tags stored in that database or schema are also cloned.",
        "When a database or schema is cloned, tags that reside in that schema or database are also cloned.",
        "If a table or view exists in the source schema/database and has references to tags in the same schema or database, the cloned table or view is mapped to the corresponding cloned tag (in the target schema/database) instead of the tag in the source schema or database.",
        "A Java UDF can be cloned when the database or schema containing the Java UDF is cloned. To be cloned, the Java UDF must meet certain\nconditions. For more information, see Limitations on cloning.",
        "Cloning does not result in DMF assignments on the target object. If you clone a database or schema that contains DMFs, the DMFs are\ncloned to the target database or schema.",
        "When cloning a database, schema, or table, a snapshot of the data in each table is taken and made available to the clone. The snapshot\nrepresents the state of the source data either at the time the statement is executed or at the specified time/point in the past (using\nTime Travel).",
        "Objects such as views, streams, and tasks include object references in their definition. For example:",
        "A view contains a stored query that includes table references.",
        "A stream points to a source table.",
        "A task or alert calls a stored procedure or executes a SQL statement that references other objects.",
        "When one of these objects is cloned, either in a cloned database or schema or as an individual object, for those object types that support\ncloning, the clone inherits references to other objects from the definition of the source object. For example, a clone of a view inherits\nthe stored query from the source view, including the table references in the query.",
        "Pay close attention to whether any object names in the definition of a source object are fully or partially qualified. A fully-qualified\nname includes the database and schema names. Any clone of the source object includes these parts in its own definition.",
        "For example:",
        "If you intend to point a view to tables with the same names in other databases or schemas, we suggest creating a new view rather\nthan cloning an existing view. This guidance also pertains to other objects that reference objects in their definition.",
        "Note",
        "Certain limitations apply to cloning operations. For example, DDL statements that affect the source object during a cloning operation\ncan alter the outcome or cause errors.",
        "Cloning is not instantaneous, particularly for large objects (databases, schemas, tables), and does not lock the object being cloned.\nAs such, a clone does not reflect any DML statements applied to table data, if applicable, while the cloning operation is still running.",
        "For more information about this and other use cases that might affect your cloning operations, see Cloning considerations.",
        "The AT | BEFORE clause clones a database, schema, or table as of a specified time in the past or based on\na specified SQL statement:",
        "The AT keyword specifies that the request is inclusive of any changes made by a statement or transaction with timestamp equal\nto the specified parameter.",
        "The BEFORE keyword specifies that the request refers to a point immediately preceding the specified parameter.",
        "Cloning using STATEMENT is equivalent to using TIMESTAMP with a value equal to the recorded execution time of the SQL\nstatement (or its enclosing transaction), as identified by the specified statement ID.",
        "An error is returned if:",
        "The object being cloned did not exist at the point in the past specified in the AT | BEFORE clause.",
        "The historical data required to clone the object or any of its child objects (for example, tables in cloned schemas or database) has been\npurged.",
        "As a workaround for child objects that have been purged from Time Travel, use the\nIGNORE TABLES WITH INSUFFICIENT DATA RETENTION parameter of the\nCREATE <object> \u2026 CLONE command. For more information, see Child objects and data retention time.",
        "If any child object in a cloned database or schema did not exist at the point in the past specified in the\nAT | BEFORE clause, the child object is not cloned.",
        "For more information, see Understanding & using Time Travel.",
        "The following scenarios can help you troubleshoot issues that can occur when cloning an object using Time Travel.",
        "Error",
        "This error can be returned for the following reasons:",
        "Cause",
        "The time in the past specified by the AT | BEFORE clause is beyond the data retention period for\nthe object.",
        "Solution",
        "Verify the data retention period for the object using the appropriate SHOW <objects> command and the\nretention_time column. Update the CREATE <object> \u2026 CLONE statement to use a time in the past that is within\nthe data retention period for the object.",
        "Cause",
        "The cloning operation for a database or schema fails if the historical data for any child object\nhas moved out of Time Travel.",
        "Solution",
        "To skip child tables that no longer have historical data available in Time Travel, execute the cloning  statement using the\nIGNORE TABLES WITH INSUFFICIENT DATA RETENTION\nparameter to skip these tables.",
        "Cause",
        "In some cases, this is caused by using a string where a timestamp is expected.",
        "Solution",
        "Cast the string to a timestamp.",
        "Clone a database and all objects within the database at its current state:",
        "Clone a schema and all objects within the schema at its current state:",
        "Clone a table at its current state:",
        "Clone a schema as it existed before the date and time in the specified timestamp:",
        "Clone a table as it existed exactly at the date and time of the specified timestamp:",
        "Clone a table as it existed immediately before the execution of the specified statement. Replace the query ID for the STATEMENT\nparameter in the example and execute the following CREATE TABLE statement:",
        "Clone a database and all its objects as they existed four days ago and skip any tables that have a data retention period of\nless than four days:",
        "Clone a schema that contains a mixture of standard tables and hybrid tables:",
        "The new schema will only contain the standard tables from the original schema.",
        "Was this page helpful?",
        "On this page"
    ]
}