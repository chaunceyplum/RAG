{
    "url": "https://docs.snowflake.com/en/release-notes/2024/8_18",
    "title": "May 08-09, 2024 \u2014 8.18 Release Notes | Snowflake Documentation",
    "paragraphs": [
        "Attention",
        "The release has completed.",
        "For differences between the in-advance and final versions of these release notes, see Release notes change log.",
        "A dynamic pivot query uses the ANY keyword or a subquery in the PIVOT subclause instead of specifying the pivot values explicitly.\nWith dynamic pivot, the pivot values are determined at runtime based on the use case.",
        "Structured data types are now supported in user-defined functions (UDFs) created in Java, Python, and Scala. For information about\ndata type mappings for structured data types, see Data Type Mappings Between SQL and Handler Languages.",
        "The following function(s) are now available with this release:",
        "Function Category",
        "New Function",
        "Description",
        "Semi-structured (higher-order)",
        "FILTER",
        "Filters an array based on the logic in a Lambda expression.",
        "Semi-structured (higher-order)",
        "TRANSFORM",
        "Transforms an array based on the logic in a Lambda expression.",
        "System function",
        "SYSTEM$VALIDATE_STORAGE_INTEGRATION",
        "Validates the configuration for a specified storage integration.",
        "With this release, Snowflake is pleased to announce the public preview of support for writing user-defined aggregate functions (UDAFs)\nwith a Python handler. You can use Snowpark Python APIs to create and call user-defined aggregate functions (UDAFs), which take one\nor more rows as input and produce a single row of output. A UDAF operates on values across multiple rows to perform mathematical\ncalculations such as sum, average, counting, finding minimum or maximum values, standard deviation, and estimation, as well as some\nnon-mathematical operations.",
        "For more information, see:",
        "(for SQL- and Python-based instructions)",
        "(for a Snowpark Python-based guide)",
        "With this release, Snowflake is pleased to announce the public preview of access to external network locations from function and\nprocedure handlers for code deployed in the AWS Gov region.",
        "When setting up external network access, you create a network rule that represents the external network location. If your handler\ncode will need to authenticate with the external location, you create a secret containing the credentials needed. In handler code,\nyou can use APIs to retrieve credential values from the secret.",
        "For more information, see External network access overview.",
        "Announcement",
        "Update",
        "Date",
        "Release notes",
        "Initial publication (preview)",
        "06-May-24",
        "Validate storage integration",
        "Added to New SQL functions section",
        "09-May-24",
        "Was this page helpful?",
        "On this page"
    ]
}