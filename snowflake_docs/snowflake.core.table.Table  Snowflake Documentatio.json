{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-python-api/reference/latest/_autosummary/snowflake.core.table.Table",
    "title": "snowflake.core.table.Table | Snowflake Documentation",
    "paragraphs": [
        "Bases: BaseModel",
        "A model object representing the Table resource.",
        "Constructs an object of type Table with the provided properties.",
        "name (str) \u2013 Specifies the name for the table, must be unique for the schema in which the table is created",
        "kind (str,  default 'PERMANENT') \u2013 Table type - permanent, transient, or temporary",
        "cluster_by (List[str], optional) \u2013 Specifies one or more columns or column expressions in the table as the clustering key",
        "enable_schema_evolution (bool, optional) \u2013 Table has schema evolution enabled or disabled",
        "change_tracking (bool, optional) \u2013 Change tracking is enabled or disabled",
        "data_retention_time_in_days (int, optional) \u2013 Specifies the retention period for the table so that Time Travel actions SELECT, CLONE, UNDROP can be performed on historical data in the table",
        "max_data_extension_time_in_days (int, optional) \u2013 Specifies the retention period for the table so that Time Travel actions SELECT, CLONE, UNDROP can be performed on historical data in the table",
        "default_ddl_collation (str, optional) \u2013 Specifies a default collation specification for the columns in the table, including columns added to the table in the future",
        "columns (List[TableColumn], optional)",
        "constraints (List[Constraint], optional)",
        "comment (str, optional) \u2013 Comment for the table",
        "created_on (datetime, optional) \u2013 Date and time when the table was created.",
        "database_name (str, optional) \u2013 Database in which the table is stored",
        "schema_name (str, optional) \u2013 Schema in which the table is stored",
        "rows (int, optional) \u2013 Number of rows in the table. Returns NULL for external tables.",
        "bytes (int, optional) \u2013 Number of bytes that will be scanned if the entire table is scanned in a query. Note that this number may be different than the number of actual physical bytes stored on-disk for the table",
        "owner (str, optional) \u2013 Role that owns the table",
        "dropped_on (datetime, optional) \u2013 Date and time when the table was dropped",
        "automatic_clustering (bool, optional) \u2013 If Automatic Clustering is enabled for your account, specifies whether it is explicitly enabled or disabled for the table.",
        "search_optimization (bool, optional) \u2013 If ON, the table has the search optimization service enabled",
        "search_optimization_progress (int, optional) \u2013 Percentage of the table that has been optimized for search.",
        "search_optimization_bytes (int, optional) \u2013 Number of additional bytes of storage that the search optimization service consumes for this table",
        "owner_role_type (str, optional) \u2013 The type of role that owns the object.",
        "budget (str, optional) \u2013 Name of the budget if the object is monitored by a budget",
        "table_type (str, optional) \u2013 Type of the table",
        "Create a new model by parsing and validating input data from keyword arguments.",
        "Raises [ValidationError][pydantic_core.ValidationError] if the input data cannot be\nvalidated to form a valid model.",
        "self is explicitly positional-only to allow self as a field name.",
        "Methods",
        "Create an instance of Table from a dict.",
        "Create an instance of Table from a JSON string.",
        "Returns the dictionary representation of the model using alias.",
        "Return the dictionary representation of the model without readonly properties.",
        "Returns the JSON representation of the model using alias.",
        "Returns the string representation of the model using alias.",
        "Was this page helpful?"
    ]
}