{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-iceberg-table-alter-column-set-data-type",
    "title": "ALTER ICEBERG TABLE \u2026 ALTER COLUMN \u2026 SET DATA TYPE | Snowflake Documentation",
    "paragraphs": [
        "Note",
        "This variant of the syntax is not supported for Iceberg tables that use an external catalog.",
        "Modifies (evolves) a structured type\ncolumn in a Snowflake-managed Apache Iceberg\u2122 table.",
        "With this command, you can modify structured types in an Iceberg table column. You can\neither rename a key in a structured OBJECT or perform a combination of the following changes:",
        "Evolving the type of a field within a structured type.",
        "Reordering keys in a structured OBJECT.",
        "Adding keys to a structured OBJECT.",
        "Dropping keys from a structured OBJECT.",
        "You can\u2019t combine renaming a key with any other modifications.",
        "For brevity, this topic refers to Iceberg tables as just \u201ctables\u201d except when making a distinction between\nIceberg tables and regular Snowflake tables.",
        "CREATE ICEBERG TABLE , DROP ICEBERG TABLE , SHOW ICEBERG TABLES , DESCRIBE ICEBERG TABLE",
        "Modify a structured type column",
        "Rename keys in a structured OBJECT",
        "Identifier for the table to modify.",
        "If the identifier contains spaces or special characters, the entire string must be enclosed in double quotes.\nIdentifiers enclosed in double quotes are also case-sensitive.",
        "For more information, see Identifier requirements.",
        "Specifies the structured type column to modify.",
        "If the identifier contains spaces or special characters, the entire string must be enclosed in double quotes.\nIdentifiers enclosed in double quotes are also case-sensitive.",
        "For more information, see Identifier requirements.",
        "A full specification for the new structured type to use for the column. For example, to specify a structured ARRAY of NUMBER elements,\nuse ARRAY(NUMBER).",
        "For more information, see Specifying a structured type and the examples on this page.",
        "Specifies that the command should rename one or more keys in a structured OBJECT.\nThe old and new keys must differ only in name, and must have exactly the same hierarchy and data types. Renaming keys doesn\u2019t change\nthe field IDs.",
        "Renaming keys can\u2019t be combined with any other modifications to structured types in an Iceberg table.",
        "See the RENAME FIELDS example.",
        "A role used to execute this SQL command must have the following\nprivileges at a minimum:",
        "Privilege",
        "Object",
        "Notes",
        "OWNERSHIP",
        "Iceberg table",
        "OWNERSHIP is a special privilege on an object that is automatically granted to the role that created the object, but can also be transferred using the GRANT OWNERSHIP command to a different role by the owning role (or any role with the MANAGE GRANTS privilege).",
        "USAGE",
        "External volume",
        "The USAGE privilege on the parent database and schema are required to perform operations on any object in a schema.",
        "For instructions on creating a custom role with a specified set of privileges, see Creating custom roles.",
        "For general information about roles and privilege grants for performing SQL actions on\nsecurable objects, see Overview of Access Control.",
        "This command doesn\u2019t support the following actions:",
        "Evolving a structured type into a non-structured type (or the other way around).",
        "Setting a null constraint on a structured ARRAY element or on the key-value pairs of a structured MAP.",
        "Using RENAME FIELDS to rename a key that is part of the clustering key for the table.",
        "Altering the NULL constraint for a structured OBJECT.",
        "For tables that use data access policies,\nmake sure the new data type for a column is compatible with the argument type of your data access policy. Otherwise, querying the table\nmight fail. For example, if you add a key to a structured OBJECT column, you must alter your policy or\ncreate a new policy and apply it to your table.",
        "Regarding metadata:",
        "Attention",
        "Customers should ensure that no personal data (other than for a User object), sensitive data, export-controlled data, or other regulated data is entered as metadata when using the Snowflake service. For more information, see Metadata fields in Snowflake.",
        "You can evolve the type for a field in a structured type.\nEvolving the type means widening it into a larger, related Iceberg data type.",
        "Snowflake supports the following type evolutions, in accordance with the\nApache Iceberg spec:",
        "Changing a field of type int into type long.",
        "Changing a field of type float into type double.",
        "Changing a field of type decimal(p,s) into type decimal(p',s) where p is smaller than p'.",
        "To evolve a field type, use the Snowflake syntax for specifying a structured type.\nYou can use the Iceberg data type in your specification.\nFor example, the following statement changes the element type in a structured ARRAY column to (Iceberg) type long.",
        "For information about how Iceberg data types map to Snowflake data types, see Data types for Apache Iceberg\u2122 tables.",
        "To rearrange the order of keys in a structured OBJECT, specify a new order in your\nALTER ICEBERG TABLE statement. Rearranging the key order does not affect the data in the OBJECT.",
        "For example, consider the following CREATE ICEBERG TABLE statement.\nThe table has one column (column_1) of type OBJECT with two keys in a specified order:",
        "The following command changes the order of the keys so that key_b comes before key_a:",
        "You can add keys to a structured OBJECT.\nA new key can use any of the data types supported for Iceberg tables for its value.",
        "Note",
        "You can\u2019t set a null constraint when you add a key, because Snowflake sets the value of the key to NULL for\nall existing rows in the table.",
        "For example, consider the following CREATE ICEBERG TABLE statement.\nThe table has one column (column_1) of type OBJECT with one key (key_1):",
        "The following command adds a key named key_2 to column_1:",
        "Note",
        "Dropping a key whose value is a structured data type that belongs to a clustering key isn\u2019t supported.",
        "To drop a key from a structured OBJECT, use the ALTER ICEBERG TABLE \u2026 ALTER COLUMN command\nto redefine the OBJECT.",
        "Dropping the key removes the key and its value from all rows in the table.",
        "For example, consider the following CREATE ICEBERG TABLE statement.\nThe table has one column (column_1) of type OBJECT with two keys:",
        "The following command drops the key named key_2 by omitting it from the OBJECT specification:",
        "To change the key names in a structured OBJECT, use the RENAME FIELDS keywords.",
        "For example, consider the following CREATE ICEBERG TABLE statement:",
        "The following command uses RENAME FIELDS to rename the keys in column_1:",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}