{
    "url": "https://docs.snowflake.com/en/sql-reference/external-functions-creating-gcp-ui-proxy-service",
    "title": "Step 2: Create the proxy service (Google Cloud API Gateway) in the console | Snowflake Documentation",
    "paragraphs": [
        "Snowflake does not send data (HTTP POST requests) directly to a remote service. Instead, Snowflake sends the data to a proxy service that\nrelays the data from Snowflake to the remote service (i.e. GCP Cloud Function) and back again.",
        "This topic provides instructions for creating and configuring a Google Cloud API Gateway for use as the proxy service for your\nexternal function.",
        "Step 1: Create the remote service (Google Cloud Function) in the console",
        "For more detailed information about using the Google Cloud Console to perform the tasks described in this topic, see the following sections\nin the Quickstart for Deploying an API/API Gateway using the Google Cloud Console:",
        "Creating an API definition",
        "Creating a gateway",
        "If you prefer to use the command line instead of the Google Cloud Console, see the following sections in the\nQuickstart for Deploying an API/API Gateway using gcloud:",
        "Creating an API",
        "Creating an API config",
        "Deploy an API to a gateway",
        "If you use the Google documentation, remember to copy the required information (e.g. Gateway URL) to your tracking worksheet.",
        "On your local file system, create and customize a YAML-formatted configuration file that specifies the API you are creating. The file\nshould have the .yaml or .yml extension.",
        "Configuration file template:",
        "Fill in or update the following fields:",
        "Replace <PATH> with a unique name. This will be incorporated into URLs, so use only characters that are valid in URLs. For\nexample, enter demo-func-resource.",
        "Note that, unlike the other fields in this configuration file, enter the <PATH> value before the colon, rather than\nafter the colon. For example, the following is correct:",
        "The path name should not contain any\npath parameters.\nGoogle supports path parameters when\nsetting the path to a URL.\nHowever, Snowflake does not support path parameters in the corresponding URL specified in the CREATE EXTERNAL FUNCTION statement.",
        "Copy the path (e.g. demo-func-resource) from the immediately preceding step to the Path Suffix field\nin your tracking worksheet.",
        "Find the address field under the x-google-backend field, and replace <HTTP ENDPOINT TO ROUTE REQUEST TO> with the\nvalue from the Cloud Function Trigger URL field in your tracking worksheet. The result should look similar to:",
        "The URL should not be enclosed in quotation marks.",
        "The URL does not need to be an endpoint hosted by Google; it can be the path to any HTTP endpoint.",
        "If you selected Require HTTPS in Step 1: Create the remote service (Google Cloud Function) in the console, then ensure\nthat the URL you enter into the address field starts with https.",
        "Optionally, you can update any of the following values:",
        "title in the info section.",
        "description in the info section.",
        "operationId in the post subsection of the paths section.",
        "summary in the post subsection of the paths section.",
        "Review your sample configuration file. It should look similar to the following:",
        "Note",
        "This configuration will leave your gateway open to the public until you secure it in Step 5: Create a GCP security policy for the proxy service in the console of this tutorial.",
        "Optionally, to make sure that no one can use your gateway in the meantime, add a security definition to the configuration file that uses a temporary,\ninvalid service account name (google_service_account) as described in this optional step. Adding this security definition in this step means that you cannot test your\nexternal function until you finish configuring security in Step 5: Create a GCP security policy for the proxy service in the console. Specifically, the instruction\nto test your external function in Step 4: Create the external function for GCP in Snowflake will not work yet.",
        "Add the following securityDefinitions section immediately above the schemes section of the configuration file and at the same indentation level.",
        "Replace <security-def-name> with a unique security definition name (e.g. snowflakeAccess01).",
        "Record this name in the Security Definition Name field in your tracking worksheet.",
        "Update the post: section of the configuration file to reference the security definition that you created above. Below the operationId field, add:",
        "Make sure it is indented at the same level as the operationId field.",
        "Replace <security-def-name> with the value from the Security Definition Name field in your tracking worksheet.",
        "Make sure to include a hyphen and a blank prior to the security definition name, as shown above.",
        "Make sure to include the empty square braces ([]) after the colon.",
        "For example:",
        "Save the configuration file.",
        "Record the file path and name in the Configuration File Name field in your tracking worksheet.",
        "To learn more about the API configuration file, see the following GCP documentation:",
        "OpenAPI overview .",
        "Create an API definition .",
        "To create an API Gateway:",
        "Create a GCP API.",
        "Create an API Config.",
        "Create a Gateway with the API Config.",
        "This step creates a GCP API, which is a container that can contain one or more API Gateways and one or more configuration files:",
        "If you have not already done so, go to the Google Cloud API Gateway screen by clicking on the GCP menu and selecting\nAPI Gateway.",
        "Click on CREATE GATEWAY.",
        "Enter the Display Name and the API ID (e.g. demo-api-display-name-for-external-function1 and\ndemo-api-id-for-external-function1).",
        "You do not need to record these values in your tracking worksheet because you do not need to enter these later to create your\nexternal function. However, you might want to record the API ID so that you can delete it when you are done with it.",
        "Upload your configuration file to the console, which creates an API Config.",
        "Scroll to the API Config section of the screen.",
        "Search for the field that contains Upload an API Spec.",
        "Click on BROWSE and select your configuration file. The name of your configuration file was recorded in\nthe Configuration File Name field in your tracking worksheet.",
        "Enter a display name into the field that contains Display Name.",
        "Select a service account.",
        "If you created the sample function, then in the field that contains Select a Service Account, select\nApp Engine default service account.",
        "If you are creating a function to use in production (rather than as a sample), you might choose a different service account.",
        "The selected service account must have appropriate privileges, including privileges to call the Cloud Function.",
        "Scroll to the Gateway details section of the screen.",
        "Enter the Display Name of the new API Gateway.",
        "Click in the Location field and select the appropriate region (e.g. us-central1).",
        "Click on CREATE GATEWAY.",
        "This takes you to the APIs screen and shows you a list of your APIs.",
        "If your new API is not visible immediately, wait a few minutes, then click the Refresh button.",
        "Copy the value of the API\u2019s Managed Service to the Managed Service Identifier field in your tracking worksheet.",
        "At this point, you should still see a list of your APIs. Click on the name of the API.",
        "You should see 4 tabs: OVERVIEW, DETAILS, CONFIGS, and GATEWAYS.",
        "Click on the GATEWAYS tab.",
        "Copy the Gateway URL to the Gateway Base URL field in your tracking worksheet.",
        "Step 3: Create the API integration for GCP in Snowflake",
        "Was this page helpful?",
        "On this page"
    ]
}