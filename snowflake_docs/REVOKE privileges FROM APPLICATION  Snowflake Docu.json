{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/revoke-privilege-application",
    "title": "REVOKE <privileges> FROM APPLICATION | Snowflake Documentation",
    "paragraphs": [
        "Revokes one or more access privileges on a securable object from an application. The privileges that can be revoked are\nobject-specific.",
        "For more details about roles and securable objects, see Overview of Access Control.",
        "GRANT <privileges> \u2026 TO APPLICATION",
        "Where:",
        "For more information about the privileges supported for each object type, see Access control privileges.",
        "Specifies the identifier for the object on which the privileges are granted.",
        "Specifies the type of object for schema-level objects.",
        "ALERT",
        "DYNAMIC TABLE",
        "EVENT TABLE",
        "EXTERNAL TABLE",
        "FILE FORMAT",
        "FUNCTION",
        "MASKING POLICY",
        "MATERIALIZED VIEW",
        "NETWORK RULE",
        "PACKAGES POLICY",
        "PASSWORD POLICY",
        "PIPE",
        "PROCEDURE",
        "ROW ACCESS POLICY",
        "SECRET",
        "SESSION POLICY",
        "SEQUENCE",
        "STAGE",
        "STREAM",
        "TABLE",
        "TAG",
        "TASK",
        "VIEW",
        "Plural form of object_type (e.g. TABLES, VIEWS).",
        "Bulk grants on pipes are not allowed.",
        "Specifies the identifier for the recipient application (the role to which the privileges are granted).",
        "You can use an active role that meets either of the following criteria, or a\nhigher role, to revoke privileges on an object from other application\nroles:",
        "The role is identified as the grantor of the privilege in the GRANTED_BY column in the SHOW GRANTS output.",
        "If you have multiple instances of a privilege grant on the specified object, only the instances granted by the active grantor role\nare revoked.",
        "The role has the global MANAGE GRANTS privilege.",
        "If you have multiple instances of a privilege grant on the specified object, all instances are revoked.",
        "Note that only the SECURITYADMIN system role and higher have the MANAGE GRANTS privilege by default; however, the privilege can be\ngranted to custom roles.",
        "In managed access schemas (schemas created using the CREATE SCHEMA \u2026 WITH MANAGED ACCESS syntax), only the schema owner (the\nrole with the OWNERSHIP privilege on the schema) or a role with the global MANAGE GRANTS privilege, or a higher role, can revoke\nprivileges on objects in the schema.",
        "Privileges cannot be granted or revoked directly on any class. You can, however, create an instance of a class and\nrevoke instance roles from an\naccount role. Revoke the CREATE <class_name> privilege on the schema to prevent a role from creating an instance of a\nclass.",
        "A privilege can be granted to a role multiple times by different grantors. A REVOKE <privilege> statement only revokes grants for which\nthe active role, or a lower role in a hierarchy, is the grantor. Any additional grants of a specified privilege by other grantors are\nignored.",
        "Also note that a REVOKE <privilege> statement is successful even if no privileges are revoked. A REVOKE <privilege> statement only\nreturns an error if a specified privilege has dependent grants and the CASCADE clause is omitted in the statement.",
        "Multiple privileges can be specified for the same object type in a single GRANT statement (with each privilege separated by commas),\nor the special ALL [ PRIVILEGES ] keyword can be used to grant all applicable privileges to the specified object type. Note,\nhowever, that only privileges held and grantable by the role executing the GRANT command are actually granted to the target role.\nA warning message is returned for any privileges that could not be granted.",
        "You cannot specify this keyword for tags.",
        "For databases, the IMPORTED PRIVILEGES privilege only applies to shared databases (i.e. databases created from a share). For more\ndetails, see Consume imported data.",
        "For schemas and objects in schemas, an option is provided to grant privileges on all objects of the same type within the container\n(database or schema). This is a convenience option; internally, the command is expanded into a series of individual GRANT commands\non each object. Only objects that currently exist within the container are affected.",
        "However, note that, in the Snowflake model, bulk granting of privileges is not a recommended practice. Instead, Snowflake recommends\ncreating a shared role and using the role to create objects that are automatically accessible to all users who have been granted the\nrole.",
        "For stages:",
        "USAGE only applies to external stages.",
        "READ | WRITE only applies to internal stages. In addition, to grant the WRITE privilege on an internal stage, the READ privilege\nmust first be granted on the stage.",
        "For more details about external and internal stages, see CREATE STAGE.",
        "When granting privileges on an individual UDF, you must specify the data types for the arguments, if any, for the UDF in the form of\nudf_name ( [ arg_data_type , ... ] ). This is required because Snowflake uses argument data types to resolve UDFs that\nhave the same name within a schema. For more details, see\nUser-defined functions overview.",
        "When granting privileges on an individual stored procedure, you must specify the data types for the arguments, if any, for the\nprocedure in the form of procedure_name ( [ arg_data_type , ... ] ). This is required because Snowflake uses argument\ndata types to resolve stored procedures that have the same name within a schema.",
        "For more information, see managed access schemas.",
        "Revoke the SELECT privilege on a view from an application:",
        "Was this page helpful?",
        "On this page"
    ]
}