{
    "url": "https://docs.snowflake.com/en/developer-guide/odbc/odbc-api",
    "title": "ODBC Driver API support | Snowflake Documentation",
    "paragraphs": [
        "The Snowflake ODBC driver supports version 3.52 of the ODBC API. This topic lists the ODBC routines relevant to Snowflake and indicates whether they are supported. The routines are organized into\ncategories based on the function they perform.",
        "For the complete API reference, see the Microsoft ODBC Programmer\u2019s Reference.",
        "Function Name",
        "Supported",
        "Notes",
        "SQLAllocHandle",
        "\u2714",
        "SQLConnect",
        "\u2714",
        "SQLDriverConnect",
        "\u2714",
        "SQLAllocEnv",
        "\u2714",
        "Supported by the Snowflake driver, but deprecated in ODBC API version 3.x.",
        "SQLAllocConnect",
        "\u2714",
        "Supported by the Snowflake driver, but deprecated in ODBC API version 3.x.",
        "SQLBrowseConnect",
        "\u2714",
        "Function Name",
        "Supported",
        "Notes",
        "SQLDataSources",
        "\u2714",
        "SQLDrivers",
        "\u2714",
        "SQLGetInfo",
        "\u2714",
        "SQLGetFunctions",
        "\u2714",
        "SQLGetTypeInfo",
        "\u2714",
        "Function Name",
        "Supported",
        "Notes",
        "SQLSetConnectAttr",
        "\u2714",
        "Setting SQL_ATTR_METADATA_ID only affects the SQLTables and SQLColumns functions (and not the other supported catalog functions).",
        "SQLGetConnectAttr",
        "\u2714",
        "Read-only mode is not supported. SQL_MODE_READ_ONLY is passed to the driver, but Snowflake still writes to the database. . . Also, some attributes were introduced post API version 3.52: SQL_ATTR_ASYNC_DBC_EVENT, SQL_ATTR_ASYNC_DBC_FUNCTIONS_ENABLE, SQL_ATTR_ASYNC_DBC_PCALLBACK, SQL_ATTR_ASYNC_DBC_PCONTEXT, SQL_ATTR_DBC_INFO_TOKEN.",
        "SQLSetConnectOption",
        "\u2714",
        "Supported by the Snowflake driver, but deprecated in ODBC API version 3.x.",
        "SQLGetConnectOption",
        "\u2714",
        "Supported by the Snowflake driver, but deprecated in ODBC API version 3.x.",
        "SQLSetEnvAttr",
        "\u2714",
        "SQLGetEnvAttr",
        "\u2714",
        "The SQL_ATTR_CONNECTION_POOLING attribute was introduced after ODBC API version 3.52 and is not supported.",
        "SQLSetStmtAttr",
        "\u2714",
        "SQL_ATTR_CURSOR_SCROLLABLE only supports a SQL_NONSCROLLABLE value. . SQL_ATTR_USE_BOOKMARKS only supports a SQL_UB_OFF value. . . For compatibility with third-party tools, SQL_ATTR_ENABLE_AUTO_IPD defaults to true, even though the ODBC standard says it should default to false. To change the default value to false, set the EnableAutoIpdByDefault parameter to false. . . Setting SQL_ATTR_METADATA_ID only affects the SQLTables and SQLColumns functions (and not the other supported catalog functions). . . Unsupported attributes: SQL_ATTR_SIMULATE_CURSOR, SQL_ATTR_FETCH_BOOKMARK_PTR, SQL_ATTR_KEYSET_SIZE.",
        "SQLGetStmtAttr",
        "\u2714",
        "In addition to the standard attributes, the Snowflake implementation supports the attribute SQL_SF_STMT_ATTR_LAST_QUERY_ID, which allows the user to retrieve the most recent query ID associated with the specified statement handle. A partial example is in the Examples section below.",
        "SQLSetStmtOption",
        "\u2714",
        "Supported by the Snowflake driver, but deprecated in ODBC API version 3.x. Replaced by SQLSetStmtAttr.",
        "SQLGetStmtOption",
        "\u2714",
        "Supported by the Snowflake driver, but deprecated in ODBC API version 3.x. Replaced by SQLGetStmtAttr.",
        "SQLParamOptions",
        "\u2714",
        "Supported by the Snowflake driver, but deprecated in ODBC API version 3.x. Replaced by SQLSetStmtAttr.",
        "Each of the preceding functions has a corresponding function that accepts wide characters (unicode). Each such\nunicode function has the name shown above, followed by \u201cW\u201d. For example, the function SQLGetStmtAttr, which\naccepts a char array as the third parameter, has a corresponding function named SQLGetStmtAttrW, which accepts a\nwchar array as the third parameter.",
        "SQLSetConnectAttr",
        "This method supports two Snowflake-specific attributes:",
        "Attribute Name",
        "Description",
        "SQL_SF_CONN_ATTR_APPLICATION",
        "This overrides the value specified by the APPLICATION setting in the registry or .ini file.",
        "SQL_SF_CONN_ATTR_PRIV_KEY",
        "This is an EVP_PKEY* pointer that points to an in-memory copy of the private key. This overrides the PRIV_KEY_FILE and PRIV_KEY_PWD settings in the registry or .ini file. Snowflake recommends using this attribute to set the private key.",
        "Function Name",
        "Supported",
        "Notes",
        "SQLGetDescField",
        "\u2714",
        "SQLGetDescRec",
        "\u2714",
        "SQLSetDescField",
        "\u2714",
        "SQLSetDescRec",
        "\u2714",
        "Function Name",
        "Supported",
        "Notes",
        "SQLAllocStmt",
        "\u2714",
        "Supported by the Snowflake driver, but deprecated in ODBC API version 3.x.",
        "SQLBindParameter",
        "\u2714",
        "SQLPrepare",
        "\u2714",
        "SQLGetCursorName",
        "\u2714",
        "SQLSetCursorName",
        "\u2714",
        "SQLSetScrollOptions",
        "\u2714",
        "Supported by the Snowflake driver, but deprecated ODBC API.",
        "SQLSetParam",
        "\u2714",
        "Supported by the Snowflake driver, but deprecated in ODBC API version 2.x. Replaced by SQLBindParameter.",
        "Note",
        "There is an upper limit to the size of data that you can bind. For details, see Limits on Query Text Size.",
        "SQL Statements Supported for Preparation lists the types of SQL statements that are supported for preparation.",
        "Function Name",
        "Supported",
        "Notes",
        "SQLExecute",
        "\u2714",
        "SQLExecDirect",
        "\u2714",
        "SQLNativeSql",
        "\u2714",
        "SQLDescribeParam",
        "\u2714",
        "Regardless of the data type bound to the parameter, Snowflake performs a server-side conversion and returns a VARCHAR with a max length of 16777216.",
        "SQLNumParams",
        "\u2714",
        "SQLParamData",
        "\u2714",
        "Support for this function was added in version 2.23.3 of the ODBC Driver.",
        "SQLPutData",
        "\u2714",
        "Support for this function was added in version 2.23.3 of the ODBC Driver.",
        "Function Name",
        "Supported",
        "Notes",
        "SQLBindCol",
        "\u2714",
        "The ODBC driver does not currently support semi-structured data, including VARIANT, OBJECT and ARRAY data types.",
        "SQLError",
        "\u2714",
        "Supported by the Snowflake driver, but deprecated in ODBC API version 3.x. Replaced by SQLGetDiagRec.",
        "SQLGetData",
        "\u2714",
        "SQLGetDiagField",
        "\u2714",
        "SQLGetDiagRec",
        "\u2714",
        "SQLRowCount",
        "\u2714",
        "SQLNumResultCols",
        "\u2714",
        "SQLDescribeCol",
        "\u2714",
        "SQLColAttribute",
        "\u2714",
        "For GEOGRAPHY columns, SQL_DESC_TYPE_NAME returns GEOGRAPHY. Note that other descriptors (e.g. SQL_DESC_CONCISE_TYPE) do not indicate that the column type is GEOGRAPHY.",
        "SQLColAttributes",
        "\u2714",
        "Supported by the Snowflake driver, but deprecated in ODBC API version 2.x. Replaced by SQLColAttribute.",
        "SQLFetch",
        "\u2714",
        "SQLFetchScroll",
        "\u2714",
        "The FetchOrientation argument supports the SQL_FETCH_NEXT value only. All other types of fetch fail.",
        "SQLExtendedFetch",
        "Replaced by SQLFetchScroll in API version 3.x driver.",
        "SQLSetPos",
        "Snowflake does not support the functionality.",
        "SQLBulkOperations",
        "Snowflake does not support the functionality.",
        "Function Name",
        "Supported",
        "Notes",
        "SQLColumnPrivileges",
        "Returns an empty results set.",
        "SQLColumns",
        "\u2714",
        "SQLForeignKeys",
        "\u2714",
        "SQLPrimaryKeys",
        "\u2714",
        "SQLProcedureColumns",
        "\u2714",
        "SQLProcedures",
        "\u2714",
        "In the result set, the NUM_INPUT_PARAMS column contains the number of arguments for the procedure (the value of the max_num_arguments column in the output of the SHOW PROCEDURES command). . . The NUM_OUTPUT_PARAMS column contains NULL values because stored procedures in Snowflake don\u2019t support output parameters. . . The NUM_RESULT_SETS column also contains NULL values because stored procedures in Snowflake don\u2019t return result sets. . . The PROCEDURE_TYPE column always contains SQL_PT_FUNCTION because stored procedures in Snowflake always return a value.",
        "SQLSpecialColumns",
        "Returns an empty results set.",
        "SQLStatistics",
        "Returns an empty results set.",
        "SQLTablePrivileges",
        "Returns an empty results set.",
        "SQLTables",
        "\u2714",
        "If the parameter passed to the function is \u201cTABLE\u201d, the function returns all types of tables, including transient tables and temporary tables. . . If the parameter passed to the function is \u201cVIEW\u201d, the function returns all types of views, including materialized views. . . If the parameter passed to the function is \u201cTABLE, VIEW\u201d or \u201c%\u201d, the function returns information about all types of tables and all types of views.",
        "If the name passed to the catalog function has an invalid character, or if the name does not match any database object, the function returns an empty result set.",
        "Setting SQL_ATTR_METADATA_ID only affects the SQLTables, SQLColumns, and SQLProcedures functions.",
        "Function Name",
        "Supported",
        "Notes",
        "SQLFreeStmt",
        "\u2714",
        "SQLCloseCursor",
        "\u2714",
        "SQLCancel",
        "\u2714",
        "SQLEndTran",
        "\u2714",
        "SQLTransact",
        "\u2714",
        "Supported by the Snowflake driver, but deprecated in ODBC API version 3.x. Replaced by SQLEndTran.",
        "Function Name",
        "Supported",
        "Notes",
        "SQLCancelHandle",
        "Introduced into the API after version 3.52.",
        "SQLDisconnect",
        "\u2714",
        "SQLFreeHandle",
        "\u2714",
        "SQLFreeConnect",
        "\u2714",
        "Supported by the Snowflake driver, but deprecated in ODBC API version 3.x.",
        "SQLFreeEnv",
        "\u2714",
        "Supported by the Snowflake driver, but deprecated in ODBC API version 3.x.",
        "Some SQL data types supported by Snowflake have no direct mapping in ODBC (e.g. TIMESTAMP_*tz, VARIANT). To enable the ODBC driver to work with\nthe unsupported data types, the header file shipped with the driver includes definitions for the following custom data types:",
        "The following code demonstrates sample usage of the custom data types:",
        "This section provides examples of using the API.",
        "Retrieving the last query ID is a Snowflake extension to the ODBC standard.",
        "To retrieve the last query ID, call the function SQLGetStmtAttr (or SQLGetStmtAttrW), passing the attribute\nSQL_SF_STMT_ATTR_LAST_QUERY_ID and a character array large enough to hold the query ID.",
        "The example below shows how to retrieve the query ID for a query:",
        "If you are executing on Linux or macOS, call SQLGetStmtAttrW and pass parameters\nof the appropriate data type (for example, \u201cwchar\u201d rather than \u201cchar\u201d).",
        "When retrieving data with SQLFetch, you can use the SQLGetData or SQLBindCol functions to access\nthe contents of the cells. In most cases, using SQLBindCol provides better performance because it reduces the number\nof ODBC calls you need to make to retrieve data and because it lets you take advantage of copying data in-memory.",
        "The following example uses the SQLGetData function to retrieve cell values from the data buffer returned\nby SQLFetch. Notice that you need to call SQLGetData once for each cell in the row.",
        "The following example uses the SQLBindCol function to retrieve cell values from the data buffer returned by\nSQLFetch. It creates an in-memory buffer for the number of columns in a row and then makes a single\nSQLBindCol call to bind the application buffers to the result set. Finally, it calls SQLFetch once per row and\nloads the cell values into the buffer. This approach can significantly increase the speed and efficiency of retrieving data.",
        "You can improve performance even more by fetching multiple rows in a single SQLFetch call, which reduces\nthe number of ODBC SQLFetch calls needed to process all the rows of a query table.",
        "The following example:",
        "Determines the number of columns in the result set.",
        "Creates an in-memory array to store the data from multiple columns.",
        "Calls SQLBindCol for each column to bind the application buffers to the result set.",
        "Calls SQLFetch to get the specified number of rows (100) and processes the data in the in-memory buffer without making ODBC calls, until the end of the query table is reached.",
        "This approach can significantly increase the speed and efficiency of retrieving data. For a query table with 20 columns and 1000 rows, this example would make only 20 SQLBindCol and 10 SQLFetch calls instead of 20000 SQLGetData calls to load all of the table data.",
        "Was this page helpful?",
        "On this page"
    ]
}