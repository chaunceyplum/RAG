{
    "url": "https://docs.snowflake.com/en/user-guide/tutorials/script-data-load-transform-parquet",
    "title": "Tutorial: Loading and unloading Parquet data | Snowflake Documentation",
    "paragraphs": [
        "This tutorial describes how you can upload Parquet data\nby transforming elements of a staged Parquet file directly into table columns using\nthe COPY INTO <table> command. The tutorial also describes how you can use the\nCOPY INTO <location> command to unload table data into a Parquet file.",
        "For this tutorial you need to:",
        "Download a Snowflake provided Parquet data file.",
        "Create a database, a table, and a virtual warehouse.",
        "Database, table, and virtual warehouse are basic Snowflake objects required for most Snowflake activities.",
        "To download the sample Parquet data file, click cities.parquet.\nAlternatively, right-click the link and save the\nlink/file to your local file system.",
        "The tutorial assumes you unpacked files in to the following directories:",
        "Linux/macOS: /tmp/load",
        "Windows: C:\\tempload",
        "The Parquet data file includes sample continent data. The following is a representative example:",
        "The following commands create objects specifically for use with this tutorial.\nWhen you have completed the tutorial, you can drop these objects.",
        "Note these commands create a temporary table. Temporary tables persist only for\nthe duration of the user session and is not visible to other users.",
        "Execute the CREATE FILE FORMAT command\nto create the sf_tut_parquet_format file format.",
        "TYPE = 'parquet' indicates the source file format type. CSV is the default file format type.",
        "Execute the CREATE STAGE command to create the\ninternal sf_tut_stage stage.",
        "Similar to temporary tables, temporary stages are automatically dropped\nat the end of the session.",
        "Execute the PUT command to upload the parquet file from your local file system to the\nnamed stage.",
        "Linux or macOS",
        "Windows",
        "Copy the cities.parquet staged data file into the CITIES table.",
        "Note the following:",
        "$1 in the SELECT query refers to the single column where the Parquet\ndata is stored.",
        "The query casts each of the Parquet element values it retrieves to specific column types.",
        "Execute the following query to verify data is copied.",
        "The query returns the following result:",
        "Unload the CITIES table into another Parquet file.",
        "Note",
        "By default, Snowflake optimizes table columns in unloaded Parquet data files by\nsetting the smallest precision that accepts all of the values. If you prefer\nconsistent output file schema determined by the \u201clogical\u201d column data types (i.e.\nthe types in the unload SQL query or source table), set the\nENABLE_UNLOAD_PHYSICAL_TYPE_OPTIMIZATION\nsession parameter to FALSE.",
        "Note the following:",
        "The file_format = (type = 'parquet') specifies parquet as the format of the data file on the stage. When the Parquet file type is specified, the COPY INTO <location> command unloads data to a single column by default.",
        "The header=true option directs the command to retain the column names in the output file.",
        "In the nested SELECT query:",
        "The FLATTEN function first flattens the city column array elements into separate columns.",
        "The LATERAL modifier joins the output of the FLATTEN function with information\noutside of the object - in this example, the continent and country.",
        "Execute the following query to verify data is copied into staged Parquet file.",
        "The query returns the following results (only partial result is shown):",
        "After you verify that you successfully copied data from your stage into the tables,\nyou can remove data files from the internal stage using the REMOVE\ncommand to save on data storage.",
        "Execute the following DROP <object> commands to return your system to its state before you began the tutorial:",
        "Dropping the database automatically removes all child database objects such as tables.",
        "Was this page helpful?"
    ]
}