{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-python-api/reference/latest/_autosummary/snowflake.core.role.RoleResource",
    "title": "snowflake.core.role.RoleResource | Snowflake Documentation",
    "paragraphs": [
        "Bases: ObjectReferenceMixin[RoleCollection]",
        "Represents a reference to a Snowflake role.",
        "With this role reference, you can delete roles.",
        "Attributes",
        "Methods",
        "The delete method is deprecated; use drop instead.",
        "Drop this role.",
        "if_exists (bool, optional) \u2013 Check the existence of this role before dropping it.\nDefault is None, which is equivalent to False.",
        "Examples",
        "Deleting a role using its reference:",
        "Grant privileges on all future securables matching the criteria to this role.",
        "privileges (List[str]) \u2013 The list of privileges to be granted.",
        "securable_type (str) \u2013 The type of securable on which the privileges would be granted.",
        "containing_scope (ContainingScope) \u2013 The criteria to match the securables.",
        "grant_option (bool, optional) \u2013 If True, the grantee can grant the privilege to others. Default is None which means False.",
        "Examples",
        "Using a role reference to grant privileges on all future schemas in a database to it:",
        "Grant privileges on a securable to this role.",
        "privileges (List[str]) \u2013 The list of privileges to be granted.",
        "securable_type (str) \u2013 The type of securable on which the privileges would be granted.",
        "securable (Securable, optional) \u2013 The securable on which the privileges would be granted. Default is None.",
        "grant_option (bool, optional) \u2013 If True, the grantee can grant the privilege to others. Default is None which means False.",
        "Examples",
        "Using a role reference to grant privileges to it:",
        "Grant privileges on all securables matching the criteria to this role.",
        "privileges (List[str]) \u2013 The list of privileges to be granted.",
        "securable_type (str) \u2013 The type of securable on which the privileges would be granted.",
        "containing_scope (ContainingScope) \u2013 The criteria to match the securables.",
        "grant_option (bool, optional) \u2013 If True, the grantee can grant the privilege to others. Default is None which means False.",
        "Examples",
        "Using a role reference to grant privileges on all schemas in a database to it:",
        "Grant a role to this role.",
        "role_type (str) \u2013 The type of role which would be granted.",
        "role (Securable) \u2013 The role which would be granted.",
        "Examples",
        "Using a role reference to grant a role to it:",
        "List future grants to this role.",
        "Lists all privileges on new (i.e. future) objects of a specified type in a database\nor schema granted to the role.",
        "show_limit (int, optional) \u2013 Limit of the maximum number of rows returned by iter(). The default is None, which behaves equivalently\nto show_limit=10000. This value must be between 1 and 10000.",
        "Examples",
        "Using a role reference to list future grants to it:",
        "List grants of this role.",
        "Lists all users and roles to which the role has been granted.",
        "show_limit (int, optional) \u2013 Limit of the maximum number of rows returned by iter(). The default is None, which behaves equivalently\nto show_limit=10000. This value must be between 1 and 10000.",
        "Examples",
        "Using a role reference to list grants of it:",
        "List grants on this role.",
        "Lists all privileges that have been granted on the role.",
        "show_limit (int, optional) \u2013 Limit of the maximum number of rows returned by iter(). The default is None, which behaves equivalently\nto show_limit=10000. This value must be between 1 and 10000.",
        "Examples",
        "Using a role reference to list grants on it:",
        "List grants to this role.",
        "Lists all privileges and roles granted to the role.",
        "show_limit (int, optional) \u2013 Limit of the maximum number of rows returned by iter(). The default is None, which behaves equivalently\nto show_limit=10000. This value must be between 1 and 10000.",
        "Examples",
        "Using a role reference to list grants to it:",
        "Revoke privileges on all future securables matching the criteria from this role.",
        "privileges (List[str]) \u2013 The list of privileges to be revoked.",
        "securable_type (str) \u2013 The type of securable on which the privileges would be revoked.",
        "containing_scope (ContainingScope) \u2013 The criteria to match the securables.",
        "mode (DeleteMode, optional) \u2013",
        "One of the following enum values.",
        "DeleteMode.restrict: If the privilege being revoked has been re-granted to another role,\nthe REVOKE command fails.",
        "DeleteMode.cascade: If the privilege being revoked has been re-granted, the REVOKE command\nrecursively revokes these dependent grants. If the same privilege on an object has been granted\nto the target role by a different grantor (parallel grant), that grant is not affected and the\ntarget role retains the privilege.",
        "Default is None which is equivalent to DeleteMode.restrict.",
        "",
        "Examples",
        "Using a role reference to revoke privileges on all future schemas in a database from it:",
        "Revoke grant option for privileges on all future securables matching the criteria from this role.",
        "privileges (List[str]) \u2013 The list of privileges to be revoked.",
        "securable_type (str) \u2013 The type of securable on which the privileges would be revoked.",
        "containing_scope (ContainingScope) \u2013 The criteria to match the securables.",
        "mode (DeleteMode, optional) \u2013",
        "One of the following enum values.",
        "DeleteMode.restrict: If the privilege being revoked has been re-granted to another role,\nthe REVOKE command fails.",
        "DeleteMode.cascade: If the privilege being revoked has been re-granted, the REVOKE command\nrecursively revokes these dependent grants. If the same privilege on an object has been granted\nto the target role by a different grantor (parallel grant), that grant is not affected and the\ntarget role retains the privilege.",
        "Default is None which is equivalent to DeleteMode.restrict.",
        "",
        "Examples",
        "Using a role reference to revoke grant option for privileges on all future schemas in a database from it:",
        "Revoke grant option for privileges on a securable from this role.",
        "privileges (List[str]) \u2013 The list of privileges to be revoked.",
        "securable_type (str) \u2013 The type of securable on which the privileges would be revoked.",
        "securable (Securable, optional) \u2013 The securable on which the privileges would be revoked. Default is None.",
        "mode (DeleteMode, optional) \u2013",
        "One of the following enum values.",
        "DeleteMode.restrict: If the privilege being revoked has been re-granted to another role,\nthe REVOKE command fails.",
        "DeleteMode.cascade: If the privilege being revoked has been re-granted, the REVOKE command\nrecursively revokes these dependent grants. If the same privilege on an object has been granted\nto the target role by a different grantor (parallel grant), that grant is not affected and the\ntarget role retains the privilege.",
        "Default is None which is equivalent to DeleteMode.restrict.",
        "",
        "Examples",
        "Using a role reference to revoke grant option for privileges from it:",
        "Revoke grant option for privileges on all securables matching the criteria from this role.",
        "privileges (List[str]) \u2013 The list of privileges to be revoked.",
        "securable_type (str) \u2013 The type of securable on which the privileges would be revoked.",
        "containing_scope (ContainingScope) \u2013 The criteria to match the securables.",
        "mode (DeleteMode, optional) \u2013",
        "One of the following enum values.",
        "DeleteMode.restrict: If the privilege being revoked has been re-granted to another role,\nthe REVOKE command fails.",
        "DeleteMode.cascade: If the privilege being revoked has been re-granted, the REVOKE command\nrecursively revokes these dependent grants. If the same privilege on an object has been granted\nto the target role by a different grantor (parallel grant), that grant is not affected and the\ntarget role retains the privilege.",
        "Default is None which is equivalent to DeleteMode.restrict.",
        "",
        "Examples",
        "Using a role reference to revoke grant option for privileges on all schemas in a database from it:",
        "Revoke privileges on a securable from this role.",
        "privileges (List[str]) \u2013 The list of privileges to be revoked.",
        "securable_type (str) \u2013 The type of securable on which the privileges would be revoked.",
        "securable (Securable, optional) \u2013 The securable on which the privileges would be revoked. Default is None.",
        "mode (DeleteMode, optional) \u2013",
        "One of the following enum values.",
        "DeleteMode.restrict: If the privilege being revoked has been re-granted to another role,\nthe REVOKE command fails.",
        "DeleteMode.cascade: If the privilege being revoked has been re-granted, the REVOKE command\nrecursively revokes these dependent grants. If the same privilege on an object has been granted\nto the target role by a different grantor (parallel grant), that grant is not affected and the\ntarget role retains the privilege.",
        "Default is None which is equivalent to DeleteMode.restrict.",
        "",
        "Examples",
        "Using a role reference to revoke privileges from it:",
        "Revoke privileges on all securables matching the criteria from this role.",
        "privileges (List[str]) \u2013 The list of privileges to be revoked.",
        "securable_type (str) \u2013 The type of securable on which the privileges would be revoked.",
        "containing_scope (ContainingScope) \u2013 The criteria to match the securables.",
        "mode (DeleteMode, optional) \u2013",
        "One of the following enum values.",
        "DeleteMode.restrict: If the privilege being revoked has been re-granted to another role,\nthe REVOKE command fails.",
        "DeleteMode.cascade: If the privilege being revoked has been re-granted, the REVOKE command\nrecursively revokes these dependent grants. If the same privilege on an object has been granted\nto the target role by a different grantor (parallel grant), that grant is not affected and the\ntarget role retains the privilege.",
        "Default is None which is equivalent to DeleteMode.restrict.",
        "",
        "Examples",
        "Using a role reference to revoke privileges on all schemas in a database from it:",
        "Revoke a role from this role.",
        "role_type (str) \u2013 The type of role which would be revoked.",
        "role (Securable) \u2013 The role which would be revoked.",
        "Examples",
        "Using a role reference to revoke a role from it:",
        "Was this page helpful?"
    ]
}