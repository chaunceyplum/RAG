{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-tasks",
    "title": "SHOW TASKS | Snowflake Documentation",
    "paragraphs": [
        "Lists the tasks for which you have access privileges. The command can be used to list tasks for the current/specified database or schema,\nor across your entire account.",
        "The output returns task metadata and properties, ordered lexicographically by database, schema, and task name (see Output in this topic\nfor descriptions of the output columns). This is important to note if you wish to filter the results using the provided filters.",
        "CREATE TASK , ALTER TASK , DROP TASK , DESCRIBE TASK",
        "Returns only a subset of the output columns:",
        "created_on",
        "name",
        "kind (shows NULL for all task records)",
        "database_name",
        "schema_name",
        "schedule",
        "Optionally filters the command output by object name. The filter uses case-insensitive pattern matching, with support for SQL\nwildcard characters (% and _).",
        "For example, the following patterns return the same results:",
        ". Default: No value (no filtering is applied to the output).",
        "Optionally specifies the scope of the command, which determines whether the command lists records only for the current/specified database or schema, or across your entire account.",
        "The APPLICATION and APPLICATION PACKAGE keywords are not required, but they specify the scope for the named Snowflake Native App.",
        "If you specify the keyword ACCOUNT, then the command retrieves records for all schemas in all databases\nof the current account.",
        "If you specify the keyword DATABASE, then:",
        "If you specify a db_name, then the command retrieves records for all schemas of the specified database.",
        "If you do not specify a db_name, then:",
        "If there is a current database, then the command retrieves records for all schemas in the current database.",
        "If there is no current database, then the command retrieves records for all databases and schemas in the account.",
        "If you specify the keyword SCHEMA, then:",
        "If you specify a qualified schema name (e.g. my_database.my_schema), then the command\nretrieves records for the specified database and schema.",
        "If you specify an unqualified schema_name, then:",
        "If there is a current database, then the command retrieves records for the specified schema in the current database.",
        "If there is no current database, then the command displays the error\nSQL compilation error: Object does not exist, or operation cannot be performed.",
        "If you do not specify a schema_name, then:",
        "If there is a current database, then:",
        "If there is a current schema, then the command retrieves records for the current schema in the current database.",
        "If there is no current schema, then the command retrieves records for all schemas in the current database.",
        "If there is no current database, then the command retrieves records for all databases and all schemas in the account.",
        "Default: Depends on whether the session currently has a database in use:",
        "Database: DATABASE is the default (i.e. the command returns the objects you have privileges to view in the database).",
        "No database: ACCOUNT is the default (i.e. the command returns the objects you have privileges to view in your account).",
        "Optionally filters the command output based on the characters that appear at the beginning of\nthe object name. The string must be enclosed in single quotes and is case-sensitive.",
        "For example, the following strings return different results:",
        ". Default: No value (no filtering is applied to the output)",
        "Filters the command output to return only root tasks (tasks with no predecessors).",
        "Optionally limits the maximum number of rows returned, while also enabling \u201cpagination\u201d of the results. The actual number of rows\nreturned might be less than the specified limit. For example, the number of existing objects is less than the specified limit.",
        "The optional FROM 'name_string' subclause effectively serves as a \u201ccursor\u201d for the results. This enables fetching the\nspecified number of rows following the first row whose object name matches the specified string:",
        "The string must be enclosed in single quotes and is case-sensitive.",
        "The string does not have to include the full object name; partial names are supported.",
        "Default: No value (no limit is applied to the output)",
        "Note",
        "For SHOW commands that support both the FROM 'name_string' and STARTS WITH 'name_string' clauses, you can combine\nboth of these clauses in the same statement. However, both conditions must be met or they cancel out each other and no results are\nreturned.",
        "In addition, objects are returned in lexicographic order by name, so FROM 'name_string' only returns rows with a higher\nlexicographic value than the rows returned by STARTS WITH 'name_string'.",
        "For example:",
        "... STARTS WITH 'A' LIMIT ... FROM 'B' would return no results.",
        "... STARTS WITH 'B' LIMIT ... FROM 'A' would return no results.",
        "... STARTS WITH 'A' LIMIT ... FROM 'AB' would return results (if any rows match the input strings).",
        "Only returns rows for a task owner (i.e. the role with the OWNERSHIP privilege on a task) or a role with either the MONITOR\nor OPERATE privilege on a task.",
        "The command does not require a running warehouse to execute.",
        "The value for LIMIT rows cannot exceed 10000. If LIMIT rows is omitted or a value exceeding 10000 is provided, the command will use 10000 as the limit value.",
        "To post-process the output of this command, you can use the RESULT_SCAN function, which treats the output as a table that can be queried.",
        "The command output provides task properties and metadata in the following columns:",
        "Column Name",
        "Description",
        "created_on",
        "Date and time when the task was created.",
        "name",
        "Name of the task.",
        "id",
        "Unique identifier for each task. Note that recreating a task (using CREATE OR REPLACE TASK) essentially creates a new task, which has a new ID.",
        "database_name",
        "Database in which the task is stored.",
        "schema_name",
        "Schema in which the task is stored.",
        "owner",
        "Role that owns the task (i.e. has the OWNERSHIP privilege on the task)",
        "comment",
        "Comment for the task.",
        "warehouse",
        "Warehouse that provides the required resources to run the task.",
        "schedule",
        "Schedule for running the task. Displays NULL if no schedule is specified or the task is a triggered task.",
        "predecessors",
        "JSON array of any tasks identified in the AFTER parameter for the task (i.e. predecessor tasks). When run successfully to completion, these tasks trigger the current task. Individual task names in the array are fully-qualified (i.e. include the container database and schema names). . . Displays an empty array if the task has no predecessor.",
        "state",
        "\u2018started\u2019 or \u2018suspended\u2019 based on the current state of the task.",
        "definition",
        "SQL statements executed when the task runs.",
        "condition",
        "Condition specified in the WHEN clause for the task.",
        "allow_overlapping_execution",
        "For root tasks in a task graph, displays TRUE if overlapping execution of the task graph is explicitly\nallowed. For child tasks in a task graph, displays NULL.",
        "error_integration",
        "Name of the notification integration used to access Amazon Simple Notification Service (SNS), Google Pub/Sub, or Microsoft Azure Event Grid to relay error notifications for the task.",
        "last_committed_on",
        "Timestamp when a version of the task was last set. If no version has been set (i.e. if the task has not been resumed or manually executed after it was created), the value is NULL.",
        "last_suspended_on",
        "Timestamp when the task was last suspended. Displays the timestamps for both the root tasks and the child tasks. If the task has not been suspended yet, the value is NULL.",
        "owner_role_type",
        "The type of role that owns the object, for example ROLE. . If a Snowflake Native App owns the object, the value is APPLICATION. . Snowflake returns NULL if you delete the object because a deleted object does not have an owner role.",
        "config",
        "For the root task in a task graph, displays the configuration if present; otherwise, NULL. For child tasks in a task graph, displays\nNULL.",
        "budget",
        "Name of the budget if the object is monitored by a budget. NULL otherwise.",
        "last_suspended_reason",
        "Displays the reason why the task was suspended. The possible reasons include the following:",
        "USER_SUSPENDED: The user suspended the task by running the alter task <name> suspend command.",
        "SCHEMA_OR_DATABASE_DELETED: The schema or database of the task was dropped.",
        "GRANT_OWNERSHIP: The user transferred the ownership of the task to another role by running the grant ownership command.",
        "SUSPENDED_DUE_TO_ERRORS: The task failed a certain number of consecutive times and was suspended. You can set the SUSPEND_TASK_AFTER_NUM_FAILURES parameter for the number of failures required to suspend this task.",
        "CHILD_BECAME_ROOT: The task was previously a child task in a task graph, but all predecessors of the child task were removed and the child task became a root task.",
        "FINALIZER_BECAME_ROOT:  The task was previously a finalizer task in a task graph, but the finalization was removed and the task became a root task.",
        "MATCHING_OWNER_NOT_FOUND: During task replication, the role that owns the task was not found on the secondary database.",
        "Displays NULL if the task has never been suspended, or if the task was last suspended before the column was introduced with 2023_08 Bundle (Generally Enabled).",
        "task_relations",
        "Alternative for predecessors column. Shows JSON array of any tasks identified in the AFTER parameter for the task (i.e. predecessor tasks). When run successfully to completion, these tasks trigger the current task. Individual task names in the array are fully-qualified (i.e. include the container database and schema names). . . Displays an empty array if the task has no predecessor.",
        "For more information about the properties that can be specified for a task, see CREATE TASK.",
        "Show all the tasks whose name starts with line that you have privileges to view in the tpch.public schema:",
        "Show all the tasks that you have privileges to view in the tpch.public schema:",
        "Was this page helpful?",
        "On this page"
    ]
}