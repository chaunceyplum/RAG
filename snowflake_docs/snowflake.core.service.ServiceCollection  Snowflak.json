{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-python-api/reference/latest/_autosummary/snowflake.core.service.ServiceCollection",
    "title": "snowflake.core.service.ServiceCollection | Snowflake Documentation",
    "paragraphs": [
        "Bases: SchemaObjectCollectionParent[ServiceResource]",
        "Represents the collection operations on the Snowflake Snowpark Container Service resource.",
        "With this collection, you can create, update, iterate through, and fetch SPCSs that you have access to in the\ncurrent context.",
        "Examples",
        "Creating a service instance:",
        "Attributes",
        "Methods",
        "Create a Snowpark Container service in Snowflake.",
        "service (Service) \u2013 The Service object, together with the Service\u2019s properties:\nname, compute_pool, spec; auto_resume, min_instances, max_instances, status, external_access_integrations,\nquery_warehouse, comment are optional.",
        "mode (CreateMode, optional)",
        "values. (One of the following enum)",
        "CreateMode.error_if_exists (Throw an snowflake.core.exceptions.ConflictError)",
        ".... (create or replace service <name>)",
        "CreateMode.or_replace (Replace if the service already exists in Snowflake. Equivalent to SQL)",
        "....",
        "CreateMode.if_not_exists (Do nothing if the service already exists in Snowflake.)",
        "exists... (Equivalent to SQL create service <name> if not)",
        "CreateMode.error_if_exists. (Default is)",
        "Examples",
        "Creating a service, replacing any existing service with the same name:",
        "Executes a Snowpark Container job service in Snowflake.",
        "job_service (JobService) \u2013 The JobService object, together with the JobService\u2019s properties:\nname, compute_pool, spec; status, external_access_integrations, query_warehouse, comment are optional",
        "Examples",
        "Executing a job service:",
        "Iterate through Service objects from Snowflake, filtering on any optional \u2018like\u2019 pattern.",
        "like (str, optional) \u2013 A case-insensitive string functioning as a filter, with support for SQL\nwildcard characters (% and _).",
        "starts_with (str, optional) \u2013 String used to filter the command output based on the string of characters that appear\nat the beginning of the object name. Uses case-sensitive pattern matching.",
        "show_limit (int, optional) \u2013 Limit of the maximum number of rows returned by iter(). The default is None, which behaves equivalently\nto show_limit=10000. This value must be between 1 and 10000.",
        "from_name (str, optional) \u2013 Fetch rows only following the first row whose object name matches\nthe specified string. This is case-sensitive and does not have to be the full name.",
        "Examples",
        "Showing all services that you have access to see:",
        "Showing information of the exact service you want to see:",
        "Showing services starting with \u2018your-service-name-\u2018:",
        "Using a for loop to retrieve information from iterator:",
        "Was this page helpful?"
    ]
}