{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-dynamic-tables",
    "title": "SHOW DYNAMIC TABLES | Snowflake Documentation",
    "paragraphs": [
        "Lists the dynamic tables for which you have access privileges. The command can be used to list dynamic\ntables for the current/specified database or schema, or across your entire account.",
        "CREATE DYNAMIC TABLE, ALTER DYNAMIC TABLE, DESCRIBE DYNAMIC TABLE, DROP DYNAMIC TABLE,\nSHOW OBJECTS, TABLES view (Information Schema)",
        "Optionally filters the command output by object name. The filter uses case-insensitive pattern matching, with support for SQL\nwildcard characters (% and _).",
        "For example, the following patterns return the same results:",
        ". Default: No value (no filtering is applied to the output).",
        "Optionally specifies the scope of the command. Specify one of the following:",
        "Returns records for the entire account.",
        "Returns records for the current database in use or for a specified database (db_name).",
        "If you specify DATABASE without db_name and no database is in use, the keyword has no effect on the output.",
        "Returns records for the current schema in use or a specified schema (schema_name).",
        "SCHEMA is optional if a database is in use or if you specify the fully qualified schema_name (for example, db.schema).",
        "If no database is in use, specifying SCHEMA has no effect on the output.",
        "Default: Depends on whether the session currently has a database in use:",
        "Database: DATABASE is the default (that is, the command returns the objects you have privileges to view in the database).",
        "No database: ACCOUNT is the default (that is, the command returns the objects you have privileges to view in your account).",
        "Optionally filters the command output based on the characters that appear at the beginning of\nthe object name. The string must be enclosed in single quotes and is case-sensitive.",
        "For example, the following strings return different results:",
        ". Default: No value (no filtering is applied to the output)",
        "Optionally limits the maximum number of rows returned, while also enabling \u201cpagination\u201d of the results. The actual number of rows\nreturned might be less than the specified limit. For example, the number of existing objects is less than the specified limit.",
        "The optional FROM 'name_string' subclause effectively serves as a \u201ccursor\u201d for the results. This enables fetching the\nspecified number of rows following the first row whose object name matches the specified string:",
        "The string must be enclosed in single quotes and is case-sensitive.",
        "The string does not have to include the full object name; partial names are supported.",
        "Default: No value (no limit is applied to the output)",
        "Note",
        "For SHOW commands that support both the FROM 'name_string' and STARTS WITH 'name_string' clauses, you can combine\nboth of these clauses in the same statement. However, both conditions must be met or they cancel out each other and no results are\nreturned.",
        "In addition, objects are returned in lexicographic order by name, so FROM 'name_string' only returns rows with a higher\nlexicographic value than the rows returned by STARTS WITH 'name_string'.",
        "For example:",
        "... STARTS WITH 'A' LIMIT ... FROM 'B' would return no results.",
        "... STARTS WITH 'B' LIMIT ... FROM 'A' would return no results.",
        "... STARTS WITH 'A' LIMIT ... FROM 'AB' would return results (if any rows match the input strings).",
        "To SHOW a dynamic table, you must be using a role that has MONITOR privilege on the table.",
        "The command does not require a running warehouse to execute.",
        "The value for LIMIT rows cannot exceed 10000. If LIMIT rows is omitted, the command results in an error if the result set is larger than 10K rows.",
        "To view results for which more than 10K records exist, either include LIMIT rows or query the corresponding view in the Snowflake Information Schema.",
        "To post-process the output of this command, you can use the RESULT_SCAN function, which treats the output as a table that can be queried.",
        "The command output provides table properties and metadata in the following columns:",
        "Column",
        "Description",
        "created_on",
        "Date and time when the dynamic table was created.",
        "name",
        "Name of the dynamic table.",
        "reserved",
        "database_name",
        "Database in which the dynamic table is stored.",
        "schema_name",
        "Schema in which the dynamic table is stored.",
        "cluster_by",
        "rows",
        "Number of rows in the table.",
        "bytes",
        "Number of bytes that will be scanned if the entire dynamic table is scanned in a query. . . Note that this number may be different than the number of actual physical bytes (i.e. bytes stored on-disk) for the table.",
        "owner",
        "Role that owns the dynamic table.",
        "target_lag",
        "The maximum duration that the dynamic table\u2019s content should lag behind real time.",
        "refresh_mode",
        "INCREMENTAL if the dynamic table will use incremental refreshes, or FULL if it will recompute the whole table on every refresh.",
        "refresh_mode_reason",
        "Explanation for why the refresh mode was chosen. If Snowflake chose FULL when INCREMENTAL is supported, the output provides a reason for why it thinks full refresh performs better. NULL if no pertinent information is available.",
        "warehouse",
        "Warehouse that provides the required resources to perform the incremental refreshes.",
        "comment",
        "Comment for the dynamic table.",
        "text",
        "The text of the command that created this dynamic table (e.g. CREATE DYNAMIC TABLE ...).",
        "automatic_clustering",
        "Whether auto-clustering is enabled on the dynamic table. Not currently supported for dynamic tables.",
        "scheduling_state",
        "Displays RUNNING for dynamic tables that are actively scheduling refreshes and SUSPENDED for suspended dynamic tables.",
        "last_suspended_on",
        "Timestamp of last suspension.",
        "is_clone",
        "TRUE if the dynamic table has been cloned, else FALSE.",
        "is_replica",
        "TRUE if the dynamic table is a replica. else FALSE.",
        "data_timestamp",
        "Timestamp of the data in the base object(s) that is included in the dynamic table.",
        "owner_role_type",
        "The type of role that owns the object, for example ROLE. . . Database-level roles, for example DATABASE_ROLE, can\u2019t be owners. The owner of a dynamic table must have the USAGE privilege on the warehouse. Since the warehouse is an account-level object, a database role, which operates at the database level, can\u2019t be granted access to it. . . If a Snowflake Native App owns the object, the value is APPLICATION. . Snowflake returns NULL if you delete the object because a deleted object does not have an owner role.",
        "Show all the dynamic tables with names that start with product_ in the mydb.myschema schema:",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}