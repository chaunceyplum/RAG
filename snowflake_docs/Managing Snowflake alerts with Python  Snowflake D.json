{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-python-api/snowflake-python-managing-alerts",
    "title": "Managing Snowflake alerts with Python | Snowflake Documentation",
    "paragraphs": [
        "Feature \u2014 Generally Available",
        "Not available in government regions.",
        "You can use Python to manage Snowflake alerts, which you can set up to periodically perform an action under specific conditions, based on\ndata within Snowflake. For more information about alerts, see Setting up alerts based on data in Snowflake.",
        "Note",
        "ALTER ALERT is currently not supported.",
        "The Snowflake Python APIs represents alerts with two separate types:",
        "Alert: Exposes an alert\u2019s properties such as its name, condition, action, and schedule.",
        "AlertResource: Exposes methods you can use to fetch a corresponding Alert object, execute the alert, and drop the alert.",
        "Minimum API version required",
        "0.13.0",
        "The examples in this topic assume that you\u2019ve added code to connect with Snowflake and to create a Root object from which to use the\nSnowflake Python APIs.",
        "For example, the following code uses connection parameters defined in a configuration file to create a connection to Snowflake:",
        "Using the resulting Session object, the code creates a Root object to use the API\u2019s types and methods. For more information,\nsee Connect to Snowflake with the Snowflake Python APIs.",
        "To create an alert, first create an Alert object, and then create an AlertCollection object from the API Root\nobject. Using AlertCollection.create, add the new alert to Snowflake.",
        "Code in the following example creates an Alert object that represents an alert named my_alert in your account:",
        "The code creates an AlertCollection variable alerts and uses AlertCollection.create to create a new alert in\nSnowflake.",
        "You can get information about an alert by calling the AlertResource.fetch method, which returns an Alert object.",
        "Code in the following example gets information about an alert named my_alert:",
        "You can list alerts using the AlertCollection.iter method, which returns a PagedIter iterator of Alert objects.",
        "Code in the following example lists alerts whose name starts with my, and then prints the name of each. This example also sets the\noptional parameter show_limit=5 to limit the number of results to 5:",
        "You can perform common alert operations, such as executing and dropping alerts, with an AlertResource object.",
        "To demonstrate some operations you can do with an alert resource, code in the following example does the following:",
        "Gets the my_alert alert resource object.",
        "Executes the alert.",
        "Drops the alert.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}