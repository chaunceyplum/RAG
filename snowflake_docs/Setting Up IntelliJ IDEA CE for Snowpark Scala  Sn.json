{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/scala/quickstart-intellij",
    "title": "Setting Up IntelliJ IDEA CE for Snowpark Scala | Snowflake Documentation",
    "paragraphs": [
        "This topic explains how to set up IntelliJ IDEA CE for Snowpark.",
        "To use Scala in IntelliJ IDEA CE, you need to install the Scala plugin. See the\nInstallation section\nof the tutorial\nGetting Started with Scala in IntelliJ IDEA.",
        "Next, create a new Scala project for Snowpark.",
        "Choose File \u00bb New \u00bb Project.",
        "In the list on the left, select Scala.",
        "In the list on the right, select sbt.",
        "Click Next.",
        "Fill in the details for your new project.",
        "For the JDK and Scala SDK, select the JDK and Scala versions supported for use with Snowpark.",
        "Click Finish to create the new project.",
        "Next, configure the project for Snowpark.",
        "In the Project tool window on the\nleft, double-click on the\nbuild.sbt file for your project.",
        "In the build.sbt file for your project, make the following changes:",
        "If the scalaVersion setting does not match the version that you plan to use, update the setting. For example:",
        "Note that you must use a\nScala version that is supported for use with the Snowpark library.",
        "Add the Snowpark library to the list of dependencies. For example:",
        "Save the changes to the build.sbt file.",
        "Update your Maven repositories.",
        "See Update Maven repositories.",
        "Reload the SBT project:",
        "Choose View \u00bb Tool Windows \u00bb sbt to display the sbt Tool window.",
        "Right-click on the project name, and choose Reload sbt Project.",
        "This causes IntelliJ IDEA CE to download the Snowpark library and makes the API available for use in your code.",
        "To verify that you have configured your project to use Snowpark, run a simple example of Snowpark code.",
        "In the Project tool window on the\nleft,\nexpand your project, expand the src/main folders, and select the scala folder.",
        "Right-click on the folder, and choose New \u00bb Scala class.",
        "In the Create New Scala Class dialog box, enter the name \u201cMain\u201d, select Object, and press the Enter key.",
        "In the Main.scala file, replace the contents with the code below:",
        "Note the following:",
        "Replace the <placeholders> with values that you use to connect to Snowflake.",
        "For <account_identifier>, specify your account identifier.",
        "If you prefer to use key pair authentication:",
        "Replace PASSWORD with PRIVATE_KEY_FILE, and set it to the path to your private key file.",
        "If the private key is encrypted, you must set PRIVATE_KEY_FILE_PWD to the passphrase for decrypting the private key.",
        "As an alternative to setting PRIVATE_KEY_FILE and PRIVATE_KEY_FILE_PWD, you can set the PRIVATEKEY\nproperty to the string value of the unencrypted private key from the private key file.",
        "For example, if your private key file is unencrypted, set this to the value of the key in the file (without the\n-----BEGIN PRIVATE KEY----- and -----END PRIVATE KEY----- header and footer and without the line endings).",
        "Note that if the private key is encrypted, you must decrypt the key before setting it as the value of the PRIVATEKEY\nproperty.",
        "If you plan to create UDFs:",
        "Don\u2019t set up your object to extend the App trait. For details, see\nCaveat About Creating UDFs in an Object With the App Trait.",
        "Don\u2019t set up your object to extend a class or trait that is not serializable.",
        "Click the green arrow next to the Object line, and choose Run Main to run the example.",
        "Was this page helpful?",
        "On this page"
    ]
}