{
    "url": "https://docs.snowflake.com/en/release-notes/bcr-bundles/2024_02/bcr-1535",
    "title": "SQL functions: Passing in columns that have the upper, lower, or trim collation specifier | Snowflake Documentation",
    "paragraphs": [
        "Attention",
        "This behavior change is in the 2024_02 bundle.",
        "For the current status of the bundle, refer to Bundle History.",
        "The upper and lower collation specifiers convert strings to upper or lower case\n(respectively) before strings are compared. The trim collation specifier removes leading and trailing spaces before strings\nare compared.",
        "In cases when you pass in columns with these specifiers to some of the SQL functions, the behavior changes in the following ways:",
        "The LIKE function ignores the upper, lower, and trim specifiers, which\nresults in a case-sensitive comparison.",
        "In addition, the following functions do not support columns with the upper, lower, and trim specifiers:",
        "Variants of the LIKE function:",
        "LIKE ALL",
        "LIKE ANY",
        "ILIKE ANY",
        "CONTAINS",
        "ENDSWITH",
        "POSITION",
        "REPLACE",
        "SPLIT",
        "SPLIT_PART",
        "STARTSWITH",
        "If you pass a column with the upper, lower, or trim specifier to these functions, a compilation error occurs.",
        "The LIKE function respects the upper, lower, and trim specifiers, which results in a case-insensitive comparison.",
        "As a result, queries that use the LIKE function might return additional rows (see the example below).",
        "Note that the LIKE function does not support combinations with locale specifiers (for example, en-upper).",
        "In addition, the following functions now support columns with the upper, lower, and trim specifiers.",
        "Variants of the LIKE function:",
        "LIKE ALL",
        "LIKE ANY",
        "ILIKE ANY",
        "CONTAINS",
        "ENDSWITH",
        "POSITION",
        "REPLACE",
        "SPLIT",
        "SPLIT_PART",
        "STARTSWITH",
        "As noted above, if a column has the upper, lower, or trim specifier, queries with the LIKE function might return\nadditional rows. For example, suppose that a table has a column with the lower specifier. Suppose that the text in the table\ndiffers in case.",
        "Before the behavior change, each of the following queries that use the LIKE function return one row with the value 'abc':",
        "After the behavior change, the query that does not use the lower specification column with the LIKE function still returns one\nrow:",
        "However, the queries that use the COLLATE function to specify lower and queries that pass a\ncolumn with the lower specification to the LIKE function return two rows:",
        "This is roughly equivalent to ILIKE. To determine if you should expect changes to these\nqueries, you can replace LIKE with ILIKE in these queries.",
        "If your columns use the upper, lower, or trim specification and you want to preserve the behavior before the change,\nyou can use the COLLATE function with an empty specification to indicate that the upper,\nlower, or trim specification associated with the column should not be used:",
        "Note",
        "If you are using this approach with the LIKE function, make sure that both the subject and pattern do not have a collation\nspecification applied.",
        "Ref: 1535",
        "Was this page helpful?",
        "On this page"
    ]
}