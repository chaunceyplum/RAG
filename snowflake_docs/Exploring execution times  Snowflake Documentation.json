{
    "url": "https://docs.snowflake.com/en/user-guide/performance-query-exploring",
    "title": "Exploring execution times | Snowflake Documentation",
    "paragraphs": [
        "This topic explains how to examine the past performance of queries and tasks. This information helps\nidentify candidates for performance optimizations and allows you to see whether your optimization strategies are having the desired effect.",
        "You can explore historical performance using Snowsight or by writing queries against views in the ACCOUNT_USAGE schema. A user\nwithout access to the ACCOUNT_USAGE schema can query similar data using the Information Schema.",
        "You can use Snowsight to gain visual insights into the performance of queries and tasks as well as the load of a warehouse.",
        "Sign in to Snowsight.",
        "Select Monitoring \u00bb Query History.",
        "Use the Duration column to understand how long it took a query to execute. You can sort the column to find the queries that ran\nthe longest.",
        "If you want to focus on a particular user\u2019s queries, use the User drop-down to select the user.",
        "If you want to focus on the queries that ran on a particular warehouse, select Filters \u00bb Warehouse, and then select\nthe warehouse.",
        "Sign in to Snowsight.",
        "Switch to a role that has privileges for the warehouse.",
        "Select Admin \u00bb Warehouses.",
        "Select a warehouse.",
        "Use the Warehouse Activity chart to visualize the load of the warehouse, including whether queries were queued.",
        "Sign in to Snowsight.",
        "Select Monitoring \u00bb Task History to view how long it took to execute a task\u2019s SQL code.",
        "The Query Profile allows you to examine which parts of a query are taking the longest to execute.\nIt includes a Most Expensive Nodes pane that identifies the operator nodes that are taking the longest to execute. You can drill\ndown even further by viewing what percentage of a node\u2019s execution time was spent in a particular category of query processing.",
        "To access the Query Profile for a query:",
        "Sign in to Snowsight.",
        "Select Monitoring \u00bb Query History.",
        "Select the query ID of a query.",
        "Select the Query Profile tab.",
        "Tip",
        "You can programmatically access the performance statistics of the Query Profile by executing the\nGET_QUERY_OPERATOR_STATS function.",
        "The Account Usage schema contains views related to the execution times of queries and tasks. It also contains a\nview related to the load of a warehouse as it executes queries. You can write queries against these views to drill down into performance\ndata and create custom reports and dashboards.",
        "By default, only the account administrator (i.e. user with the ACCOUNTADMIN role) can access views in the ACCOUNT_USAGE schema. To allow\nother users to access these views, refer to Enabling other roles to use schemas in the SNOWFLAKE database.",
        "Users without access to the ACCOUNT_USAGE schema (e.g. a user who ran a query or a warehouse administrator) can still return recent\nexecution times and other query metadata using the QUERY_HISTORY table functions of the\nInformation Schema.",
        "Be aware that the ACCOUNT_USAGE views are not updated immediately after running a query or task. If you want to check the execution time\nof a query right after running it, use Snowsight to view its performance. The Information Schema\nis also updated quicker than the ACCOUNT_USAGE views.",
        "ACCOUNT_USAGE View",
        "Description",
        "Latency",
        "QUERY_HISTORY",
        "Used to analyze the Snowflake query history by various dimensions (time range, execution time, session, user, warehouse, etc.)\nwithin the last 365 days (1 year).",
        "Up to 45 minutes",
        "WAREHOUSE_LOAD_HISTORY",
        "Used to analyze the workload on a warehouse within a specified date range.",
        "Up to 3 hours",
        "TASK_HISTORY",
        "Used to retrieve the history of task usage within the last 365 days (1 year).",
        "Up to 45 minutes",
        "The following queries against the ACCOUNT_USAGE schema provide insight into the past performance of queries, warehouses, and tasks.\nClick the name of a query to see the full SQL example.",
        "Query: Top n longest-running queries",
        "Query: Queries organized by execution time over past month",
        "Query: Find long running repeated queries",
        "Query: Track the average performance of a query over time",
        "Query: Total warehouse load",
        "Query: Longest running tasks",
        "This query provides a listing of the top n (50 in the example below) longest-running queries in the last day. You can adjust the\nDATEADD function to focus on a shorter or longer period of time. Replace my_warehouse with the name of a warehouse.",
        "This query groups queries for a given warehouse by buckets for execution time over the last month. These trends in query completion time\ncan help inform decisions to resize warehouses or separate out some queries to another warehouse. Replace MY_WAREHOUSE with the name\nof a warehouse.",
        "You can use the query hash (the value of the query_hash column in the ACCOUNT_USAGE\nQUERY_HISTORY view) to find patterns in query performance that might not be obvious. For example, although a query might not be\nexcessively expensive during any single execution, a frequently repeated query could lead to high costs, based on the number of\ntimes the query runs.",
        "You can use the query hash to identify the queries that you should focus on optimizing first. For example, the following query\nuses the value in the query_hash column to identify the query IDs for the 100 longest-running queries:",
        "The following statement computes the daily average total elapsed time for all queries that have a specific parameterized query\nhash (cbd58379a88c37ed6cc0ecfebb053b03).",
        "This query provides insight into the total load of a warehouse for executed and queued queries. These load values represent the ratio of the total execution time (in seconds) of all queries in a specific state in an interval by the total time (in seconds) for that interval.",
        "For example, if 276 seconds was the total time for 4 queries in a 5 minute (300 second) interval, then the query load value is 276 / 300 = 0.92.",
        "This query lists the longest running tasks in the last day, which can indicate an opportunity to optimize the SQL being executed by the\ntask.",
        "Was this page helpful?",
        "On this page"
    ]
}