{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-cli/objects/manage-objects",
    "title": "Managing Snowflake objects | Snowflake Documentation",
    "paragraphs": [
        "Feature \u2014 Generally Available",
        "Not available in government regions.",
        "The snow object commands provide you with a convenient way of managing most Snowflake objects, such as stages, Snowpark functions, or Streamlit apps. Instead of using separate commands for each type of object, you can use these commands to perform common tasks, including the following:",
        "Create an object of a specific type",
        "List available objects of a specified type.",
        "Display the description of an object.",
        "Delete an object.",
        "To see a list of supported types use the --help option for any of the snow object commands, such as the following:",
        "The object subcommands let you perform common operations, while leaving service-specific commands groups dedicated to service-specific operations.",
        "The snow object create command creates a specified object based on the definition provided, using the following syntax:",
        "where:",
        "TYPE is a Snowflake object type:",
        "account",
        "catalog-integration",
        "compute-pool",
        "database",
        "database-role",
        "dynamic-table",
        "event-table",
        "external-volume",
        "function",
        "image-repository",
        "managed-account",
        "network-policy",
        "notebook",
        "notification-integration",
        "pipe",
        "procedure",
        "role",
        "schema",
        "service",
        "stage",
        "stream",
        "table",
        "task",
        "user-defined-function",
        "view",
        "warehouse",
        "OBJECT_ATTRIBUTES contains the object definition in the form of a list of <key>=<value> pairs, such as:",
        "--json {OBJECT_DEFINITION} contains the object definition in JSON, such as:",
        "Note",
        "The following object types require a database to be identified in the connection configuration, such as config.toml, or passed to the command using the --database option.",
        "image-repository",
        "schema",
        "service",
        "table",
        "task",
        "To create a database object using the option-attributes parameter:",
        "To create a table object using the option-attributes parameter:",
        "To create a database using the --json object-definition option:",
        "To create a table using the --json object-definition option:",
        "where table.json contains the following:",
        "The snow object list command lists all objects of given type available with your permissions.",
        "where TYPE is the type of the object. Use snow object list --help for the full list of supported types.",
        "To list all role objects, enter the following command:",
        "You can also use the --like [-l] <pattern> to filter objects by name using a SQL LIKE pattern. For example, list function --like \"my%\" lists all functions that begin with my. For more information about SQL patterns syntax, see SQL LIKE Keyword.",
        "To  list only role objects that begin with the string, public, enter the following command:",
        "The snow object describe command provides a description of an object of given type.",
        "where:",
        "TYPE is the type of the object. Use snow object describe --help for the full list of supported types.",
        "IDENTIFIER is the name of the object. For procedures and functions, the identifier must specify arguments types, such as \"hello(int,string)\".",
        "To describe a function object, enter a command similar to the following:",
        "The snow object drop command deletes a Snowflake object of given name and type.",
        "where:",
        "TYPE is the type of the object. Use snow object drop --help for the full list of supported types.",
        "IDENTIFIER is the name of the object. For procedures and functions, the identifier must specify arguments types, such as \"hello(int,string)\".",
        "To drop a procedure, enter a commands similar to the following:",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}