{
    "url": "https://docs.snowflake.com/en/user-guide/snowcd",
    "title": "SnowCD (Connectivity Diagnostic Tool) | Snowflake Documentation",
    "paragraphs": [
        "SnowCD (i.e. Snowflake Connectivity Diagnostic Tool) helps users to diagnose and troubleshoot their network connection to Snowflake.",
        "SnowCD leverages the Snowflake hostname IP addresses and ports listed by either the SYSTEM$ALLOWLIST() or SYSTEM$ALLOWLIST_PRIVATELINK() functions to run a series of connection checks to evaluate and help troubleshoot the network connection to Snowflake.",
        "Important",
        "If your Snowflake account uses private connectivity to the Snowflake service, execute the\nSYSTEM$ALLOWLIST_PRIVATELINK function to obtain the Snowflake hostname IP address and ports to evaluate\nand troubleshoot network connections to Snowflake.",
        "For more information, see:",
        "AWS PrivateLink and Snowflake",
        "Azure Private Link and Snowflake",
        "Google Cloud Private Service Connect and Snowflake",
        "SnowCD returns one of the following:",
        "All checks passed to indicate a healthy network connection.",
        "A message to state that one or more checks failed with a troubleshooting suggestion.",
        "Users can leverage SnowCD to evaluate the network connection to Snowflake at any time to verify the required configuration settings are correct. For example, users can integrate SnowCD into these use cases:",
        "Automated deployment scripts.",
        "A prerequisite check before deploying a service that connects to Snowflake.",
        "Environment checks while starting a new machine.",
        "Periodic checks on running machines.",
        "SnowCD works with either direct connections or connections through proxy servers.",
        "SnowCD checks access to the Snowflake database and to stages used to temporarily store\ndata (for example, for loading).",
        "SnowCD verifies that an HTTP response was returned from the HTTP host. This can detect\nproblems such as the following:",
        "No HTTP server is running at the specified IP address and port.",
        "There was a DNS (Domain Name System) lookup failure.",
        "A Man-In-The-Middle attack occurred and used an invalid certificate to impersonate\nthe desired service.",
        "Certain types of other network failures below the HTTP level.",
        "SnowCD does not detect all possible problems. The known limitations include:",
        "Stages require additional authentication information that SnowCD does not have.\nAlthough SnowCD verifies basic access to a stage, SnowCD does not perform a strict\ncheck on the HTTP response code from the stage. Therefore, SnowCD does not detect\nproblems such as:",
        "Access policy denial for Amazon S3 Bucket, Azure Blob storage, or Google Cloud Storage\nfor stages.",
        "There is a problem connecting to the customer\u2019s proxy server, for example the proxy server returns an HTTP\n403 error.",
        "Because SnowCD does not detect all possible problems, Snowflake recommends that after you successfully verify access to a stage\nthrough SnowCD, you follow up by running a PUT command to load a file to the stage.\nThe simplest way to run a PUT command is usually through SnowSQL.",
        "Attention",
        "Troubleshooting one or more network connection issues is challenging. Depending on the environment, it may be necessary to use SnowCD with other troubleshooting approaches. For example, if SnowCD returns information on an OCSP issue, consult the OCSP sections on this page.",
        "This is a prerequisite step and needs to be completed once unless the hostnames or ports change.",
        "Connect to Snowflake through the web interface.",
        "Execute SELECT SYSTEM$ALLOWLIST(); or SELECT SYSTEM$ALLOWLIST_PRIVATELINK();.",
        "Save the query result to a file (i.e. allowlist.json).",
        "For more information about these functions, see SYSTEM$ALLOWLIST or\nSYSTEM$ALLOWLIST_PRIVATELINK.",
        "The examples below use JSON as the output format from the corresponding SQL function. SnowCD accepts either JSON, CSV, or TSV format as its input for Step 3: Run SnowCD.",
        "To save the query result in CSV or TSV format, in the web interface, click the Download or View Results icon, select either CSV or TSV, and click Export.",
        "Example file (Not indented and redacted)",
        "Execute SYSTEM$ALLOWLIST and save the output to a file (e.g. allowlist.json).",
        "Where:",
        "<storage_location> is the storage location (Amazon S3, Google Cloud Storage, or Microsoft Azure) that stores the file that a Snowflake\nclient can read or write.",
        "<region_id> is the AWS region where your VPCs and Snowflake account are located.",
        "Example file (Indented and redacted)",
        "Execute SYSTEM$ALLOWLIST and save the output to a file (e.g. allowlist.json).",
        "Where:",
        "<storage_location> is the storage location (Amazon S3, Google Cloud Storage, or Microsoft Azure) that stores the file that a Snowflake\nclient can read or write.",
        "<region_id> is the AWS region where your VPCs and Snowflake account are located.",
        "Example file (Not indented and redacted)",
        "Execute SYSTEM$ALLOWLIST_PRIVATELINK and save the output to a file (e.g. allowlist.json).",
        "Where:",
        "<storage_location> is the storage location (Amazon S3, Google Cloud Storage, or Microsoft Azure) that stores the file that a Snowflake\nclient can read or write.",
        "<region_id> is the AWS region where your VPCs and Snowflake account are located.",
        "Example file (Indented and redacted)",
        "Execute SYSTEM$ALLOWLIST_PRIVATELINK and save the output to a file (e.g. allowlist.json).",
        "Where:",
        "<storage_location> is the storage location (Amazon S3, Google Cloud Storage, or Microsoft Azure) that stores the file that a Snowflake\nclient can read or write.",
        "<region_id> is the AWS region where your VPCs and Snowflake account are located.",
        "Attention",
        "Save the allowlist.json file in the location where other external allowed hostnames and ports are defined for your environment.",
        "Tip",
        "If you do not want the output in JSON format and instead prefer table format, execute the following:",
        "To download and install SnowCD on Linux, complete the following steps:",
        "Download the latest version of the SnowCD from the SnowCD Download page.",
        "Open the Linux Terminal application and navigate to the directory where you downloaded the file.",
        "Verify the SHA256 checksum matches.",
        "Extract the file.",
        "Make the file executable.",
        "Rename the executable to snowcd.",
        "Note",
        "Linux users running RHEL or CentOS can install SnowCD using yum while Debian users can install using apt.",
        "To download and install SnowCD on macOS, complete the following steps:",
        "Download the latest version of the notarized SnowCD pkg file from the SnowCD Download page.",
        "The pkg files use the following naming convention:",
        "snowcd-<version_number>-darwin_x86_64.pkg",
        "For example:",
        "snowcd-1.0.5-darwin_x86_64.pkg",
        "Open the Terminal application and navigate to the directory where you downloaded the file.",
        "Verify the SHA256 checksum matches.",
        "To get the checksum of the file, execute the command:",
        "Compare the checksum of the file to the checksum shown at the download site.",
        "Open the Finder application and navigate to the directory where you downloaded the pkg file.",
        "Extract and install SnowCD by double clicking on the pkg file.",
        "The files, including the snowcd executable, are installed in the /opt/snowflake/snowcd directory.",
        "To download and install SnowCD on Windows, complete the following steps:",
        "Download the latest version of the SnowCD from the SnowCD Download page.",
        "Run the MSI file using the Windows Installer.",
        "Before running SnowCD in macOS and Linux environments, you can add its directory to your $PATH. In Windows environments, you can add SnowCD to your Environment Variables.",
        "In macOS or Linux environments, you can run the snowcd executable from the\ncommand line by executing snowcd <path_to_allowlist.json> [flags].",
        "In Windows environments, execute snowcd.exe <path_to_allowlist.json> [flags].",
        "Tip",
        "For a full description on the flags snowcd supports, execute snowcd -h.",
        "If all checks are valid, SnowCD returns the number of checks on the number of hosts with the message All checks passed as follows.",
        "If you try to run SnowCD without passing in the JSON allow list information from SELECT SYSTEM$ALLOWLIST(), the following error message displays as a reminder to include the file, with the list of currently supported flags, their data type where applicable, and a brief description of the flag.",
        "If SnowCD detects an incorrect setting or configuration, information on the failed check(s) displays with a\ntroubleshooting suggestion. For example, the response below indicates an invalid hostname.",
        "SnowCD can be run against an HTTP proxy to determine its connectivity status.",
        "Important",
        "Currently, Snowflake does not support SSL-terminating proxy servers.",
        "During the configuration of your firewall and proxy allow list, use SSL pass through (i.e. bypass SSL decryption).",
        "Using Linux as a representative example, execute the following command to run SnowCD against a proxy, replacing the\nflag values where necessary.",
        "Logging is optional and you can add the two logging flags to the proxy command. It is important to include a path to the log\nfile to ensure logging occurs when running the command.",
        "After executing this command, you can view the trace in the test.log file.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}