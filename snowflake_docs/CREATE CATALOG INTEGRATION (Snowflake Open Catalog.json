{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-catalog-integration-open-catalog",
    "title": "CREATE CATALOG INTEGRATION (Snowflake Open Catalog) | Snowflake Documentation",
    "paragraphs": [
        "Creates a new catalog integration for Apache Iceberg\u2122 tables\nthat integrate with Snowflake Open Catalog in the account or replaces an existing catalog integration.",
        "ALTER CATALOG INTEGRATION , DROP CATALOG INTEGRATION , SHOW CATALOG INTEGRATIONS, DESCRIBE CATALOG INTEGRATION",
        "String that specifies the identifier (name) for the catalog integration; must be unique in your account.",
        "In addition, the identifier must start with an alphabetic character and cannot contain spaces or special characters unless the\nentire identifier string is enclosed in double quotes (for example, \"My object\"). Identifiers enclosed in double quotes are also\ncase-sensitive.",
        "For more information, see Identifier requirements.",
        "Specifies Snowflake Open Catalog as the catalog source.",
        "Specifies Apache Iceberg\u2122 as the table format supplied by the catalog.",
        "If you\u2019re creating the catalog integration to\nquery a table in Snowflake Open Catalog using Snowflake, specify the namespace in\nOpen Catalog. Snowflake uses this namespace for all Iceberg tables that you associate with\nthis catalog integration.",
        "You can override this value by specifying a namespace at the table level when you create a table.",
        "If you\u2019re creating the catalog integration to sync a Snowflake-managed table with Snowflake Open Catalog,\nspecify default. This value specifies the default namespace for the catalog.",
        "When you sync a Snowflake-managed table with Open Catalog, Snowflake syncs the table with the catalog associated with the table\u2019s\ncatalog integration using two parent namespaces. The namespaces correspond to the table\u2019s database and schema in Snowflake. For example, if\nyou have a db1.public.table1 Iceberg table registered in Snowflake and you specify catalog1 in the catalog integration, it gets\nsynced to Open Catalog with the following fully qualified name: catalog1.db1.public.table1.",
        "Specifies information about your Open Catalog account and catalog name.",
        "Your Open Catalog account locator URL.",
        "Example values:",
        "https://<orgname>-<my-snowflake-open-catalog-account-name>.snowflakecomputing.com/polaris/api/catalog",
        "To find your Snowflake organization name (<orgname>), follow the steps in Finding the organization and account name for an account.",
        "To find <my-snowflake-open-catalog-account-name,\nsee Find the account name for a Snowflake Open Catalog account in\nthe Snowflake Open Catalog documentation.",
        "https://<account_locator>.<cloud_region_id>.<cloud>.snowflakecomputing.com/polaris/api/catalog",
        "To find your <account_locator>, <cloud_region_id>, and <cloud>, see Format 2: Account locator in a region.",
        "The WAREHOUSE parameter specifies the name of the catalog to use in Open Catalog.",
        "Specifies authentication details that Snowflake uses to connect to Open Catalog.",
        "Specifies OAuth as the authentication type to use.",
        "The client ID of the OAuth2 credential associated with your Open Catalog service connection.",
        "The secret of the OAuth2 credential associated with your Open Catalog service connection.",
        "The scope of the OAuth token. Only one scope is included in the Iceberg REST API specification,\nbut catalogs can support more than one scope in their implementation.",
        "Specifies whether the catalog integration is available to use for Iceberg tables.",
        "TRUE allows users to create new Iceberg tables that reference this integration. Existing Iceberg tables that reference\nthis integration function normally.",
        "FALSE prevents users from creating new Iceberg tables that reference this integration. Existing Iceberg tables that\nreference this integration cannot access the catalog in the table definition.",
        "Specifies the number of seconds that Snowflake waits between attempts to poll the external Iceberg catalog for metadata updates\nfor automated refresh.",
        "Values: 30 to 86400, inclusive",
        "Default: 30 seconds",
        "Preview feature",
        "Available to all accounts.",
        "String (literal) that specifies a comment for the integration.",
        "Default: No value",
        "A role used to execute this SQL command must have the following\nprivileges at a minimum:",
        "Privilege",
        "Object",
        "Notes",
        "CREATE INTEGRATION",
        "Account",
        "Only the ACCOUNTADMIN role has this privilege by default. The privilege can be granted to additional roles as needed.",
        "For instructions on creating a custom role with a specified set of privileges, see Creating custom roles.",
        "For general information about roles and privilege grants for performing SQL actions on\nsecurable objects, see Overview of Access Control.",
        "You can\u2019t modify an existing catalog integration; use a CREATE OR REPLACE CATALOG INTEGRATION statement instead.",
        "You can\u2019t drop or replace a catalog integration if one or more Apache Iceberg\u2122 tables\nare associated with the catalog integration.",
        "To view the tables that depend on a catalog integration,\nyou can use the SHOW ICEBERG TABLES command and\na query using RESULT_SCAN that filters on the catalog_name column.",
        "Note",
        "The column identifier (catalog_name) is case-sensitive.\nSpecify the column identifier exactly as it appears in the SHOW ICEBERG TABLES output.",
        "For example:",
        "Regarding metadata:",
        "Attention",
        "Customers should ensure that no personal data (other than for a User object), sensitive data, export-controlled data, or other regulated data is entered as metadata when using the Snowflake service. For more information, see Metadata fields in Snowflake.",
        "CREATE OR REPLACE <object> statements are atomic. That is, when an object is replaced, the old object is deleted and the new object is created in a single transaction.",
        "To troubleshooting issues with creating a catalog integration, see You can\u2019t create a catalog integration for Open Catalog.",
        "The following example creates a catalog integration for Open Catalog for a particular namespace in an internal catalog\nin Open Catalog to query tables grouped under this namespace in Snowflake. For more information about internal catalogs in Open Catalog, see\nCatalog types in the Open Catalog documentation.",
        "The following example creates a catalog integration for Open Catalog to sync Snowflake-managed tables to the customers catalog in\nOpen Catalog, which is an external catalog. For more information about external catalogs in Open Catalog, see\nCatalog types in the Open Catalog documentation.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}