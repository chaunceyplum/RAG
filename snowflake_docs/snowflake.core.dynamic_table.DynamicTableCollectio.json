{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-python-api/reference/latest/_autosummary/snowflake.core.dynamic_table.DynamicTableCollection",
    "title": "snowflake.core.dynamic_table.DynamicTableCollection | Snowflake Documentation",
    "paragraphs": [
        "Bases: SchemaObjectCollectionParent[DynamicTableResource]",
        "Represents the collection operations on the Snowflake Dynamic Table resource.",
        "With this collection, you can create, iterate through, and search for dynamic tables that you have access to in the\ncurrent context.",
        "Examples",
        "Creating a dynamic table instance:",
        "Attributes",
        "Methods",
        "Create a dynamic table.",
        "table (DynamicTable | DynamicTableClone | str) \u2013",
        "name, target_lag, warehouse, query;\ncolumns, refresh_mode, initialize, cluster_by, comment are optional.",
        "The DynamicTableClone object, when it\u2019s used with clone_table.",
        "The table name.",
        "",
        "clone_table (Clone, optional) \u2013 The source table to clone from.",
        "copy_grants (bool, optional) \u2013 Whether to enable copy grants when creating the object. Default is False.",
        "mode (CreateMode, optional) \u2013",
        "One of the following enum values.",
        "CreateMode.error_if_exists: Throw an snowflake.core.exceptions.ConflictError\nif the dynamic table already exists in Snowflake.  Equivalent to SQL create dynamic table <name> ....",
        "CreateMode.or_replace: Replace if the dynamic table already exists in Snowflake. Equivalent to SQL\ncreate or replace dynamic table <name> ....",
        "CreateMode.if_not_exists: Do nothing if the dynamic table already exists in Snowflake.\nEquivalent to SQL create dynamic table <name> if not exists...",
        "Default is CreateMode.error_if_exists.",
        "",
        "Examples",
        "Creating a dynamic table, replacing any existing dynamic table with the same name:",
        "Creating a dynamic table by cloning an existing table:",
        "Creating a dynamic table by cloning an existing table in a different database and schema:",
        "Iterate through DynamicTable objects from Snowflake, filtering on any optional \u2018like\u2019 pattern.",
        "like (str, optional) \u2013 A case-insensitive string functioning as a filter, with support for SQL\nwildcard characters (% and _).",
        "starts_with (str, optional) \u2013 String used to filter the command output based on the string of characters that appear\nat the beginning of the object name. Uses case-sensitive pattern matching.",
        "show_limit (int, optional) \u2013 Limit of the maximum number of rows returned by iter(). The default is None, which behaves equivalently\nto show_limit=10000. This value must be between 1 and 10000.",
        "from_name (str, optional) \u2013 Fetch rows only following the first row whose object name matches\nthe specified string. This is case-sensitive and does not have to be the full name.",
        "deep (bool, optional) \u2013 Optionally includes dependency information of the dynamic table. Default is None,\nwhich is equivalent to False.",
        "Examples",
        "Showing all dynamic tables that you have access to see:",
        "Showing information of the exact dynamic table you want to see:",
        "Showing dynamic tables starting with \u2018your-dynamic-table-name-\u2018:",
        "Using a for loop to retrieve information from iterator:",
        "Was this page helpful?"
    ]
}