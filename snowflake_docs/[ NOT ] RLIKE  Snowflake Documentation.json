{
    "url": "https://docs.snowflake.com/en/sql-reference/functions/rlike",
    "title": "[ NOT ] RLIKE | Snowflake Documentation",
    "paragraphs": [
        "String functions (regular expressions)",
        "Performs a comparison to determine whether a string matches or does not match a specified pattern. Both inputs must be text expressions.",
        "RLIKE is similar to the [ NOT ] LIKE function, but with POSIX extended regular expressions instead of SQL LIKE pattern syntax.\nIt supports more complex matching conditions than LIKE.",
        "Tip",
        "You can use the search optimization service to improve the performance of queries that call this function.\nFor details, see Search Optimization Service.",
        "[ NOT ] REGEXP (2nd syntax) , REGEXP_LIKE (1st syntax)",
        "See also: String functions (regular expressions)",
        "REGEXP_COUNT , REGEXP_INSTR , REGEXP_REPLACE , REGEXP_SUBSTR , REGEXP_SUBSTR_ALL",
        "[ NOT ] ILIKE , [ NOT ] LIKE",
        "Required:",
        "The string to search for matches.",
        "Pattern to match.",
        "For guidelines on specifying patterns, see String functions (regular expressions).",
        "Optional:",
        "String of one or more characters that specifies the parameters used for searching for matches. Supported values:",
        "Parameter",
        "Description",
        "c",
        "Case-sensitive matching",
        "i",
        "Case-insensitive matching",
        "m",
        "Multi-line mode",
        "e",
        "Extract submatches",
        "s",
        "POSIX wildcard character . matches \\n",
        "Default: c",
        "For more details, see Specifying the parameters for the regular expression.",
        "Returns a BOOLEAN or NULL.",
        "When RLIKE is specified, the value is TRUE if there is a match. Otherwise, returns FALSE.",
        "When NOT RLIKE is specified, the value is TRUE if there is no match. Otherwise, returns FALSE.",
        "When either RLIKE or NOT RLIKE is specified, returns NULL if any argument is NULL.",
        "The function implicitly anchors a pattern at both ends (for example, '' automatically becomes '^$', and 'ABC'\nautomatically becomes '^ABC$'). To match any string starting with ABC, the pattern would be 'ABC.*'.",
        "The backslash character (\\) is the escape character. For more information, see Specifying regular expressions in single-quoted string constants.",
        "For more usage notes, see the General usage notes for regular expression functions.",
        "Arguments with collation specifications currently aren\u2019t supported.",
        "Run the following commands to set up the data for the examples in this topic:",
        "The following examples perform case-insensitive pattern matching with wildcards:",
        "The following examples determine if a string matches the format of a phone number and an email address.\nIn these examples, the regular expressions are specified in dollar-quoted strings\nto avoid escaping the backslashes in the regular expression.",
        "The following examples perform the same matches but use\nsingle-quoted string constants to specify the regular expressions.",
        "Because the example uses single-quoted string constants,\neach backslash must be escaped with another backslash.",
        "Alternatively, rewrite the statements and avoid sequences that rely on the backslash character.",
        "The following example performs case-insensitive pattern matching with wildcards:",
        "For additional examples of regular expressions, see [ NOT ] REGEXP.",
        "Was this page helpful?",
        "On this page"
    ]
}