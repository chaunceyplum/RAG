{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/reference/python/1.26.0/modin/pandas_api/modin.pandas.date_range",
    "title": "modin.pandas.date_range | Snowflake Documentation",
    "paragraphs": [
        "Return a fixed frequency DatetimeIndex.",
        "Returns the range of equally spaced time points (where the difference between any\ntwo adjacent points is specified by the given frequency) such that they all\nsatisfy start <[=] x <[=] end, where the first one and the last one are, resp.,\nthe first and last time points in that range that fall on the boundary of freq\n(if given as a frequency string) or that are valid for freq (if given as a\npandas.tseries.offsets.DateOffset). (If exactly one of start,\nend, or freq is not specified, this missing parameter can be computed\ngiven periods, the number of timesteps in the range. See the note below.)",
        "start (str or datetime-like, optional) \u2013 Left bound for generating dates.",
        "end (str or datetime-like, optional) \u2013 Right bound for generating dates.",
        "periods (int, optional) \u2013 Number of periods to generate.",
        "freq (str or DateOffset, default 'D') \u2013 Frequency strings can have multiples, e.g. \u20185H\u2019.",
        "tz (str or tzinfo, optional) \u2013 Time zone name for returning localized DatetimeIndex, for example\n\u2018Asia/Hong_Kong\u2019. By default, the resulting DatetimeIndex is\ntimezone-naive.",
        "normalize (bool, default False) \u2013 Normalize start/end dates to midnight before generating date range.",
        "name (str, default None) \u2013 Name of the resulting DatetimeIndex.",
        "inclusive ({\"both\", \"neither\", \"left\", \"right\"}, default \"both\") \u2013",
        "Include boundaries; Whether to set each bound as closed or open.",
        "New in version 1.4.0.",
        "",
        "**kwargs \u2013 For compatibility. Has no effect on the result.",
        "rng",
        "DatetimeIndex",
        "See also",
        "An immutable container for datetimes.",
        "Return a fixed frequency TimedeltaIndex.",
        "Return a fixed frequency PeriodIndex.",
        "Return a fixed frequency IntervalIndex.",
        "Notes",
        "Of the four parameters start, end, periods, and freq,\nexactly three must be specified. If freq is omitted, the resulting\nDatetimeIndex will have periods linearly spaced elements between\nstart and end (closed on both sides).",
        "To learn more about the frequency strings, please see this link.",
        "Also, custom or business frequencies are not implemented in Snowpark pandas, e.g., \u201cB\u201d, \u201cC\u201d, \u201cSMS\u201d, \u201cBMS\u201d, \u201cCBMS\u201d,\n\u201cBQS\u201d, \u201cBYS\u201d, \u201cbh\u201d, \u201ccbh\u201d.",
        "Examples",
        "Specifying the values",
        "The next four examples generate the same DatetimeIndex, but vary\nthe combination of start, end and periods.",
        "Specify start and end, with the default daily frequency.",
        "Specify timezone-aware start and end, with the default daily frequency. Note that Snowflake use TIMESTAMP_TZ to\nrepresent datetime with timezone, and internally it stores UTC time together with an associated time zone offset\n(and the actual timezone is no longer available). More details can be found in\nhttps://docs.snowflake.com/en/sql-reference/data-types-datetime#timestamp-ltz-timestamp-ntz-timestamp-tz.",
        "Specify start and periods, the number of periods (days).",
        "Specify end and periods, the number of periods (days).",
        "Specify start, end, and periods; the frequency is generated\nautomatically (linearly spaced).",
        "Other Parameters",
        "Changed the freq (frequency) to 'ME' (month end frequency).",
        "Multiples are allowed",
        "freq can also be specified as an Offset object.",
        "Specify tz to set the timezone.",
        "inclusive controls whether to include start and end that are on the\nboundary. The default, \u201cboth\u201d, includes boundary points on either end.",
        "Use inclusive='left' to exclude end if it falls on the boundary.",
        "Use inclusive='right' to exclude start if it falls on the boundary, and\nsimilarly inclusive='neither' will exclude both start and end.",
        "Was this page helpful?"
    ]
}