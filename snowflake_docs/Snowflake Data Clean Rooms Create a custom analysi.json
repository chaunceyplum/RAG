{
    "url": "https://docs.snowflake.com/en/user-guide/cleanrooms/demo-flows/register-cleanroom-in-ui",
    "title": "Snowflake Data Clean Rooms: Create a custom analysis template with a user interface | Snowflake Documentation",
    "paragraphs": [
        "Feature \u2014 Generally Available",
        "Not available in government regions.",
        "This topic describes how a provider can programmatically create and share a clean room with a consumer while providing a user interface that the consumer can use to execute an analysis in the web app. It is similar to the Machine Learning flow, but demonstrates how to provide the consumer with a user interface to an otherwise complex machine learning workflow.",
        "This example generates a clean room with a lookalike modeling template. Lookalike modeling is a type of analysis where a consumer tries to find \u201chigh-value\u201d customers from a provider\u2019s data by training a statistical model on their high-value customers. This model uses consumer-specified flags to indicate high-value users, such as those with expenditures above a certain threshold, in the consumer\u2019s dataset. The trained model is then used to infer which customers in the provider\u2019s data could potentially be \u201chigh value\u201d to the consumer.",
        "You can apply multiple custom templates to a clean room, each of which will appear in the web app for the consumer.",
        "This is the general flow for creating and sharing a clean room with a UI:",
        "Provider:",
        "Set up your coding environment, including specifying the proper role and warehouse to use.",
        "Create the clean room and enable any cross-region sharing needed for the clean room.",
        "Add your data to the clean rooms, and set join policies on the table.",
        "Add any custom scripting you need.",
        "Set the column policies on the template.",
        "Create and apply the UI for your template to the web app.",
        "Share your clean room with consumers.",
        "Consumer:",
        "Use the web app to install the clean room and run analyses on it.",
        "You need two separate Snowflake accounts to complete this flow. Use the first account to execute the provider\u2019s commands, then switch to the second account to execute the consumer\u2019s commands.",
        "Use a Snowflake worksheet in the provider account to execute the commands in this section.",
        "Before using the Developer APIs, you need to assume the SAMOOHA_APP_ROLE role and specify the warehouse used to execute the APIs. If you don\u2019t have the SAMOOHA_APP_ROLE role, contact your account administrator.",
        "Execute the following commands to set up your environment:",
        "Before creating a clean room, you need to specify an alphanumeric name for the clean room. The name cannot contain special characters except spaces and underscores. Make sure that the name of the clean room does not duplicate an existing clean room.",
        "To specify the name of the clean room, execute the following command:",
        "You are now ready to execute the provider.cleanroom_init command to create the clean room. The second argument defines the distribution of the clean room. For this example, you\u2019ll set this to INTERNAL to bypass the automated security scan that takes place before the clean room can be released to collaborators. The provider and consumer accounts must be in the same organization to use the INTERNAL distribution method. For clean rooms being distributed to an account in a different organization, you must use an EXTERNAL distribution.",
        "To create the clean room, execute the following command:",
        "After you create a clean room, you must set its release directive before it can be shared with a collaborator.",
        "Note",
        "When you set the distribution of a clean room to EXTERNAL, you must wait for the security scan to complete before setting the release directive. You can view the status of the security scan by executing:",
        "You can continue to execute commands during the security scan as long as you set the release directive before trying to execute the provider.create_or_update_cleanroom_listing command.",
        "To set the release directive for the clean room, execute the following command:",
        "In order to share a clean room with a Snowflake customer whose account is in a different region than your account, you must enable Cross-Cloud Auto-Fulfillment. For information about the additional costs associated with collaborating with consumers in other regions, see Cross-Cloud Auto-Fulfillment costs.",
        "When using developer APIs, enabling cross-region sharing is a two-step process:",
        "A Snowflake administrator with the ACCOUNTADMIN role enables Cross-Cloud Auto-Fulfillment for your Snowflake account. For instructions, see Collaborate with accounts in different regions.",
        "You execute the provider.enable_laf_for_cleanroom command to enable Cross-Cloud Auto-Fulfillment for the clean room. For example:",
        "After you have enabled Cross-Cloud Auto-Fulfillment for the clean room, you can add consumers to your listing as usual using the provider.create_or_update_cleanroom_listing command. The listing is automatically replicated to remote clouds and regions as needed.",
        "Link Snowflake tables into the clean room, browse through the list of tables in your Snowflake account and enter the fully qualified table names (Database.Schema.Table) as an array. The procedure automatically makes the table accessible to the clean room by creating a secure view of the table from within the clean room, thereby avoiding any need to make a copy of your table.",
        "Note",
        "If this step doesn\u2019t work even though your table exists, it is likely the SAMOOHA_APP_ROLE role has not yet been given access to it. If so, switch to the ACCOUNTADMIN role, call the following procedure on the database, and then switch back for the rest of the flow:",
        "You can view the dataset names linked to the clean room by calling the following procedure.",
        "You can see the datasets linked to the clean room using the following query:",
        "Specify which columns the consumer is allowed to join on when running templates within the clean room. This procedure should be called on identity columns like email. The join policy is \u201creplace only\u201d, so if the function is called again, then the previously set join policy is completely replaced by the new one.",
        "If you want to view all the columns to decide the join policy columns, call the following procedure.",
        "Load some python functions into the clean room for the lookalike ML work. All python functions installed in the clean room remain completely confidential. They cannot be seen by the consumer.",
        "The following API allows you to define your Python functions directly as inline functions into the clean room. Alternatively you can load Python from staged files you\u2019ve uploaded into the clean room stage. See the API reference guide for an example.",
        "Note",
        "Note that this implementation is limited by the total Snowflake size constraint on the amount of data that can be aggregated by ARRAY_AGG (i.e. 16MB). An implementation leveraging batching and streaming models that can scale to arbitrary-sized datasets using batching is available upon request.",
        "Now install a scoring function into the clean room:",
        "Note",
        "Loading Python into the clean room creates a new patch for the clean room. If your clean room distribution is set to EXTERNAL, you need to wait for the security scan to complete, then update the default release directive using:",
        "To add a custom analysis template to the clean room you need a placeholder for table names on both the provider and consumer sides, along with join columns from the provider side. In SQL Jinja templates, these placeholders must always be:",
        "source_table: an array of table names from the provider",
        "my_table: an array of table names from the consumer",
        "Table names can be made dynamic through using these variables, but they can also be hardcoded into the template if desired using the name of the view linked to the clean room. Column names can either be hardcoded into the template, if desired, or set dynamically through parameters. If they are set through parameters, remember that you need to call the parameters dimensions or measure_column, which need to be arrays, in order for them to be checked against the column policy. You add these as SQL Jinja parameters in the template that will be passed in later by the consumer when querying. The join policies ensure that the consumer cannot join on columns other than the authorized ones.",
        "Alternatively, any argument in a custom SQL Jinja template can be checked for compliance with the join and column policies using the following filters:",
        "join_policy: checks if a string value or filter clause is compliant with the join policy",
        "column_policy: checks if a string value or filter clause is compliant with the column policy",
        "join_and_column_policy: checks if columns used for a join in a filter clause are compliant with the join policy, and that columns used as a filter are compliant with the column policy",
        "For example, in the clause {{ provider_id | sqlsafe | join_policy }}, an input of p.HEM will be parsed to check if p.HEM is in the join policy. Note: Only use the sqlsafe filter with caution as it allows collaborators to put pure SQL into the template.",
        "Note",
        "All provider/consumer tables must be referenced using these arguments since the name of the secure view actually linked to the cleanroom will be different to the table name. Critically, provider table aliases MUST be p (or p1), p2, p3, p4, etc. and consumer table aliases must be c (or c1), c2, c3, etc. This is required in order to enforce security policies in the cleanroom.",
        "Note that this function overrides any existing template with the same name. If you want to update any existing template, you can simply call this function again with the updated template.",
        "A set of features is selected from the provider dataset, and a set of labels is selected from the consumer dataset, along with a \u201chigh value\u201d flag (called label_value). These 2 tables are then inner-joined on email and passed to the Random Forest training algorithm. Lastly, the output of the model training step is passed to an inference function, which uses the trained model to \u201cinfer\u201d which of the provider customers NOT in the consumer datasets could be \u201chigh value\u201d. The count of such individuals is then returned, along with the model error.",
        "The threshold for determining the score beyond which a customer is \u201clikely high value\u201d is manually set in the template as 0.5. This can be easily changed when adding the template to the clean room.",
        "If you want to view the templates that are currently active in the clean room, call the following procedure. You can make the modifications to enable Differential Privacy guarantees on your analysis. A similar pattern can be incorporated into any custom template that you choose to write.",
        "Once you\u2019ve added your custom template, you can apply column policies to all table columns defined by that template.",
        "To see the top 10 rows of the table available to your consumers, run the following query:",
        "Set the columns on which you want to group, aggregate (e.g. SUM/AVG) and generally use in an analysis for every table and template combination. This gives flexibility so that the same table can allow different column selections depending on the underlying template. This should be called only after adding the template.",
        "Note that set_column_policy is not additive; if the function is called again, then the previous column policy is completely replaced by the new one.",
        "Column policy should not be used on identity columns like email, HEM, RampID, etc. since you don\u2019t want the consumer to be able to group by these columns. In the production environment, the system will intelligently infer PII columns and block this operation, but this feature is not available in the sandbox environment. It should only be used on columns that you want the consumer to be able to aggregate and group by, like Status, Age Band, Region Code, Days Active, etc.",
        "Note that for the \u201ccolumn_policy\u201d and \u201cjoin_policy\u201d to carry out checks on the consumer analysis requests, all column names MUST be referred to as  dimensions or measure_columns in the SQL Jinja template. Make sure you use these tags to refer to columns you want to be checked in custom SQL Jinja templates.",
        "If you want to view the column policy that has been added to the clean room, call the following procedure.",
        "Next you will define the UI for your template so that consumers can use it in the browser:",
        "Call the provider.add_ui_form_customizations command to define how the template appears in the web app.",
        "Sign in to the web as the provider.",
        "The provider.add_ui_form_customizations command defines how the template in the clean room appears in the web app. For a complete description of the customizations that you can use to design the user interface, see the Clean room UI update commands section of the Provider API Reference.",
        "Note",
        "You can optionally use the warehouse_hints customization to control which kind of warehouse the consumer account will use to run analyses. For example, for most machine learning use cases, Snowflake recommends specifying a Snowpark-optimized warehouse. For valid values for warehouse_size, see CREATE WAREHOUSE.",
        "For this example, execute the provider.add_ui_form_customizations command with the following customizations:",
        "Finally, add a data consumer to the clean room by adding their Snowflake account locator and account names as shown below. The Snowflake account name must be of the form <ORGANIZATION>.<ACCOUNT_NAME>.",
        "Note",
        "In order to call the following procedures, make sure you have first set the release directive using provider.set_default_release_directive.\nYou can see the latest available version and patches using:",
        "If you want to enable provider-run analysis, call enable_provider_run_analysis after calling add_consumers and before calling\ncreate_or_update_cleanroom_listing.",
        "Important",
        "Whenever you change important information in a clean room such as the UI, policies, or datasets, be sure to call\nprovider.create_or_update_cleanroom_listing\nto update the clean room in production. Changes can take up to 10 minutes to appear in the UI, for both the producer\nand the consumer.",
        "Here are some useful helper functions for creating a clean room.",
        "Multiple consumer account locators can be passed into the provider.add_consumers function as a comma separated string, or as separate\ncalls to provider.add_consumers.",
        "If you want to view the consumers who have been added to this clean room, call the following procedure.",
        "If you want to view the clean rooms that have been created recently, use the following procedure.",
        "If you want to get more insights about the clean room that you have created, use the following procedure.",
        "Any clean room created can also be deleted. The following command drops the clean room entirely, so any consumers who previously had access to the clean room will no longer be able to use it. If a clean room with the same name is desired in the future, it must be re-initialized using the above flow.",
        "The clean room you just created as the provider is now available in the web app in the consumer\u2019s clean room environment.",
        "Note",
        "You can continue to modify the UI form in the provider account, and then see the changes in the consumer\u2019s clean room environment in real time.",
        "To sign in to the clean room as the consumer:",
        "Sign in to the web app of the Snowflake Data Clean Room. For details, see Snowflake Data Clean Room: Web app.",
        "Enter your email address, and select Continue.",
        "Enter your password.",
        "Select the Snowflake account associated with the consumer account.",
        "On the Clean Rooms page, find the tile that corresponds to the clean room you just created, and select Install.",
        "To run an analysis in the clean room:",
        "On the Clean Rooms page, find the tile for the new clean room and select Run.",
        "Select the analysis or query to run, then select Proceed.",
        "Configure the required fields for the chosen analysis, optionally choose a warehouse size, then select Run.",
        "Optionally provide a name for the analysis. If you want the analysis to run periodically, choose a time interval, otherwise choose Off to run your analysis only once.",
        "Select Save to start your analysis running.",
        "Select View all analyses to see your list of scheduled, running, and complete analyses, including the one you just created.",
        "When the analysis completes, select it to see the results.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}