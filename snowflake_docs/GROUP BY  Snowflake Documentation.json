{
    "url": "https://docs.snowflake.com/en/sql-reference/constructs/group-by",
    "title": "GROUP BY | Snowflake Documentation",
    "paragraphs": [
        "Query syntax",
        "Groups rows with the same group-by-item expressions and computes aggregate functions for the resulting group. A GROUP BY\nexpression can be:",
        "A column name.",
        "A number referencing a position in the SELECT list.",
        "A general expression.",
        "GROUP BY CUBE , GROUP BY GROUPING SETS , GROUP BY ROLLUP",
        "Where:",
        "Column alias appearing in the query block\u2019s SELECT list.",
        "Position of an expression in the SELECT list.",
        "Any expression on tables in the current scope.",
        "Specifies that all items in the SELECT list that do not use aggregate functions should be used for grouping.",
        "For examples, refer to Group by all columns.",
        "A GROUP BY clause can reference expressions in the projection clause by name or by position.\nIf the GROUP BY clause references by name, then each reference is resolved as follows:",
        "If the query contains a database object (e.g. table or view) with a matching column name, then the reference is resolved to the\ncolumn name.",
        "Otherwise, if the projection clause of the SELECT contains an expression alias with a matching name, then the reference is\nresolved to the alias.",
        "For an example, see Demonstrate precedence when a column name and an alias match.",
        "If all SELECT items use aggregate functions, specifying GROUP BY ALL is equivalent to specifying the statement without the\nGROUP BY clause.",
        "For example, the following statement only has SELECT items that use aggregate functions:",
        "The statement above is equivalent to not specifying the GROUP by clause:",
        "The following sections provide examples of using the GROUP BY clause:",
        "Group by one column",
        "Group by multiple columns",
        "Group by all columns",
        "Demonstrate precedence when a column name and an alias match",
        "Note that the examples in each section use the data that you set up in Setting up the data for the examples.",
        "The examples in this section use a table named sales and a table named product. To create these tables and insert the\ndata needed for the example, execute the following statements:",
        "This example shows the gross revenue per product, grouped by product_id (i.e. the total amount of money received for\neach product):",
        "The following example builds on the previous example, showing the net profit per product, grouped by product_id:",
        "The following example demonstrates how to group by multiple columns:",
        "The following example is equivalent to the example used in Group by multiple columns.",
        "It is possible (but usually a bad idea) to create a query that contains an alias that matches a column name:",
        "If a GROUP BY clause contains a name that matches both a column name and an alias, then the GROUP BY clause uses the column\nname. This is demonstrated in the example below.",
        "Create a table and insert rows:",
        "The query below returns the sum of the salaries of the employees who are active and the sum of the salaries of the employees who\nare on leave.",
        "The query below uses the alias state, which matches the name of a column of a table in the query. When state is used in\nthe GROUP BY, Snowflake interprets it as a reference to the column name, not the alias. This query therefore returns the sum of\nthe salaries of the employees in the state of California and the sum of the salaries of the employees in the state of Oregon,\nyet displays employment_state information (e.g. \u201cActive\u201d) rather than the names of states or provinces.",
        "Was this page helpful?",
        "On this page"
    ]
}