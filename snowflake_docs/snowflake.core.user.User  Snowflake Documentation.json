{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-python-api/reference/latest/_autosummary/snowflake.core.user.User",
    "title": "snowflake.core.user.User | Snowflake Documentation",
    "paragraphs": [
        "Bases: object",
        "A model object representing the User resource.",
        "Constructs an object of type User with the provided properties.",
        "name (str) \u2013 User name",
        "password (str, optional) \u2013 Password",
        "login_name (str, optional) \u2013 Login name",
        "display_name (str, optional) \u2013 Display name",
        "first_name (str, optional) \u2013 First name",
        "middle_name (str, optional) \u2013 Middle name",
        "last_name (str, optional) \u2013 Last name",
        "email (str, optional) \u2013 Email address",
        "must_change_password (bool, optional) \u2013 Does this user need to change their password (e.g., after assigning a temp password)",
        "disabled (bool, optional) \u2013 Has this user been disabled from the system",
        "days_to_expiry (int, optional) \u2013 How many days until this user expires",
        "mins_to_unlock (int, optional) \u2013 How many minutes until the account is unlocked after multiple failed logins",
        "default_warehouse (str, optional) \u2013 The default warehouse to use when this user starts a session",
        "default_namespace (str, optional) \u2013 The default namespace to use when this user starts a session",
        "default_role (str, optional) \u2013 The default role to use when this user starts a session",
        "default_secondary_roles (str,  default 'ALL') \u2013 The default secondary roles of this user to use when starting a session. Only valid set values are ALL or NONE. Default is ALL after 2024-07 BCR.",
        "mins_to_bypass_mfa (int, optional) \u2013 How many minutes until MFA is required again",
        "rsa_public_key (str, optional) \u2013 RSA public key of the user",
        "rsa_public_key_2 (str, optional) \u2013 Second RSA public key of the user",
        "comment (str, optional) \u2013 Comment about the user.",
        "type (str, optional) \u2013 Indicates the type of user (PERSON | SERVICE | LEGACY_SERVICE)",
        "enable_unredacted_query_syntax_error (bool, optional) \u2013 Whether to show unredacted query syntax errors in the query history.",
        "network_policy (str, optional) \u2013 Specifies an existing network policy is active for the user. Otherwise, use account default.",
        "created_on (datetime, optional)",
        "last_successful_login (datetime, optional)",
        "expires_at (datetime, optional)",
        "locked_until (datetime, optional)",
        "has_password (bool, optional)",
        "has_rsa_public_key (bool, optional)",
        "rsa_public_key_fp (str, optional) \u2013 Fingerprint of the user\u2019s RSA public key",
        "rsa_public_key_2_fp (str, optional) \u2013 Fingerprint of the user\u2019s second RSA public key",
        "ext_authn_duo (bool, optional)",
        "ext_authn_uid (str, optional)",
        "owner (str, optional)",
        "snowflake_lock (bool,  default False) \u2013 Whether the user, account, or organization is locked by Snowflake.",
        "snowflake_support (bool,  default False) \u2013 Whether Snowflake Support is allowed to use the user or account",
        "mins_to_bypass_network_policy (int, optional) \u2013 Temporary bypass network policy on the user for a specified number of minutes",
        "password_last_set (datetime, optional)",
        "custom_landing_page_url (str, optional)",
        "custom_landing_page_url_flush_next_ui_load (bool,  default False) \u2013 Whether or not to flush the custom landing page of the user on next UI load",
        "Methods",
        "Creates an instance of User from a dict.",
        "This method constructs a User object from a dictionary with the key-value pairs of its properties.",
        "obj (dict) \u2013 A dictionary whose keys and values correspond to the properties of the resource object.",
        "A User object created using the input dictionary; this will fail if the required properties are missing.",
        "User",
        "Creates a dictionary of the properties from a User.",
        "This method constructs a dictionary with the key-value entries corresponding to the properties of the User object.",
        "A dictionary object created using the input model.",
        "dict",
        "Was this page helpful?"
    ]
}