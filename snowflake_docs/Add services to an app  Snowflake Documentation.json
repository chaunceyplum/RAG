{
    "url": "https://docs.snowflake.com/en/developer-guide/native-apps/container-services",
    "title": "Add services to an app | Snowflake Documentation",
    "paragraphs": [
        "Feature \u2014 Generally Available",
        "The Snowflake Native App Framework is generally available on supported cloud platforms. For additional information, see\nSupport for private connectivity, VPS, and government regions.",
        "The topic describes how to configure and use services in a Snowflake Native App with Snowpark Container Services.\nFor information on using a job service in an app, see Add job services to an app.",
        "In order for an app to create a service in the consumer account, the consumer\nmust first grant the following privileges:",
        "CREATE COMPUTE POOL",
        "This privileges is required for all services. One or more compute pools are required\nto create a service in the consumer account.",
        "BIND SERVICE ENDPOINT",
        "This privilege is required for any service that exposes endpoints. If a service needs\nto make connections to URLs outside of Snowflake, this privilege is required for the\napp to create the required external access integration.",
        "The following considerations apply when creating a service within a Snowflake Native App with Snowpark Container Services:",
        "References to warehouses. See Best practices when using services within an app for\ninformation on using in a Snowflake Native App with Snowpark Container Services.",
        "Quoted names for a service within an app are not supported.",
        "Services cannot not be created in a versioned schema.",
        "Services may not be created outside of the application using a container image\ncreated within the app.",
        "The following are best practices and considerations when using services within\na Snowflake Native App with Snowpark Container Services:",
        "Create a Streamlit app or stored procedures that allows consumers to interact with\na service.",
        "In some situations, a consumer may need to create, start, stop, restart, and\nmanage the services provided by the app.",
        "Use a single stored procedure to verify that the consumer has granted all the\nrequired privileges.",
        "A service may require that the consumer grants multiple privileges to the app.\nFor example, a service may require the CREATE COMPUTE POOL, CREATE WAREHOUSE,\nBIND SERVICE ENDPOINT and other privileges. An app may also require reference to\nexisting objects in the consumer account.",
        "In this context, Snowflake recommends using a single stored procedure to verify\nthat all prerequisites have been met. After all prerequisites are verified,\nthis stored procedure would then create the service.",
        "If a service requires a warehouse to execute queries, the app should\ncreate the warehouse directly in the consumer account. This requires that the\nconsumer grant the CREATE WAREHOUSE global privilege to the app. See\nRequest global privileges from consumers for more information.",
        "When creating a service using a specification template, store the arguments provided by the consumer inside\nyour application instance. This allows them to be passed as arguments when upgrading\na service.",
        "To create a service in an app, use the CREATE SERVICE command in the setup\nscript. Providers should always consider calling this command from within a stored procedure instead\nof running it directly.",
        "Within an app with containers, services can be created using specification file or by using a\nspecification template.",
        "To create a service a service from a specification file, use the CREATE SERVICE\ncommand and include a reference to the service specification file:",
        "This example shows how to create the service using the FROM SPECIFICATION_FILE clause which uses a relative\npath to the file. The FROM SPECIFICATION_FILE clause points to the service specification file that is specific\nto a version of the app. This path is relative to the app root directory.",
        "However, you can also use a specification file on a stage. See CREATE SERVICE\nfor more information.",
        "To create a service using a specification template,\nuse the FROM SPECIFICATION_TEMPLATE_FILE clause of the CREATE SERVICE command as shown\nin the following example:",
        "See specification template for more information.",
        "A Snowflake Native Apps with Snowpark Container Services supports multiple ways of creating a service within a stored procedure.",
        "Create a service by using the grant_callback property",
        "Create a service based on a reference definition",
        "Create a service using a stored procedure",
        "A provider can use any combination of these methods to create services in the consumer\naccount.",
        "grant_callback is a property in the manifest file that allows providers to\nspecify a callback function. The callback function is a stored procedure that can\ncreate compute pools, services and perform other setup tasks required by the application.",
        "Note",
        "Using the grant_callback property to specify the callback function is only\nsupported by Snowflake Native Apps with Snowpark Container Services.",
        "The advantage of specifying a callback function with grant_callback is that\nthe stored procedure is not called until the consumer grants the required privileges\nto the app. This ensures that the app has the privileges required to create services\nand other objects in the consumer account.",
        "To use grant_callback add it to the configuration section of the\nmanifest.yml file:",
        "Then, in the setup script, define a call back function as shown in the following example:",
        "This example creates a grant_callback procedure that does the following:",
        "Tests whether the consumer has granted the CREATE COMPUTE POOL privilege to the app. If the consumer\nhas granted this privilege, the grant_callback procedure creates the compute pool.",
        "Tests whether the consumer has granted the BIND SERVICE ENDPOINT privilege to the app. If the consumer\nhas granted this privilege, the grant_callback procedure creates the service.",
        "This example shows a pattern for creating services and a compute pool in an app with\ncontainers. In this example, the app first tests whether the consumer has granted the required privileges\nand then creates the service or compute pool.",
        "An app can create services using a reference definition by using the\nregister_callback property in the manifest.yml file. This property specifies a\nstored procedure used to bind an object in the consumer account to the reference definition.",
        "For more information on using references in an app, see\nRequest references and object-level privileges from consumers",
        "An app can use the register_callback of the  reference to create a service after all the\nrequired references are bound. If a service is created before all the references to an external access\nintegrations or secret is allowed, the service creation fails.",
        "An app can create a service directly within a stored procedure. As with other stored procedures,\nproviders can define them in the application setup script. This stored procedure would use\nthe CREATE SERVICE command to create the service, then grant the necessary privileges\non the stored procedure to an application role.",
        "The consumer would call this stored procedure to create the service in their account\nafter they have given the app the required privileges and references.",
        "To determine the status of a service, an app can call the\nSYSTEM$GET_SERVICE_STATUS \u2014 Deprecated system function from the setup script.",
        "This system function returns a JSON object for each container in each service instance.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}