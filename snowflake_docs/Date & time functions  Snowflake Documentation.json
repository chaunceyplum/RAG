{
    "url": "https://docs.snowflake.com/en/sql-reference/functions-date-time#label-supported-date-time-parts",
    "title": "Date & time functions | Snowflake Documentation",
    "paragraphs": [
        "This family of functions can be used to construct, convert, extract, or modify date, time, and timestamp data.",
        "Sub-category",
        "Function",
        "Notes",
        "Construction",
        "DATE_FROM_PARTS",
        "TIME_FROM_PARTS",
        "TIMESTAMP_FROM_PARTS",
        "Extraction",
        "DATE_PART",
        "Accepts all date and time parts (see Supported date and time parts).",
        "DAYNAME",
        "EXTRACT",
        "Alternative for DATE_PART.",
        "HOUR / MINUTE / SECOND",
        "Alternative for DATE_PART.",
        "LAST_DAY",
        "Accepts relevant date parts (see Supported date and time parts).",
        "MONTHNAME",
        "NEXT_DAY",
        "PREVIOUS_DAY",
        "YEAR* / DAY* / WEEK* / MONTH / QUARTER",
        "Alternative for DATE_PART.",
        "Addition/subtraction",
        "ADD_MONTHS",
        "DATEADD",
        "Accepts relevant date and time parts (see\nSupported date and time parts).",
        "DATEDIFF",
        "Accepts relevant date and time parts (see\nSupported date and time parts).",
        "MONTHS_BETWEEN",
        "TIMEADD",
        "Alias for DATEADD.",
        "TIMEDIFF",
        "Alias for DATEDIFF.",
        "TIMESTAMPADD",
        "Alias for DATEADD.",
        "TIMESTAMPDIFF",
        "Alias for DATEDIFF.",
        "Truncation",
        "DATE_TRUNC",
        "Accepts relevant date and time parts (see\nSupported date and time parts).",
        "TIME_SLICE",
        "Allows a time to be \u201crounded\u201d to the start of an evenly-spaced interval.",
        "TRUNC",
        "Alternative for DATE_TRUNC.",
        "Conversion",
        "TO_DATE , DATE",
        "Supports conversions based on string, timestamp, and VARIANT expressions.\nSupports integers for conversions based on the beginning of the Unix epoch.",
        "TO_TIME , TIME",
        "Supports conversions based on string, timestamp, and VARIANT expressions.\nSupports integers for conversions based on the beginning of the Unix epoch.",
        "TO_TIMESTAMP / TO_TIMESTAMP_*",
        "Supports conversions based on string, date, timestamp, and VARIANT\nexpressions. Supports numeric expressions and integers for conversions\nbased on the beginning of the Unix epoch.",
        "Time zone",
        "CONVERT_TIMEZONE",
        "Alerts",
        "LAST_SUCCESSFUL_SCHEDULED_TIME",
        "SCHEDULED_TIME",
        "Several date and time functions return date, time, and timestamp values. The following session parameters\ndetermine the format of the output returned by these functions:",
        "The display format for times is determined by the TIME_OUTPUT_FORMAT\nsession parameter (default HH24:MI:SS).",
        "The display format for dates is determined by the DATE_OUTPUT_FORMAT\nsession parameter (default YYYY-MM-DD).",
        "The display format for timestamps is determined by the timestamp data type returned by the function.\nThe following session parameters set the output format for different timestamp data types:",
        "TIMESTAMP_LTZ_OUTPUT_FORMAT",
        "TIMESTAMP_NTZ_OUTPUT_FORMAT",
        "TIMESTAMP_TZ_OUTPUT_FORMAT",
        "TIMESTAMP_OUTPUT_FORMAT",
        "For more information, see Date and time input and output formats.",
        "Certain functions (as well as their appropriate aliases and alternatives) accept a date or time part as an argument. The following two\ntables list the parts (case-insensitive) that you can use with these functions.",
        "Date parts",
        "Abbreviations / variations",
        "DATEADD",
        "DATEDIFF",
        "DATE_PART",
        "DATE_TRUNC",
        "LAST_DAY",
        "year",
        "y , yy , yyy , yyyy , yr , years , yrs",
        "\u2714",
        "\u2714",
        "\u2714",
        "\u2714",
        "\u2714",
        "month",
        "mm , mon , mons , months",
        "\u2714",
        "\u2714",
        "\u2714",
        "\u2714",
        "\u2714",
        "day",
        "d , dd , days, dayofmonth",
        "\u2714",
        "\u2714",
        "\u2714",
        "\u2714",
        "dayofweek [1]",
        "weekday , dow , dw",
        "\u2714",
        "dayofweekiso [2]",
        "weekday_iso , dow_iso , dw_iso",
        "\u2714",
        "dayofyear",
        "yearday , doy , dy",
        "\u2714",
        "week [1]",
        "w , wk , weekofyear , woy , wy",
        "\u2714",
        "\u2714",
        "\u2714",
        "\u2714",
        "\u2714",
        "weekiso [2]",
        "week_iso , weekofyeariso , weekofyear_iso",
        "\u2714",
        "quarter",
        "q , qtr , qtrs , quarters",
        "\u2714",
        "\u2714",
        "\u2714",
        "\u2714",
        "\u2714",
        "yearofweek [1]",
        "\u2714",
        "yearofweekiso [2]",
        "\u2714",
        "[1] For usage details, see the next section, which describes how Snowflake handles calendar weeks and weekdays.",
        "[2] Not controlled by the WEEK_START and WEEK_OF_YEAR_POLICY session parameters, as described in the next section.",
        "Time Parts",
        "Abbreviations / Variations",
        "DATEADD",
        "DATEDIFF",
        "DATE_PART",
        "DATE_TRUNC",
        "LAST_DAY",
        "hour",
        "h , hh , hr , hours , hrs",
        "\u2714",
        "\u2714",
        "\u2714",
        "\u2714",
        "minute",
        "m , mi , min , minutes , mins",
        "\u2714",
        "\u2714",
        "\u2714",
        "\u2714",
        "second",
        "s , sec , seconds , secs",
        "\u2714",
        "\u2714",
        "\u2714",
        "\u2714",
        "millisecond",
        "ms , msec , milliseconds",
        "\u2714",
        "\u2714",
        "\u2714",
        "microsecond",
        "us , usec , microseconds",
        "\u2714",
        "\u2714",
        "\u2714",
        "nanosecond",
        "ns , nsec , nanosec , nsecond , nanoseconds ,\nnanosecs , nseconds",
        "\u2714",
        "\u2714",
        "\u2714",
        "\u2714",
        "epoch_second",
        "epoch , epoch_seconds",
        "\u2714",
        "epoch_millisecond",
        "epoch_milliseconds",
        "\u2714",
        "epoch_microsecond",
        "epoch_microseconds",
        "\u2714",
        "epoch_nanosecond",
        "epoch_nanoseconds",
        "\u2714",
        "timezone_hour",
        "tzh",
        "\u2714",
        "timezone_minute",
        "tzm",
        "\u2714",
        "The behavior of week-related functions in Snowflake is controlled by the WEEK_START and WEEK_OF_YEAR_POLICY session parameters. An important aspect of understanding how these\nparameters interact is the concept of ISO weeks.",
        "As defined in the ISO 8601 standard (for dates and time formats), ISO weeks always start on Monday and \u201cbelong\u201d to the year that contains the Thursday of\nthat week. This means that a day in one year might belong to a week in a different year:",
        "For days in early January, the WOY (week of the year) value can be 52 or 53 (i.e. the day belongs to the last week in the previous year).",
        "For days in late December, the WOY value can be 1 (i.e. the day belongs to the first week in the next year).",
        "Snowflake provides a special set of week-related date functions (and equivalent data parts) whose behavior is consistent with the ISO week semantics:\nDAYOFWEEKISO, WEEKISO, and YEAROFWEEKISO.",
        "These functions (and date parts) disregard the session parameters (i.e. they always follow the ISO semantics).",
        "For details about how the other week-related date functions are handled, see the following sections:",
        "First day of the week",
        "First and last weeks of the year",
        "Examples",
        "Most week-related functions are controlled only by the WEEK_START session parameter. The function results differ depending on how this parameter is set:",
        "Function",
        "Parameter set to 0 (default / legacy behavior)",
        "Parameter set to 1 - 7 (Monday - Sunday)",
        "DAYOFWEEK",
        "Returns 0 (Sunday) to 6 (Saturday).",
        "Returns 1 (defined first day of the week) to 7 (last day of the week relative to the defined first day).",
        "DATE_TRUNC (with a WEEK part)",
        "Truncates the input week to start on Monday.",
        "Truncates the input week to start on the defined first day of the week.",
        "LAST_DAY (with a WEEK part)",
        "Returns the Sunday of the input week.",
        "Returns the last day of the input week relative to the defined first day of the week.",
        "DATEDIFF (with a WEEK part)",
        "Calculated using weeks starting on Monday.",
        "Calculated using weeks starting on the defined first day of the week.",
        "Tip",
        "The default value for the parameter is 0, which preserves the legacy Snowflake behavior (ISO-like semantics).\nHowever, we recommend changing this value to explicitly control the resulting behavior of the functions. The most common\nscenario is to set the parameter to 1.",
        "The WEEK_OF_YEAR_POLICY session parameter controls how the WEEK and YEAROFWEEK functions behave.\nThe parameter can have two values:",
        "0: The affected week-related functions use semantics similar to the ISO semantics, in which a week belongs to a given year\nif at least 4 days of that week are in that year. This means that all the weeks have 7 days, but the first days of January and the\nlast days of December might belong to a week in a different year. For this reason, both the YEAROFWEEK and YEAROFWEEKISO\nfunctions can provide the year that the week belongs to.",
        "1: January 1 always starts the first week of the year, and December 31 is always in the last week of the year. This means\nthat the first week and last week in the year might have fewer than 7 days.",
        "This behavior is also influenced by the start day of the week, as controlled by the value set for the WEEK_START session parameter:",
        "0 or 1: The behavior is equivalent to the ISO week semantics, with the week starting on Monday.",
        "2 to 7: The \u201c4 days\u201d logic is preserved, but the first day of the week is different.",
        "Tip",
        "The default value for both parameters is 0, which preserves the legacy Snowflake behavior (ISO-like semantics). However,\nwe recommend changing these values to explicitly control the resulting behavior of the functions. The most common scenario is\nto set both parameters to 1.",
        "These examples query the same set of date functions, but with different values set for the WEEK_OF_YEAR_POLICY\nand WEEK_START session parameters to illustrate how they influence the results of the functions.",
        "The examples use the following data:",
        "Setting WEEK_START to 0 (legacy behavior) or 1 (Monday) does not have a significant effect, as illustrated in the following two examples:",
        "With WEEK_START set to 0, the DOW for Sunday is 0.",
        "With WEEK_START set to 1, the DOW for Sunday is 7.",
        "The results differ more significantly if WEEK_START is set to any day other than Monday. For example, setting the parameter to 3 (Wednesday) changes the results of all the week-related functions (columns 3 through 8):",
        "The following example sets both parameters to 0 to follow ISO-like semantics (i.e. week starts on Monday and all weeks have 7 days):",
        "The next example illustrates the effect of keeping WEEK_OF_YEAR_POLICY set to 0, but changing WEEK_START to 3 (Wednesday):",
        "2016 now has 53 weeks (instead of 52).",
        "WOY for Jan 1st, 2017 moves to week 53 (from 52).",
        "WOY for Jan 2nd and 3rd, 2017 moves to week 53 (from 1).",
        "YOW for Jan 2nd and 3rd, 2017 moves to 2016 (from 2017).",
        "WOY (ISO) and YOW (ISO) are not affected by the parameter change.",
        "The last two examples set WEEK_OF_YEAR_POLICY to 1 and set WEEK_START first to 1 (Monday) and then 3 (Wednesday):",
        "With WEEK_OF_YEAR_POLICY set to 1 and WEEK_START set to 1 (Monday):",
        "WOY for 2017-01-01 is 1.",
        "Week 1 consists of 1 day.",
        "Week 2 starts on Mon.",
        "This usage scenario is generally the most common.",
        "With WEEK_OF_YEAR_POLICY set to 1 and WEEK_START set to 3 (Wednesday):",
        "WOY for 2017-01-01 is still 1.",
        "Week 1 consists of 3 days.",
        "Week 2 starts on Wed.",
        "In both examples, WOY (ISO) and YOW (ISO) are not affected by the parameter change.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}