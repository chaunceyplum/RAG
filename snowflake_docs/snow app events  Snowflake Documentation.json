{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-cli/command-reference/native-apps-commands/retrieve-app-events",
    "title": "snow app events | Snowflake Documentation",
    "paragraphs": [
        "Feature \u2014 Generally Available",
        "Not available in government regions.",
        "Fetches events for this app from the event table configured in Snowflake.  By default, this command will fetch events generated by an app installed in the current connection\u2019s account. To fetch events generated by an app installed in a consumer account, use the \u2013consumer-org and \u2013consumer-account options. This requires event sharing to be set up to route events to the provider account: https://docs.snowflake.com/en/developer-guide/native-apps/setting-up-logging-and-events",
        "None",
        "Fetch events that are newer than this time ago, in Snowflake interval syntax.",
        "Fetch events that are older than this time ago, in Snowflake interval syntax.",
        "Restrict results to specific record type. Can be specified multiple times. Default: [].",
        "Restrict results to a specific scope name. Can be specified multiple times. Default: [].",
        "The name of the consumer organization.",
        "The name of the consumer account in the organization.",
        "The SHA-1 hash of the consumer application name.",
        "Fetch only the first N events. Cannot be used with \u2013last. Default: -1.",
        "Fetch only the last N events. Cannot be used with \u2013first. Default: -1.",
        "Continue polling for events. Implies \u2013last 20 unless overridden or the \u2013since flag is used. Default: False.",
        "Polling interval in seconds when using the \u2013follow flag. Default: 10.",
        "The ID of the package entity on which to operate when definition_version is 2 or higher.",
        "The ID of the application entity on which to operate when definition_version is 2 or higher.",
        "Path where Snowflake project resides. Defaults to current working directory.",
        "String in format of key=value. Overrides variables from env section used for templates. Default: [].",
        "Name of the connection, as defined in your config.toml file. Default: default.",
        "Host address for the connection. Overrides the value specified for the connection.",
        "Port for the connection. Overrides the value specified for the connection.",
        "Name assigned to your Snowflake account. Overrides the value specified for the connection.",
        "Username to connect to Snowflake. Overrides the value specified for the connection.",
        "Snowflake password. Overrides the value specified for the connection.",
        "Snowflake authenticator. Overrides the value specified for the connection.",
        "Snowflake private key file path. Overrides the value specified for the connection.",
        "Path to file with an OAuth token that should be used when connecting to Snowflake.",
        "Database to use. Overrides the value specified for the connection.",
        "Database schema to use. Overrides the value specified for the connection.",
        "Role to use. Overrides the value specified for the connection.",
        "Warehouse to use. Overrides the value specified for the connection.",
        "Uses connection defined with command line parameters, instead of one defined in config. Default: False.",
        "Token to use for multi-factor authentication (MFA).",
        "Run Python connector diagnostic test. Default: False.",
        "Diagnostic report path. Default: <temporary_directory>.",
        "Diagnostic report path to optional allowlist.",
        "Specifies the output format. Default: TABLE.",
        "Displays log entries for log levels info and higher. Default: False.",
        "Displays log entries for log levels debug and higher; debug logs contain additional information. Default: False.",
        "Turns off intermediate output to console. Default: False.",
        "Displays the help text for this command.",
        "Note",
        "Before using this command, you must set up event handling for the provider Snowflake account. For information, see Logging, tracing, and metrics.",
        "The snow app events command retrieves events generated by an installed native application installed in the current connection\u2019s account.",
        "By default, this command will fetch events generated by a Snowflake Native App installed in the current connection\u2019s account. To fetch events generated by a Snowflake Native App installed in a consumer account, use the --consumer-org and --consumer-account options. These options require event sharing to be set up to route events to the provider account.",
        "Retrieve all events for an application installed in the provider account.",
        "Retrieve a subset of events for an application installed in the provider account.",
        "Retrieve events for a consumer installation.",
        "Retrieve events for a consumer application using the hashed application name.",
        "Retrieve events as JSON.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}