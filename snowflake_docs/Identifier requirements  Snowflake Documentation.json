{
    "url": "https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html",
    "title": "Identifier requirements | Snowflake Documentation",
    "paragraphs": [
        "Unquoted object identifiers:",
        "Start with a letter (A-Z, a-z) or an underscore (\u201c_\u201d).",
        "Contain only letters, underscores, decimal digits (0-9), and dollar signs (\u201c$\u201d).",
        "Are stored and resolved as uppercase characters (e.g. id is stored and resolved as ID).",
        "If you put double quotes around an identifier (e.g.\n\u201cMy identifier with blanks and punctuation.\u201d), the following rules apply:",
        "The case of the identifier is preserved when storing and resolving the identifier (e.g. \"id\" is stored and resolved as\nid).",
        "The identifier can contain and start with ASCII, extended ASCII, and non-ASCII  characters.",
        "To use the double quote character inside a quoted identifier, use two quotes. For example:",
        "creates a table named:",
        "where the quotation marks are part of the name.",
        "Note",
        "Regardless of whether an identifier is unquoted or double-quoted, the maximum number of characters allowed is 255 (including blank spaces).",
        "Identifiers can also be specified using string literals, session variables or bind variables. For details, see SQL variables.",
        "If an identifier is not enclosed in double quotes, it must begin with a letter or underscore (_) and cannot contain extended characters or blank\nspaces.",
        "The following are all examples of valid identifiers; however, the case of the characters in these identifiers would not be preserved:",
        "Unquoted identifiers are stored and resolved in uppercase. Therefore, an unquoted identifier is equivalent to a capitalized double-quoted\nidentifier with the same name. For example, the following two statements attempt to create the same table:",
        "Delimited identifiers (i.e. identifiers enclosed in double quotes) are case-sensitive and can start with and contain any valid characters,\nincluding:",
        "Numbers",
        "Special characters (., ', !, @, #, $, %, ^, &, *, etc.)",
        "Extended ASCII and non-ASCII characters",
        "Blank spaces",
        "For example:",
        "Important",
        "If an object is created using a double-quoted identifier, when referenced in a query or any other SQL statement, the identifier must be specified\nexactly as created, including the double quotes. Failure to include the quotes might result in an Object does not exist error (or\nsimilar type of error).",
        "Also, note that the entire identifier must be enclosed in quotes when referenced in a query/SQL statement. This is particularly important if periods\n(.) are used in identifiers because periods are also used in fully-qualified object names to separate each object.",
        "For example:",
        "Double-quoted identifiers are not supported for the\nnames of user-defined functions (UDFs) and procedures in which the\nhandler language is Java, JavaScript, Snowflake Scripting, or SQL.",
        "You can use only ASCII characters for the names of user-defined functions (UDFs) and procedures in which the handler language is Java.",
        "By default, Snowflake applies the following rules for storing identifiers (at creation/definition time) and resolving them (in queries and other SQL\nstatements):",
        "When an identifier is unquoted, it is stored and resolved in uppercase.",
        "When an identifier is double-quoted, it is stored and resolved exactly as entered, including case.",
        "For example, the following four names are equivalent and all resolve to TABLENAME:",
        "In contrast, the following four names are considered to be different, unique values:",
        "If these identifiers were used to create objects of the same type (e.g. tables), they would result in the creation of four distinct objects.",
        "In the ANSI/ISO standard for SQL, identifiers in double quotes (delimited identifiers) are treated as case-sensitive. However,\nsome companies provide databases that treat double-quoted identifiers as case-insensitive.",
        "If you are migrating your data and applications from one of these databases to Snowflake, those applications might use double\nquotes around identifiers that are intended to be case-insensitive. This can prevent Snowflake from resolving the identifiers\ncorrectly. For example, an application might use double quotes around an identifier in lowercase, and the Snowflake database\nhas the identifier in uppercase.",
        "To work around this limitation, Snowflake provides the QUOTED_IDENTIFIERS_IGNORE_CASE session parameter, which\ncauses Snowflake to treat lowercase letters in double-quoted identifiers as uppercase when creating and finding objects.",
        "See the next sections for details:",
        "Controlling case using the QUOTED_IDENTIFIERS_IGNORE_CASE parameter",
        "Impact of changing the parameter",
        "Note",
        "Changing the value of the parameter can affect your ability to find existing objects. See\nImpact of changing the parameter for details.",
        "To configure Snowflake to treat alphabetic characters in double-quoted identifiers as uppercase for the session, set the\nparameter to TRUE for the session. With this setting, all alphabetical characters in identifiers are stored and resolved as\nuppercase characters.",
        "In other words, the following eight names are equivalent and all resolve to TABLENAME:",
        "Note that the parameter has no effect on any of the limitations for unquoted identifiers with regards to numbers, extended\ncharacters, and blank spaces.",
        "Changing the QUOTED_IDENTIFIERS_IGNORE_CASE session parameter only affects new objects and queries:",
        "With the default setting of FALSE, if an object is created using a double-quoted identifier with mixed case, Snowflake stores\nthe identifier in mixed case.",
        "If the parameter is later changed to TRUE, Snowflake will not be able to resolve that double-quoted mixed case identifier and\nwill not be able retrieve that object.",
        "Tip",
        "Due to the impact that changing the parameter can have on resolving identifiers, we highly recommend choosing the\nidentifier resolution method early in your implementation of Snowflake. Then, have your account administrator set the parameter\nat the account level to enforce this resolution method by default.",
        "Although you can override this parameter at the session level, we don\u2019t encourage changing the parameter from the default,\nunless you have an explicit need to do so.",
        "The following examples illustrate the behavior after changing the parameter from FALSE to TRUE:",
        "Additionally, if the identifiers for two tables differ only by case, one identifier might resolve to a different table after changing the parameter:",
        "Was this page helpful?",
        "On this page"
    ]
}