{
    "url": "https://docs.snowflake.com/en/release-notes/clients-drivers/snowapi-python-2024",
    "title": "Snowflake Python APIs release notes for 2024 | Snowflake Documentation",
    "paragraphs": [
        "This article contains the release notes for the Snowflake Python APIs, including the following when applicable:",
        "Behavior changes",
        "New features",
        "Customer-facing bug fixes",
        "See Snowflake Python APIs: Managing Snowflake objects with Python for documentation.",
        "Removed the async_req parameter (asynchronous mode) from the execute_job API in the Service resource.",
        "None.",
        "Added support for the following new resources:",
        "Cortex Chat",
        "Cortex inference",
        "Added support for customized user agents.",
        "Fixed the ValueError message for Enum types.",
        "Fixed the API documentation for Enum types to show possible values.",
        "Added the missing DeleteMode type to the API documentation.",
        "Initial general availability release.",
        "Improved error messages by shortening stack traces. To control this behavior, use the _SNOWFLAKE_PRINT_VERBOSE_STACK_TRACE\nenvironment variable option.",
        "Now includes read-only properties by default in dictionaries returned by to_dict() from models. To toggle this option, use\nto_dict (hide_readonly_properties=True).",
        "Added the if_exists property, which toggles whether you can perform an action without erroring if the given resource does not\nexist, to the following methods and resources:",
        "drop() for Database, NetworkPolicy, View, User, ComputePool, ImageRepository,\nPipe, Role, Service, Stage, Table, Task, DynamicTable, Role,\nAlert, Procedure, Warehouse, Schema, and Function.",
        "refresh() for Database and DynamicTable.",
        "suspend() and resume() for Service, DynamicTable, and Warehouse.",
        "suspendRecluster() and resumeRecluster() for DynamicTable and Table.",
        "Database now supports the undrop() method.",
        "Service now supports the from_name parameter in iter().",
        "Table now supports the target_database and target_schema parameters in swap_with().",
        "Procedure now supports the copy_grants parameter in create().",
        "Creating dynamic tables now properly allows cloning source objects from different databases and schemas.",
        "Fixed an SSL connection issue for accounts and organizations with underscores when used in hostnames.",
        "Added support for the database role resource.",
        "Added new methods to the role, database role, and user resources to manage access privileges.",
        "Improved logs with secrets scrubbed.",
        "None.",
        "Improved the API documentation significantly.",
        "Removed snowflake-snowpark-python as a dependency of snowflake.core. However, this package is still required for some\nfeatures, such as task graph (DAG) concepts; the check and requirement for these features is performed at runtime.",
        "Added support for all Python versions 3.8 or newer.",
        "Added support for targetDatabase and targetSchema for cloning tables.",
        "Added support for targetDatabase for cloning Schemas.",
        "Exposed type definitions.",
        "Added support for execute_job in ServiceCollection.",
        "Added support for get_containers, get_instances, and get_roles in ServiceResource.",
        "Added support for create_or_update in Service and ComputePool.",
        "Added support for the following new resources:",
        "Account",
        "Alert",
        "Catalog integration",
        "Event table",
        "External volume",
        "Managed account",
        "Network policy",
        "Notebook",
        "Notification integration",
        "Pipe",
        "Procedure",
        "Stream",
        "User defined functions",
        "View",
        "Fixed a bug relating to the logging of URLs, where not all the URL pieces were injected into logging.",
        "None.",
        "Fixed multiple issues related to handling large results.",
        "The client now retries requests on retryable error codes.",
        "The following StageResource methods are now deprecated and have been renamed. The old method names are now aliases.",
        "From upload_file to put.",
        "From download_file to get.",
        "Note",
        "The following new features require the Snowflake version 8.27 release.",
        "Added client logging to the library to enhance debug ability.",
        "Added undrop support to the DynamicTable, Schema, and Table object types.",
        "Enhanced support for the Grant object type with the following limitations:",
        "The SQL command SHOW GRANTS ON is not supported.",
        "Only Grantees.role is supported as the grantee value for the Grants.to method (SHOW GRANTS TO).",
        "To be more consistent with their equivalent SQL commands, the following methods are now deprecated and have been renamed as follows. The\nold method names are now aliases that call the new method names, so the old method names will still work as expected.",
        "From create_or_update to create_or_alter.",
        "From delete to drop.",
        "From undelete to undrop.",
        "Fixed a bug in stored procedure generated code.",
        "Note",
        "The following new features are dependent on the release of Snowflake version 8.23.",
        "Added API support for the following resources:",
        "DynamicTable",
        "Function (Currently supports service functions only)",
        "Grant",
        "Added support for finalizers in tasks and task graphs (DAGs).",
        "Added API support in experimental mode for the following resources:",
        "User",
        "Role",
        "Management Stage",
        "Re-added create_or_update support for the Warehouse, Schema, and Database resources.",
        "Note",
        "The create_or_update feature for these resources requires the upcoming release of Snowflake version 8.23, which is currently\nunreleased as of June 10, 2024.",
        "Added the get_endpoints method for Service resources that returns a list of endpoints for a given Service object.",
        "with_managed_access is now properly returned as a property of SchemaResource.",
        "Added the with_managed_access Boolean option in create_or_update for SchemaResource. This option is equivalent to\nthe WITH MANAGED ACCESS optional parameter in CREATE SCHEMA.",
        "Usage example:",
        "Added the get_endpoints method for Service resources that returns a list of endpoints for a given Service object.",
        "Removed the deep parameter from fetch() on TableResource objects. fetch() always returns detailed\ncolumns and constraints information of a TableResource.",
        "create_or_update() currently no longer works for Schema, Warehouse, Database, and ComputePool\nresources. create() does work for these resources.",
        "Creating tables using as_select no longer carries over information from any source tables used in the as_select query.",
        "The data_retention_time_in_days and max_data_extension_time_in_days properties of a table are inherited from schema or\ndatabase settings when not explicitly set in a create_or_update statement that alters an existing table.",
        "Added support for the Cortex Search API endpoint.",
        "Added support for large results.",
        "Added support for long-running queries.",
        "Added the ServiceSpec helper function to infer the specification type from a provided string in Service resources.",
        "Updated to use the Snowflake API REST platform for all resources.",
        "pip install snowflake[ml] installs snowflake-ml-python v1.4.0.",
        "Various bug fixes.",
        "Version 0.7.0 introduces updates across the snowflake and snowflake.core packages.",
        "snowflake package updates:",
        "You can now run pip install snowflake[ml] to install the Snowpark ML library\nas an extra package dependency.",
        "snowflake.core package updates:",
        "Task predecessors now return their fully qualified name.",
        "Added the __str__() and __repr_html__() methods to DAGRun to make it notebook compatible.",
        "Replaced \u201cDAGs\u201d with \u201ctask graphs\u201d in the API reference documentation to better align with Snowflake documentation.",
        "snowflake.core package fixes:",
        "Fixed code generator and updated OpenAPI-spec driven models.",
        "Fixed Pydantic compatibility issues.",
        "Fixed a bug in the Task.error_integration property.",
        "Fixed a bug in the Task.config property when the REST property was missing.",
        "The >> and << operators of DAGTask now accept a function directly.",
        "DAGTask now uses the DAG\u2019s warehouse by default.",
        "DAGTask accepts a new parameter session_parameters.",
        "Updated TaskContext:",
        "The method get_predecessor_return_value now works for both long and short names of a DAGTask.",
        "Added the methods get_current_task_short_name and get_task_graph_config_property.",
        "Added support for pydantic 2.x.",
        "Added support for Python 3.11.",
        "Fixed a bug where DAGOperation.run() raised an exception if the DAG doesn\u2019t have a schedule.",
        "Fixed a bug where deleting a DAG didn\u2019t delete all of its sub-tasks.",
        "Fixed a bug that raised an error when a DAG\u2019s config is set.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}