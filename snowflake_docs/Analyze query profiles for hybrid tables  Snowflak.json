{
    "url": "https://docs.snowflake.com/en/user-guide/tables-hybrid-read-query-profiles",
    "title": "Analyze query profiles for hybrid tables | Snowflake Documentation",
    "paragraphs": [
        "Unistore workloads pose some interesting questions about query execution that you can investigate by using the Snowsight Query Profile\nfeature or information gleaned from EXPLAIN output. In addition to monitoring overall performance and throughput, you\nmay want to know if a table scan is being executed against the row store or object storage, or whether a specific secondary index is being used.",
        "This section identifies Query Profile operators and attributes that pertain to hybrid table operations and presents some examples to help\nyou understand how to read query plans that access hybrid tables. See also Monitor query activity with Query History.",
        "Table and index scan operators appear in query profiles to show access to hybrid tables. These operators typically appear at\nthe bottom of the tree, representing the first step in reading the data that is needed to execute a specific query. Queries against standard\ntables always use table scans; they do not use index scans.",
        "When a primary key index is used to scan a hybrid table, a TableScan operator appears in the query profile, not an\nIndexScan operator. When any other index is used to scan a hybrid table, such as a secondary index, you will see an IndexScan operator.",
        "Under Attributes for the IndexScan operator, you can see the fully qualified name of the index and\nAccess predicates. These are the predicates that are applied to the index during the scan. You can also see predicates for\nfilters that are applied during table scans.",
        "When a predicate is \u201cpushed\u201d to an index, the predicate contains a placeholder, inside parentheses, for the constant that was used in the query.\nFor example: SENSOR_DATA_DEVICE2.DEVICE_ID = (:SFAP_PRE_NR_1)",
        "Hybrid table data is maintained in two formats to serve both operational and analytical workloads. A common question asked by administrators is\nwhether a given query will access the row store or the column store (object storage). A query may read from one or both types of storage,\ndepending on the tables in question, the specific requirements of the query, availability of indexes, and other factors.",
        "The query profile for hybrid table queries includes a Scan Mode attribute for each table scan operator in the tree:",
        "ROW-BASED: The query reads from the table data in the row store, or uses indexes to compute query results.",
        "COLUMN-BASED: The query reads from an object storage copy of the same data that was loaded into the row store. Index scans can also access\nobject storage, for Time Travel queries.",
        "Scan mode is specific to hybrid tables. If a table scan is run on a standard table, no Scan Mode attribute is displayed.",
        "Where possible, table scans for hybrid tables read data from a columnar warehouse cache. This cache is an extension to the standard warehouse cache; see Optimizing the warehouse cache. The cache contains data that has been read from the hybrid table storage provider and is\naccessible by read-only queries against hybrid tables.",
        "To see cache usage in a given query profile, select the table scan operator and check the Percentage scanned from cache under Statistics.",
        "Queries that select from hybrid tables do not benefit from the query results cache.",
        "In the Profile Overview, you can see a Hybrid Table Requests Throttling percentage. To see this overview, do not select an operator in\nthe tree; the overview applies to the whole query plan.",
        "For example, the following query recorded that 87.5% of its execution time was spent being\nthrottled by the hybrid table storage provider. A high throttling percentage is an indicator that too many hybrid table read and write requests are\nbeing sent to the storage provider, relative to the quota for the database. For more information, see Quotas and throttling.",
        "The following Snowsight examples of query profiles show attributes specific to hybrid table\noperations. To understand these examples, you do not need to create and load the tables that are queried and modified. However,\nhere is the CREATE TABLE statement for one of the tables for reference. Note the definition of the PRIMARY KEY constraint (on the\ntimestamp column) and a secondary index (on the device_id column):",
        "Another similar hybrid table, sensor_data_device2, is also used in the examples.",
        "When your query filters the primary key of the table (timestamp), which is automatically indexed, the query profile uses a\nTableScan operator. Also note that ROW_BASED scan mode is used for this query.",
        "The query that generated this profile looks like this:",
        "Only part of the profile is shown here, focusing on the IndexScan operator and its attributes.\nThe scan mode is ROW_BASED, and you can see the complete predicate by hovering over Access Predicates.\nThe fully qualified index name is also displayed.",
        "DML operations on hybrid tables typically modify single rows. For example:",
        "The query profile for the TableScan operator shows that this UPDATE accesses the row store for the\nhybrid table (scan mode is ROW_BASED):",
        "In this case, assume that the following query is run twice in quick succession on a hybrid table.",
        "The first query reads all of the data from object storage. The second run of the query reads 100% of the data from the columnar cache.\nAlso note that the scan mode for this query is COLUMN_BASED.",
        "When you join a hybrid table to a standard table, you will see a Scan Mode attribute for the scan on the hybrid table, but not on\nthe standard table. For example, the TableScan operator on the left side of this join plan used ROW_BASED scan mode. The order_header\ntable is a hybrid table with order_id as its primary key (the joining column in this example). The other table, truck_history, is a standard table.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}