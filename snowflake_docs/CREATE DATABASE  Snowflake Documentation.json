{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-database",
    "title": "CREATE DATABASE | Snowflake Documentation",
    "paragraphs": [
        "Creates a new database in the system.",
        "This command supports the following variants:",
        "CREATE OR ALTER DATABASE: Creates a database if it doesn\u2019t exist or alters an existing database.",
        "CREATE DATABASE \u2026 CLONE: Creates a clone of an existing database, either at its current state or at a specific time/point in the past\n(using Time Travel). For more information about cloning a database, see Cloning considerations.",
        "In addition, this command can be used to:",
        "Create a database from a specified listing. See About sharing with listings.",
        "Create a database from a share provided by another Snowflake account. For more information about shares, see\nAbout Secure Data Sharing.",
        "Create a replica of an existing primary database (for example, a secondary database). For more information about database replication, see\nIntroduction to database replication across multiple accounts.",
        "Tip",
        "In addition to SQL, you can also use other interfaces, such as Snowflake REST APIs, Snowflake Python APIs, and Snowflake CLI.\nSee Alternate interfaces.",
        "ALTER DATABASE , DESCRIBE DATABASE , DROP DATABASE , SHOW DATABASES , UNDROP DATABASE",
        "DESCRIBE SHARE , SHOW SHARES, CREATE LISTING, CREATE OR ALTER <object>",
        "Standard Database",
        "Standard Database (from a listing)",
        "Shared Database (from a Share)",
        "Secondary Database (Database Replication)",
        "Preview Feature \u2014 Open",
        "Available to all accounts.",
        "Creates a new database if it doesn\u2019t already exist, or transforms an existing database into the database defined in the statement.\nA CREATE OR ALTER DATABASE statement follows the syntax rules of a CREATE DATABASE statement and has the same limitations as an\nALTER DATABASE statement.",
        "The following modifications are supported:",
        "Changing the following database properties and parameters:",
        "DATA_RETENTION_TIME_IN_DAYS",
        "MAX_DATA_EXTENSION_TIME_IN_DAYS",
        "EXTERNAL_VOLUME",
        "CATALOG",
        "REPLACE_INVALID_CHARACTERS",
        "DEFAULT_DDL_COLLATION",
        "STORAGE_SERIALIZATION_POLICY",
        "COMMENT",
        "For more information, see CREATE OR ALTER DATABASE usage notes.",
        "Creates a new database with the same parameter values:",
        "For more details, see CREATE <object> \u2026 CLONE.",
        "Specifies the identifier for the database; must be unique for your account.",
        "In addition, the identifier must start with an alphabetic character and cannot contain spaces or special characters unless the\nentire identifier string is enclosed in double quotes (e.g. \"My object\"). Identifiers enclosed in double quotes are also\ncase-sensitive.",
        "For more details, see Identifier requirements.",
        "Important",
        "As a best practice for Database Replication and Failover, we recommend giving each\nsecondary database the same name as its primary database. This practice supports referencing fully-qualified objects\n(i.e. '<db>.<schema>.<object>') by other objects in the same database, such as querying a fully-qualified table name in a view.",
        "If a secondary database has a different name from the primary database, then these object references would break in the secondary database.",
        "Specifies the identifier of the share from which to create the database. As documented, the name of the\nshare must be fully-qualified with the name of the account providing the share.",
        "Attention",
        "Snowflake recommends using the account replication feature to replicate\ndatabases.",
        "Specifies the identifier for a primary database from which to create a replica (i.e. a secondary database). If the identifier contains spaces,\nspecial characters, or mixed-case characters, the entire string must be enclosed in double quotes.",
        "Requires the account identifier and name of the primary database.",
        "Unique identifier of the account that stores the primary database. The preferred identifier is organization_name.account_name.\nTo view the list of accounts enabled for replication in your organization, query SHOW REPLICATION ACCOUNTS.",
        "Though the legacy account locator can also be used as the account identifier, its use is discouraged as it may not work in the future.\nFor more details about using the account locator as an account identifier, see Database Replication Usage Notes.",
        "Name of the primary database. As a best practice, we recommend giving each secondary database the same name as its primary database.",
        "Note",
        "As a best practice for Database Replication and Failover, we recommend setting the optional parameter\nDATA_RETENTION_TIME_IN_DAYS to the same value on the secondary database as on the\nprimary database.",
        "Specifies the global name of the listing from which to create the database, which must meet the following requirements:",
        "Can\u2019t be a monetized listing.",
        "Listing terms, if not of type OFFLINE, must have been accepted using Snowsight.",
        "Listing data products must be available locally in the current region.",
        "Whether a listing is available in the local region can be determined by viewing the is_ready_for_import column\nof DESCRIBE AVAILABLE LISTING.",
        "You must have the IMPORT LISTING privilege to create a database from a listing.\nYou must have the IMPORT SHARE privilege to create a database from a share.",
        "Specifies a database as transient. Transient databases do not have a Fail-safe period so they do not incur additional storage costs once\nthey leave Time Travel; however, this means they are also not protected by Fail-safe in the event of a data loss. For more information, see\nUnderstanding and viewing Fail-safe.",
        "In addition, by definition, all schemas (and consequently all tables) created in a transient database are transient. For more information about\ntransient tables, see CREATE TABLE.",
        "Default: No value (i.e. database is permanent)",
        "Specifies to create a clone of the specified source database. For more details about cloning a database, see CREATE <object> \u2026 CLONE.",
        "When cloning a database, the AT | BEFORE clause specifies to use Time Travel to clone the database at or\nbefore a specific point in the past. If the specified Time Travel time is at or before the point in time when the database was created,\nthe cloning operation fails with an error.",
        "Ignore tables that no longer have historical data available in Time Travel to clone. If the time in the past specified in the\nAT | BEFORE clause is beyond the data retention period for any child table in a database or schema, skip the cloning operation\nfor the child table. For more information, see\nChild Objects and Data Retention Time.",
        "Ignore hybrid tables, which will not be cloned. Use this option to clone a database that contains hybrid tables.\nThe cloned database includes other objects but skips hybrid tables.",
        "If you don\u2019t use this option and your database contains one or more hybrid tables, the command ignores hybrid tables silently. However, the error handling for databases that contain hybrid tables will change in an upcoming release; therefore, you may want to add this parameter to your commands preemptively.",
        "Specifies the number of days for which Time Travel actions (CLONE and UNDROP) can be performed on the database, as well as specifying the\ndefault Time Travel retention time for all schemas created in the database. For more details, see Understanding & using Time Travel.",
        "For a detailed description of this object-level parameter, as well as more information about object parameters, see\nParameters.",
        "Values:",
        "Standard Edition: 0 or 1",
        "Enterprise Edition:",
        "0 to 90 for permanent databases",
        "0 or 1 for transient databases",
        "Default:",
        "Standard Edition: 1",
        "Enterprise Edition (or higher): 1 (unless a different default value was specified at the account level)",
        "Note",
        "A value of 0 effectively disables Time Travel for the database.",
        "Object parameter that specifies the maximum number of days for which Snowflake can extend the data retention period for tables in the\ndatabase to prevent streams on the tables from becoming stale.",
        "For a detailed description of this parameter, see MAX_DATA_EXTENSION_TIME_IN_DAYS.",
        "Object parameter that specifies the default external volume to use for Apache Iceberg\u2122 tables.",
        "For more information about this parameter, see EXTERNAL_VOLUME.",
        "Object parameter that specifies the default catalog integration to use for Apache Iceberg\u2122 tables.",
        "For more information about this parameter, see CATALOG.",
        "Specifies whether to replace invalid UTF-8 characters with the Unicode replacement character (\ufffd) in query results for an\nIceberg table.\nYou can only set this parameter for tables that use an external Iceberg catalog.",
        "TRUE replaces invalid UTF-8 characters with the Unicode replacement character.",
        "FALSE leaves invalid UTF-8 characters unchanged. Snowflake returns a user error message when it encounters invalid UTF-8\ncharacters in a Parquet data file.",
        "Default: FALSE",
        "Specifies a default collation specification for all schemas and tables added to the database. The\ndefault can be overridden at the schema and individual table level.",
        "For more details about the parameter, see DEFAULT_DDL_COLLATION.",
        "Specifies the severity level of messages that should be ingested and made available in the active event table. Messages at\nthe specified level (and at more severe levels) are ingested.",
        "For more information about levels, see LOG_LEVEL. For information about setting the log level, see\nSetting levels for logging, metrics, and tracing.",
        "Controls how trace events are ingested into the event table.",
        "For information about levels, see TRACE_LEVEL. For information about setting trace level, see\nSetting levels for logging, metrics, and tracing.",
        "Specifies the storage serialization policy for Apache Iceberg\u2122 tables that use Snowflake as the catalog.",
        "COMPATIBLE: Snowflake performs encoding and compression of data files that ensures interoperability with third-party compute engines.",
        "OPTIMIZED: Snowflake performs encoding and compression of data files that ensures the best table performance within Snowflake.",
        "Default: OPTIMIZED",
        "Specifies a comment for the database.",
        "Default: No value",
        "Specifies the tag name and the tag string value.",
        "The tag value is always a string, and the maximum number of characters for the tag value is 256.",
        "For information about specifying tags in a statement, see Tag quotas for objects and columns.",
        "A role used to execute this SQL command must have the following\nprivileges at a minimum:",
        "Privilege",
        "Object",
        "Notes",
        "CREATE DATABASE",
        "Account",
        "Required to create a new database.",
        "Only the SYSADMIN role, or a higher role, has this privilege by default. The privilege can be granted to additional roles as needed.",
        "USAGE",
        "External volume, catalog integration",
        "Required if setting the EXTERNAL_VOLUME or CATALOG object parameters, respectively.",
        "IMPORT LISTING",
        "Account",
        "Required to create a database from a listing.",
        "IMPORT SHARE",
        "Account",
        "Required to create a database from a share.",
        "MODIFY LOG LEVEL",
        "Account",
        "Required to set the LOG_LEVEL for a database.",
        "MODIFY TRACE LEVEL",
        "Account",
        "Required to set the TRACE_LEVEL for a database.",
        "OWNERSHIP",
        "Database",
        "Required only when executing a CREATE OR ALTER DATABASE statement for an existing database.",
        "OWNERSHIP is a special privilege on an object that is automatically granted to the role that created the object, but can also be transferred using the GRANT OWNERSHIP command to a different role by the owning role (or any role with the MANAGE GRANTS privilege).",
        "For instructions on creating a custom role with a specified set of privileges, see Creating custom roles.",
        "For general information about roles and privilege grants for performing SQL actions on\nsecurable objects, see Overview of Access Control.",
        "Creating a database automatically sets it as the active/current database for the current session (equivalent to using the USE DATABASE\ncommand for the database).",
        "If a database with the same name already exists, an error is returned and the database is not created, unless the optional OR REPLACE\nkeyword is specified in the command.",
        "Important",
        "Using OR REPLACE is the equivalent of using DROP DATABASE on the existing database and then creating a new database with\nthe same name; however, the dropped database is not permanently removed from the system. Instead, it is retained in Time Travel.\nThis is important because dropped databases in Time Travel contribute to data storage for your account. For more information, see\nStorage Costs for Time Travel and Fail-safe.",
        "CREATE OR REPLACE <object> statements are atomic. That is, when an object is replaced, the old object is deleted and the new object is created in a single transaction.",
        "Creating a new database automatically creates two schemas in the database:",
        "PUBLIC: Default schema for the database.",
        "INFORMATION_SCHEMA: Schema which contains views and table functions that can be used for querying metadata about the objects in the\ndatabase, as well as across all objects in the account.",
        "Databases created from shares differ from standard databases in the following ways:",
        "They do not have the PUBLIC or INFORMATION_SCHEMA schemas unless these schemas were explicitly granted to the share.",
        "They cannot be cloned.",
        "Properties, such as TRANSIENT and DATA_RETENTION_TIME_IN_DAYS, do not apply.",
        "When a database is active/current, the PUBLIC schema is also active/current by default unless a different schema is used or the PUBLIC\nschema has been dropped.",
        "Regarding metadata:",
        "Attention",
        "Customers should ensure that no personal data (other than for a User object), sensitive data, export-controlled data, or other regulated data is entered as metadata when using the Snowflake service. For more information, see Metadata fields in Snowflake.",
        "Preview Feature \u2014 Open",
        "Available to all accounts.",
        "All limitations of the ALTER DATABASE command apply.",
        "This command supports the properties and syntax that overlap between the CREATE DATABASE and ALTER DATABASE commands. For this\nreason, the following are not supported:",
        "Swapping databases using the SWAP WITH parameter.",
        "Renaming a database using the RENAME TO parameter.",
        "Creating a clone of a database using the CLONE parameter.",
        "Adding or changing tags and policies. Any existing tags and policies are preserved.",
        "Converting a TRANSIENT database into a non-TRANSIENT database, or vice versa.",
        "Creating a database from a share using CREATE OR ALTER DATABASE \u2026 FROM SHARE.",
        "Creating a secondary (replica) database using CREATE OR ALTER DATABASE \u2026 AS REPLICA OF.",
        "Attention",
        "Snowflake recommends using the account replication feature to replicate\ndatabases.",
        "Database replication uses Snowflake-provided compute resources instead of your own virtual warehouse to copy objects and data. However, the\nSTATEMENT_TIMEOUT_IN_SECONDS session/object parameter still controls how long a statement runs before it is canceled. The\ndefault value is 172800 (2 days). Because the initial replication of a primary database can take longer than 2 days to complete\n(depending on the amount of metadata in the database as well as the amount of data in database objects), we recommend increasing the\nSTATEMENT_TIMEOUT_IN_SECONDS value to 604800 (7 days, the maximum value) for the session in which you run the replication operation.",
        "Run the following ALTER SESSION statement prior to executing the ALTER DATABASE secondary_db_name REFRESH\nstatement in the same session:",
        "Note that the STATEMENT_TIMEOUT_IN_SECONDS parameter also applies to the active warehouse in a session. The parameter honors the lower\nvalue set at the session or warehouse level. If you have an active warehouse in the current session, also set STATEMENT_TIMEOUT_IN_SECONDS\nto 604800 for this warehouse (using ALTER WAREHOUSE).",
        "For example:",
        "You can reset the parameter value to the default after the replication operation is completed:",
        "The preferred method of identifying the account that stores the primary database uses the organization name and account name as the\naccount identifier. If you decide to use the legacy account locator instead, see Account identifiers for replication and failover.",
        "The CREATE DATABASE \u2026 AS REPLICA command does not support the WITH TAG clause.",
        "This clause is not supported because the secondary database is read only. If your primary database specifies the WITH TAG clause, remove\nthe clause prior to creating the secondary database. To verify whether your database has the WITH TAG clause, call the\nGET_DDL function in your Snowflake account and specify the primary database in the function argument. If\na tag is set on the database, the function output will include an ALTER DATABASE \u2026 SET TAG statement.",
        "For more information, see Replication and tags.",
        "Create two permanent databases, one with a data retention period of 10 days:",
        "Create a transient database:",
        "Create a database from a share provided by account ab67890:",
        "For more detailed examples of creating a database from a share, see Consume imported data.",
        "Attention",
        "Snowflake recommends using the account replication feature to replicate\ndatabases.",
        "For an example of creating a replication group to replicate a single database to a target account, see\nReplicate a single database.",
        "Create a database named db1:",
        "Alter database db1 to set the DATA_RETENTION_TIME_IN_DAYS and DEFAULT_DDL_COLLATION parameters:",
        "The absence of a previously set parameter in the modified database definition results\nin unsetting it. In the following example, unset the DATA_RETENTION_TIME_IN_DAYS parameter for the database db1 created\nin the previous example:",
        "Snowflake REST APIs",
        "Create a database",
        "Create a database from a share",
        "Clone a database",
        "Snowflake Python APIs",
        "database.DatabaseCollection.create method",
        "Snowflake CLI",
        "snow object create command",
        "Was this page helpful?",
        "On this page"
    ]
}