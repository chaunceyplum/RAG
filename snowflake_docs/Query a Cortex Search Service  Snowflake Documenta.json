{
    "url": "https://docs.snowflake.com/en/user-guide/snowflake-cortex/cortex-search/query-cortex-search-service",
    "title": "Query a Cortex Search Service | Snowflake Documentation",
    "paragraphs": [
        "When you create a Cortex Search Service, a REST API endpoint is provisioned to serve queries to the service. You have two options for\nquerying a Cortex Search Service:",
        "Use the Snowflake Python APIs",
        "Use a client of your choice to query the REST endpoint directly",
        "Cortex Search Services may be queried using version 0.8.0 or later of the Snowflake Python APIs.\nSee Snowflake Python APIs: Managing Snowflake objects with Python for more information on the Snowflake Python APIs.",
        "First, install the latest version of the Snowflake Python APIs package from PyPI.\nSee Install the Snowflake Python APIs library for instructions on installing this package from PyPI.",
        "Connect to Snowflake using either a Snowpark Session or a Python Connector Connection and create a Root object.\nSee Connect to Snowflake with the Snowflake Python APIs for more instructions on connecting to Snowflake.\nThe following example uses the Snowpark Session object and a Python dictionary for configuration.",
        "Query the service using the following syntax:",
        "Note",
        "Version 0.8.0 or later of the Snowflake Python APIs library is required to query a Cortex Search Service.",
        "Cortex Search exposes a REST API endpoint in the suite of Snowflake REST APIs.\nThe REST endpoint generated for a Cortex Search Service is of the following structure:",
        "Where:",
        "<account_url>: Your Snowflake Account URL. See Finding the organization and account name for an account for instructions on finding your account URL.",
        "<db_name>: Database in which the service resides.",
        "<schema_name>: Schema in which the service resides.",
        "<service_name>: Name of the service.",
        ":query: The method to invoke on the service. In this case, the query method.",
        "For additional details, see the REST API reference for Cortex Search Service.\nThe following describes the parameters and filter syntax to use when querying the service.",
        "Parameter",
        "Description",
        "query",
        "Your search query, to search over the text column in the service.",
        "columns",
        "A comma-separated list of columns to return for each relevant result in the response. These columns must be included in the source query for the service.",
        "filter",
        "A filter object for filtering results based on data in the ATTRIBUTES columns. See Filter syntax.",
        "limit",
        "Cortex Search supports filtering on the ATTRIBUTES columns specified in the\nCREATE CORTEX SEARCH SERVICE command.",
        "Cortex Search supports four matching operators:",
        "String equality: @eq",
        "Array contains: @contains",
        "Date/timestamp greater than or equal to: @gte",
        "Date/timestamp less than or equal to: @lte",
        "These matching operators can be composed with various logical operators:",
        "@and",
        "@or",
        "@not",
        "The @gte and @lte operators can operate on ATTRIBUTES of type DATE or TIMESTAMP\n(Date & time data types) and accept values of the form: YYYY-MM-DD and,\nfor timezone aware dates: YYYY-MM-DD+HH:MM. If the timezone offset is not specified, the\ndate is interpreted in UTC. The @gte and @lte operators are inclusive of the specified values.",
        "These operators can be combined into a single filter object. Examples follow:",
        "Filtering on rows where string-like column string_col is equal to value value.",
        "Filtering on rows where ARRAY column array_col contains value value.",
        "Filtering on rows where TIMESTAMP column timestamp_col is between 2024-11-19 and 2024-12-19 (inclusive).",
        "Composing filters with logical operators:",
        "Snowflake REST APIs currently support authentication via key pair authentication and OAuth.\nFor details, see Authenticating Snowflake REST APIs with Snowflake.",
        "To query the service using curl and key pair authentication:",
        "Note",
        "When querying the REST API using JWT authentication, the user\u2019s default role is used. Thus, default role of the user querying the service\nmust have USAGE on the database and schema in which the service resides, and on the service itself. The querying user role does not\nnecessarily need privileges on the data in the source query. See User roles for more details on\nuser roles.",
        "The SNOWFLAKE.CORTEX.SEARCH_PREVIEW function allows you to preview the\nresults of individual queries to a Cortex Search Service from within a SQL environment such as a worksheet or Snowflake notebook cell.\nThis function makes it easy to quickly validate that a service is populated correctly and serving reasonable results.",
        "The following example previews the service with the preview query query string and parses the results into a VARIANT object.",
        "The role that is querying the Cortex Search Service must have the following privileges to retrieve results:",
        "Privilege",
        "Object",
        "USAGE",
        "The Cortex Search Service",
        "USAGE",
        "The database in which the Cortex Search Service resides",
        "USAGE",
        "The schema in which the Cortex Search Service resides",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}