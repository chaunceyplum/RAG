{
    "url": "https://docs.snowflake.com/en/sql-reference/bind-variables",
    "title": "Bind variables | Snowflake Documentation",
    "paragraphs": [
        "Applications can accept data from users and use that data in SQL statements. For\nexample, an application might ask a user to enter contact information, such as an\naddress and phone number.",
        "To specify this user input in a SQL statement, you can programmatically construct\na string for the SQL statement by concatenating the user input with the other parts of the\nstatement. Alternatively, you can use bind variables. To use bind variables,\nput one or more placeholders in the text of the SQL statement, then specify the\nvariable (the value to be used) for each placeholder.",
        "With bind variables, you replace literals in SQL statements with placeholders. For\nexample, the following SQL statement uses literals for the inserted values:",
        "The following SQL statement uses placeholders for the inserted values:",
        "Your application code binds data with each placeholder in the SQL statement. The\ntechnique for binding data with a placeholder depends on the programming language.\nThe syntax of the placeholder also varies by programming language. It is either\n?, :varname, or %varname.",
        "You can use Javascript to create\nstored procedures that execute SQL.",
        "To specify bind variables in Javascript code, use ? placeholders. For example,\nthe following INSERT statement specifies bind variables for the values inserted into\na table row:",
        "In Javascript code, you can use bind variables for the values in most SQL statements.\nFor information about limitations, see Limitations for bind variables.",
        "For more information about using bind variables in Javascript, see\nBinding variables.",
        "You can use Snowflake Scripting to create procedural code\nthat executes SQL, such as code blocks and stored procedures. To specify bind variables in Snowflake Scripting\ncode, prefix the variable name with a colon. For example, the following INSERT statement specifies a bind variable\nnamed variable1:",
        "In Snowflake Scripting code, you can use bind variables for the values in most SQL statements.\nFor information about limitations, see Limitations for bind variables.",
        "For more information about using bind variables in Snowflake Scripting, see\nUsing a variable in a SQL statement (binding) and Using an argument in a SQL statement (binding).",
        "You can use the Snowflake SQL API to access and update data in a Snowflake\ndatabase. You can create applications that use the SQL API to submit SQL statements and manage\ndeployments.",
        "When you submit a request that executes a SQL statement, you can use bind variables for values\nin the statement. For more information, see Using bind variables in a statement.",
        "Using Snowflake drivers, you can write applications that\nperform operations on Snowflake. The drivers support programming languages such as Go, Java,\nand Python. For information about using bind variables in an application for a specific driver,\nfollow the link for the driver:",
        "Go",
        "JDBC",
        ".NET",
        "Node.js",
        "ODBC",
        "Python",
        "Note",
        "The PHP driver does not support bind variables.",
        "You can bind an array of values to variables in SQL statements. Using this technique, you\ncan improve performance by inserting multiple rows in a single batch, which avoids network\nround trips and compilations. The use of an array bind is also called a \u201cbulk insert\u201d or\n\u201cbatch insert.\u201d",
        "Note",
        "Snowflake supports other data loading methods that are recommended instead of using array binds.\nFor more information, see Load data into Snowflake and\nData loading and unloading commands.",
        "The following is an example of an array bind in Python code:",
        "This example specifies the following bind list: [('milk', 2), ('apple', 3), ('egg', 2)].\nThe way an application specifies a bind list depends on the programming language.",
        "This code inserts three rows into the table:",
        "For information about using array binds in an application for a specific driver,\nfollow the link for the driver:",
        "Go",
        "JDBC",
        ".NET",
        "Node.js",
        "ODBC",
        "Python",
        "Note",
        "The PHP driver does not support array binds.",
        "The following limitations apply to array binds:",
        "Only INSERT INTO \u2026 VALUES statements can contain array bind variables.",
        "The VALUES clause must be a single-row list of bind variables. For example, the following\nVALUES clause is not allowed:",
        "An INSERT statement might use bind variables to insert multiple rows without using\nan array bind. The following example inserts values into two rows, but it doesn\u2019t use an array bind.",
        "For example, your application can specify a bind list that\u2019s equivalent to the following values, in order,\nfor the placeholders: [1,'String1',2,'String2']. Because the VALUES clause specifies more\nthan one row, the statement only inserts the exact number of values (four in the example), rather\nthan a dynamic number of rows.",
        "To bind variables with semi-structured data, bind the variable as a string type, and use functions\nsuch as PARSE_JSON or ARRAY_CONSTRUCT.",
        "The following example creates a table with one VARIANT column and then calls\nthe PARSE_JSON function to insert semi-structured data into the table with a bind variable:",
        "The following example queries the table:",
        "The query returns the following output:",
        "The following statement calls the ARRAY_CONSTRUCT function to insert an array of semi-structured\ndata into a VARIANT column with a bind variable:",
        "Both of these examples can insert a single row, or they can use an array bind to insert multiple rows\nin one batch. You can use this technique to insert any type of semi-structured data that is valid in a\nVARIANT column.",
        "The following limitations apply to bind variables:",
        "Limitations for SELECT statements:",
        "Bind variables can\u2019t replace numbers that are part of a data type definition (for example,\nNUMBER(?)) or collation specification (for example,\nCOLLATE ?).",
        "Bind variables can\u2019t be used for the source in a SELECT statement that queries files on a stage.",
        "Limitations for DDL commands:",
        "Bind variables can\u2019t be used in the following DDL commands:",
        "CREATE/ALTER INTEGRATION",
        "CREATE/ALTER REPLICATION GROUP",
        "CREATE/ALTER PIPE",
        "CREATE TABLE \u2026 USING TEMPLATE",
        "Bind variables can\u2019t be used in the following clauses:",
        "ALTER COLUMN",
        "COMMENT ON CONSTRAINT",
        "In CREATE/ALTER commands, bind variables can\u2019t be used for the values of the following parameters:",
        "CREDENTIALS",
        "DIRECTORY",
        "ENCRYPTION",
        "IMPORTS",
        "PACKAGES",
        "REFRESH",
        "TAG",
        "Parameters that are specific to external tables",
        "Bind variables can\u2019t be used for properties that are part of a FILE FORMAT\nvalue.",
        "In COPY INTO commands, bind variables can\u2019t be used for the values of the following parameters:",
        "CREDENTIALS",
        "ENCRYPTION",
        "FILE_FORMAT",
        "In SHOW commands, bind variables can\u2019t be used in the following parameters:",
        "LIKE",
        "LIMIT",
        "STARTS WITH",
        "Bind variables can\u2019t be used in an EXECUTE IMMEDIATE FROM command.",
        "Bind variable values can\u2019t be converted automatically from one data type to another when bind variables are used in:",
        "Snowflake Scripting code that specifies the data type explicitly",
        "DDL statements",
        "Stage names",
        "Bind variables don\u2019t mask sensitive data in all cases. For example, the values of bind variables might appear\nin error messages and other artifacts.",
        "Bind variables can help to prevent SQL injection attacks when you construct SQL statements with user input. However,\nbind variables can present potential security risks. If inputs to SQL statements come from external sources, make sure\nthey are validated. For more information, see SQL injection.",
        "Was this page helpful?",
        "On this page"
    ]
}