{
    "url": "https://docs.snowflake.com/en/sql-reference/data-types-text",
    "title": "String & binary data types | Snowflake Documentation",
    "paragraphs": [
        "This topic describes the string/text data types, including binary strings, supported in Snowflake, along with the supported formats for string constants/literals.",
        "Snowflake supports the following data types for text (that is, character) strings.",
        "VARCHAR values hold Unicode UTF-8 characters.",
        "Note",
        "In some systems outside of Snowflake, data types such as CHAR and VARCHAR store ASCII, while data types such as NCHAR and\nNVARCHAR store Unicode.",
        "In Snowflake, VARCHAR and all other string data types store Unicode UTF-8 characters. There is no difference with respect to\nUnicode handling between CHAR and NCHAR data types. Synonyms such as NCHAR are primarily for syntax compatibility when porting\nDDL commands to Snowflake.",
        "When you declare a column of type VARCHAR, you can specify an optional parameter (N), which is the maximum number of\ncharacters to store. For example:",
        "If no length is specified, the default is the maximum allowed length (16,777,216).",
        "Although a VARCHAR value\u2019s maximum length is specified in characters, a VARCHAR value is also limited to a maximum of\n16,777,216 bytes (16 MB). The maximum number of Unicode characters that can be stored in a VARCHAR column is shown below:",
        "16,777,216.",
        "Between 8,388,608 (2 bytes per character) and 4,194,304 (4 bytes per character).",
        "For example, if you declare a column as VARCHAR(16777216), the column can hold a maximum of 8,388,608 2-byte Unicode characters,\neven though you specified a maximum length of 16777216.",
        "When choosing the maximum length for a VARCHAR column, consider the following:",
        "Storage: A column consumes storage for only the amount of actual data stored. For example, a 1-character string in a\nVARCHAR(16777216) column only consumes a single character.",
        "Performance: There is no performance difference between using the full-length VARCHAR declaration VARCHAR(16777216) and a\nsmaller length.",
        "In any relational database, SELECT statements in which a WHERE clause references VARCHAR columns or string columns aren\u2019t\nas fast as SELECT statements filtered using a date or numeric column condition.",
        "Tools for working with data: Some BI/ETL tools define the maximum size of the VARCHAR data in storage or in memory. If you\nknow the maximum size for a column, you can limit the size when you add the column.",
        "Collation: When you specify a collation for a VARCHAR column, the number of characters\nthat are allowed varies, depending on the number of bytes each character takes and the collation specification of the column.",
        "When comparing values in a collated column,\nSnowflake follows the Unicode Collation Algorithm (UCA). This algorithm affects the\nmaximum number of characters allowed. Currently, around 1.5 million to 8 million characters are allowed in a VARCHAR column\nthat is defined with a maximum size and a collation specification.",
        "As an example, the following table shows how the maximum number of characters can vary for a VARCHAR(16777216) column, depending\non the number of bytes per character and the collation specification used:",
        "Number of bytes per character",
        "Collation specification",
        "Maximum number of characters allowed (approximate)",
        "1 byte",
        "en-ci or en-ci-pi-ai",
        "Around 7 million characters",
        "1 byte",
        "en",
        "Around 4 million characters",
        "2 byte",
        "en-ci-pi-ai",
        "Around 8 million characters",
        "2 byte",
        "en-ci or en-ci-pi",
        "Around 2.7 million characters",
        "2 byte",
        "en",
        "Around 1.5 million characters",
        "Synonymous with VARCHAR, except that if the length is not specified, CHAR(1) is the default.",
        "Note",
        "Snowflake currently deviates from common CHAR semantics in that strings shorter than the maximum length are not space-padded at the end.",
        "Synonymous with VARCHAR.",
        "Snowflake supports the following data types for binary strings.",
        "The maximum length is 8 MB (8,388,608 bytes). Unlike VARCHAR, the BINARY data type has no notion of Unicode characters,\nso the length is always measured in terms of bytes.",
        "BINARY values are limited to 8 MB so that they fit within 16 MB when converted to hexadecimal strings, for example using\nTO_CHAR(<binary_expression>, 'HEX').",
        "If a length isn\u2019t specified, the default is the maximum length.",
        "VARBINARY is synonymous with BINARY.",
        "The BINARY data type holds a sequence of 8-bit bytes.",
        "When Snowflake displays BINARY data values, Snowflake often represents each\nbyte as two hexadecimal characters. For example, the word HELP might be\ndisplayed as 48454C50, where 48 is the hexadecimal equivalent of\nthe ASCII (Unicode) letter H, 45 is the hexadecimal representation of\nthe letter E, and so on.",
        "For more information about entering and displaying BINARY data, see\nBinary input and output.",
        "Constants (also known as literals) refer to fixed data values. String constants in Snowflake must always be enclosed between\ndelimiter characters. Snowflake supports using either of the following to delimit string constants:",
        "Single quotes",
        "Pairs of dollar signs",
        "A string constant can be enclosed between single quote delimiters (for example, 'This is a string'). To include\na single quote character within a string constant, type two adjacent single quotes (for example, '').",
        "For example:",
        "Note",
        "Two single quotes is not the same as the double quote character (\"), which is used (as needed) for delimiting object identifiers. For more information, see\nIdentifier requirements.",
        "To include a single quote or other special characters (for example, newlines) in a single-quoted string constant, you must escape these\ncharacters by using backslash escape sequences. A backslash escape sequence is a sequence of characters that begins with a\nbackslash (\\).",
        "Note",
        "If the string contains many single quotes, backslashes, or other special characters, you can use a\ndollar-quoted string constant instead to avoid escaping these characters.",
        "You can also use escape sequences to insert ASCII characters by specifying their\ncode points (the numeric values that correspond to those characters) in octal or\nhexadecimal. For example, in ASCII, the code point for the space character is 32, which is 20 in hexadecimal. To specify a space,\nyou can use the hexadecimal escape sequence \\x20.",
        "You can also use escape sequences to insert Unicode characters, for example \\u26c4.",
        "The following table lists the supported escape sequences in four categories: simple, octal, hexadecimal, and Unicode:",
        "Escape sequence",
        "Character represented",
        "Simple escape sequences",
        "\\'",
        "A single quote (') character.",
        "\\\"",
        "A double quote (\") character.",
        "\\\\",
        "A backslash (\\) character.",
        "\\b",
        "A backspace character.",
        "\\f",
        "A formfeed character.",
        "\\n",
        "A newline (linefeed) character.",
        "\\r",
        "A carriage return character.",
        "\\t",
        "A tab character.",
        "\\0",
        "An ASCII NUL character.",
        "Octal escape sequences",
        "\\ooo",
        "ASCII character in octal notation (that is, where each o represents an octal digit).",
        "Hexadecimal escape sequences",
        "\\xhh",
        "ASCII character in hexadecimal notation (that is, where each h represents a hexadecimal digit).",
        "Unicode escape sequences",
        "\\uhhhh",
        "Unicode character in hexadecimal notation (that is, where each h represents a hexadecimal digit). The number of hexadecimal digits must be exactly four.",
        "As shown in the table above, if a string constant must include a backslash character (for example, C:\\ in a Windows path or \\d in\na regular expression), you must escape the backslash with a second backslash. For\nexample, to include \\d in a regular expression in a string constant, use \\\\d.",
        "If a backslash is used in sequences other than the ones listed above, the backslash is ignored. For example, the\nsequence of characters '\\z' is interpreted as 'z'.",
        "The following example demonstrates how to use backslash escape sequences. This includes examples of specifying:",
        "A tab character.",
        "A newline.",
        "A backslash.",
        "The octal and hexadecimal escape sequences for an exclamation mark (code point 33, which is \\041 in octal and \\x21 in\nhexadecimal).",
        "The Unicode escape sequence for a small image of a snowman.",
        "Something that is not a valid escape sequence.",
        "In some cases, you might need to specify a string constant that contains:",
        "Single quote characters.",
        "Backslash characters (for example, in a regular expression).",
        "Newline characters (for example, in the body of a stored procedure or function that you specify in\nCREATE PROCEDURE or CREATE FUNCTION).",
        "In these cases, you can avoid escaping these characters by using\na pair of dollar signs ($$) rather than a single quote (') to delimit the beginning and ending of the string.",
        "In a dollar-quoted string constant, you can include quotes, backslashes, newlines and any other special character (except for\ndouble-dollar signs) without escaping those characters. The content of a dollar-quoted string constant is always interpreted\nliterally.",
        "The following examples are equivalent ways of specifying string constants:",
        "Example using single quote delimiters",
        "Example using double dollar sign delimiters",
        "The following example uses a dollar-quoted string constant that contains newlines and several\nescape sequences:",
        "In this example, the escape sequences are interpreted as their individual characters\n(for example, a backslash followed by a t), rather than as escape sequences.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}