{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table-delta",
    "title": "CREATE ICEBERG TABLE (Delta files in object storage) | Snowflake Documentation",
    "paragraphs": [
        "Preview Feature \u2014 Open",
        "Available to all accounts.",
        "Creates or replaces an Apache Iceberg\u2122 table in the current/specified schema\nusing Delta table files in object storage (external cloud storage).\nThis type of Iceberg table requires a catalog integration.",
        "This topic refers to Iceberg tables as simply \u201ctables\u201d except where specifying Iceberg tables avoids confusion.",
        "Note",
        "Before creating a table, you must create the external volume where the Iceberg metadata\nand data files are stored.\nFor instructions, see Configure an external volume.",
        "You also need a catalog integration for the table.\nFor more information, see Configure a catalog integration for files in object storage.",
        "ALTER ICEBERG TABLE , DROP ICEBERG TABLE , SHOW ICEBERG TABLES , DESCRIBE ICEBERG TABLE , UNDROP ICEBERG TABLE",
        "Specifies the identifier (name) for the table; must be unique for the schema in which the table is created.",
        "In addition, the identifier must start with an alphabetic character and cannot contain spaces or special characters unless the\nentire identifier string is enclosed in double quotes (for example, \"My object\"). Identifiers enclosed in double quotes are also\ncase-sensitive.",
        "For more information, see Identifier requirements.",
        "Specifies a relative path from the table\u2019s EXTERNAL_VOLUME location to a directory where Snowflake can access your Delta\ntable files.",
        "The base location must point to a directory and cannot point to a single file.\nIt must contain the Delta transaction log subfolder (for example, my/base/location/_delta_log/).",
        "Specifies the identifier (name) for the external volume where the Iceberg table stores its metadata files and data in Parquet\nformat. Iceberg metadata and manifest files store the table schema, partitions, snapshots, and other metadata.",
        "If you don\u2019t specify this parameter, the Iceberg table defaults to the external volume for the schema, database, or account.\nThe schema takes precedence over the database, and the database takes precedence over the account.",
        "Specifies the identifier (name) of the catalog integration for this table.",
        "If not specified, the Iceberg table defaults to the catalog integration for the schema, database, or account.\nThe schema takes precedence over the database, and the database takes precedence over the account.",
        "Specifies whether to replace invalid UTF-8 characters with the Unicode replacement character (\ufffd) in query results.\nYou can only set this parameter for tables that use an external Iceberg catalog.",
        "TRUE replaces invalid UTF-8 characters with the Unicode replacement character.",
        "FALSE leaves invalid UTF-8 characters unchanged. Snowflake returns a user error message when it encounters invalid UTF-8\ncharacters in a Parquet data file.",
        "If not specified, the Iceberg table defaults to the parameter value for the schema, database, or account.\nThe schema takes precedence over the database, and the database takes precedence over the account.",
        "Default: FALSE",
        "Specifies a comment for the table.",
        "Default: No value",
        "Specifies the tag name and the tag string value.",
        "The tag value is always a string, and the maximum number of characters for the tag value is 256.",
        "For information about specifying tags in a statement, see Tag quotas for objects and columns.",
        "A role used to execute this SQL command must have the following\nprivileges at a minimum:",
        "Privilege",
        "Object",
        "Notes",
        "CREATE ICEBERG TABLE",
        "Schema",
        "CREATE EXTERNAL VOLUME",
        "Account",
        "Required to create a new external volume.",
        "USAGE",
        "External Volume",
        "Required to reference an existing external volume.",
        "CREATE INTEGRATION",
        "Account",
        "Required to create a new catalog integration.",
        "USAGE",
        "Catalog integration",
        "Required to reference an existing catalog integration.",
        "The USAGE privilege on the parent database and schema are required to perform operations on any object in a schema.",
        "For instructions on creating a custom role with a specified set of privileges, see Creating custom roles.",
        "For general information about roles and privilege grants for performing SQL actions on\nsecurable objects, see Overview of Access Control.",
        "Considerations for running this command:",
        "If you created your external volume or catalog integration using a double-quoted identifier,\nyou must specify the identifier exactly as created (including the double quotes) in your CREATE ICEBERG TABLE statement.\nFailure to include the quotes might result in an Object does not exist error (or\nsimilar type of error).",
        "Considerations for Iceberg tables created from Delta table files:",
        "You can use Time Travel to query Iceberg tables created from Delta table files.\nThe table versions correspond to the individual Delta log commit files.",
        "Iceberg tables are compatible with data generated by Delta Lake version 3.1 and earlier.",
        "Snowflake streams aren\u2019t supported for Iceberg tables created from Delta table files with partition columns. However, insert-only streams for tables created from Delta files without partition columns are supported.",
        "Dynamic tables aren\u2019t supported on Iceberg tables created from Delta table files.",
        "Snowflake doesn\u2019t support creating Iceberg tables from Delta table definitions in the AWS Glue Data Catalog.",
        "Parquet files (data files for Delta tables) that use any of the following features or data types aren\u2019t supported:",
        "Field IDs.",
        "The INTERVAL data type.",
        "The DECIMAL data type with precision higher than 38.",
        "LIST or MAP types with one-level or two-level representation.",
        "Unsigned integer types (INT(signed = false)).",
        "The FLOAT16 data type.",
        "For more information about Delta data types and Iceberg tables, see Delta data types.",
        "Refresh operations during CREATE and ALTER \u2026 REFRESH can process a maximum of 1,000 Delta commit files per operation.",
        "Note",
        "Snowflake uses Delta checkpoint files when creating an Iceberg table.\nThe 1,000 commit file limit only applies to commits after the latest checkpoint.",
        "Generating Iceberg metadata using the SYSTEM$GET_ICEBERG_TABLE_INFORMATION function isn\u2019t supported.",
        "The following Delta Lake features aren\u2019t currently supported: Row tracking, deletion vector files, change data files, change metadata,\nDataChange, CDC, protocol evolution.",
        "Considerations for creating tables:",
        "A schema cannot contain tables and/or views with the same name. When creating a table:",
        "If a view with the same name already exists in the schema, an error is returned and the table is not created.",
        "If a table with the same name already exists in the schema, an error is returned and the table is not created, unless the optional\nOR REPLACE keyword is included in the command.",
        "CREATE OR REPLACE <object> statements are atomic. That is, when an object is replaced, the old object is deleted and the new object is created in a single transaction.",
        "This means that any queries concurrent with the CREATE OR REPLACE ICEBERG TABLE operation use either the old or new table version.",
        "Similar to reserved keywords, ANSI-reserved function names\n(CURRENT_DATE, CURRENT_TIMESTAMP, etc.) cannot be used as column names.",
        "Recreating a table (using the optional OR REPLACE keyword) drops its history, which makes any stream on the table stale. A stale\nstream is unreadable.",
        "Regarding metadata:",
        "Attention",
        "Customers should ensure that no personal data (other than for a User object), sensitive data, export-controlled data, or other regulated data is entered as metadata when using the Snowflake service. For more information, see Metadata fields in Snowflake.",
        "The following example command creates an Iceberg table from Delta table files in object storage.",
        "The example specifies an external volume associated with the cloud location of the Delta table files,\na catalog integration configured for Delta,\nand a value for the required BASE_LOCATION parameter.",
        "If the Delta table uses a partitioning scheme, Snowflake automatically interprets the scheme from the Delta log.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}