{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/reference/scala/com/snowflake/snowpark/functions$.html#iff(condition:com.snowflake.snowpark.Column,expr1:com.snowflake.snowpark.Column,expr2:com.snowflake.snowpark.Column):com.snowflake.snowpark.Column",
    "title": "Snowpark 1.15.0  - com.snowflake.snowpark.functions",
    "paragraphs": [
        "This package contains all Snowpark logical types.",
        "This package contains all Snowpark logical types.",
        "0.1.0",
        "com\n        \n        .\n        \n         snowflake\n        \n        .\n        \n         snowpark",
        "Provides utility functions that generate\n         \n          Column\n         \n         expressions that you can pass to\n         \n          DataFrame\n         \n         transformation methods. These functions generate references to columns,\nliterals, and SQL expressions (e.g. \"c + 1\").",
        "This object also provides functions that correspond to Snowflake\n         \n          system-defined functions\n         \n         (built-in functions), including functions for aggregation and window functions.",
        "The following examples demonstrate the use of some of these functions:",
        "For functions that accept scala types, e.g. callUdf, callBuiltin, lit(),\nthe mapping from scala types to Snowflake types is as follows:",
        "0.1.0",
        "Function object to invoke a Snowflake builtin.",
        "Function object to invoke a Snowflake builtin. Use this to invoke\nany builtins not explicitly listed in this object.",
        "Example",
        "0.1.0",
        "Returns the absolute value of a numeric expression.",
        "Returns the absolute value of a numeric expression.",
        "0.1.0",
        "Computes the inverse cosine (arc cosine) of its input; the result is a number in the\ninterval [-pi, pi].",
        "Computes the inverse cosine (arc cosine) of its input; the result is a number in the\ninterval [-pi, pi].",
        "0.1.0",
        "Adds or subtracts a specified number of months to a date or timestamp,\npreserving the end-of-month information.",
        "Adds or subtracts a specified number of months to a date or timestamp,\npreserving the end-of-month information.",
        "0.1.0",
        "Returns a non-deterministic value for the specified column.",
        "Returns a non-deterministic value for the specified column.",
        "0.12.0",
        "Uses HyperLogLog to return an approximation of the distinct cardinality of the input\n(i.e.",
        "Uses HyperLogLog to return an approximation of the distinct cardinality of the input\n(i.e. returns an approximation of\n              \n               COUNT(DISTINCT col)\n              \n              ).",
        "0.1.0",
        "Returns an approximated value for the desired percentile.",
        "Returns an approximated value for the desired percentile.\nThis function uses the t-Digest algorithm.",
        "0.2.0",
        "Returns the internal representation of the t-Digest state (as a JSON object) at the end of\naggregation.",
        "Returns the internal representation of the t-Digest state (as a JSON object) at the end of\naggregation.\nThis function uses the t-Digest algorithm.",
        "0.2.0",
        "Combines (merges) percentile input states into a single output state.",
        "Combines (merges) percentile input states into a single output state.",
        "This allows scenarios where APPROX_PERCENTILE_ACCUMULATE is run over horizontal partitions\nof the same table, producing an algorithm state for each table partition. These states can\nlater be combined using APPROX_PERCENTILE_COMBINE, producing the same output state as a\nsingle run of APPROX_PERCENTILE_ACCUMULATE over the entire table.",
        "0.2.0",
        "Returns the desired approximated percentile value for the specified t-Digest state.",
        "Returns the desired approximated percentile value for the specified t-Digest state.\nAPPROX_PERCENTILE_ESTIMATE(APPROX_PERCENTILE_ACCUMULATE(.)) is equivalent to\nAPPROX_PERCENTILE(.).",
        "0.2.0",
        "Returns an ARRAY constructed from zero, one, or more inputs.",
        "Returns an ARRAY constructed from zero, one, or more inputs.",
        "Example:",
        "Columns to build the array.",
        "The array.",
        "1.14.0",
        "Returns the input values, pivoted into an ARRAY.",
        "Returns the input values, pivoted into an ARRAY.\nIf the input is empty, an empty ARRAY is returned.",
        "0.2.0",
        "Returns an ARRAY containing all elements from the source ARRAYas well as the new element.",
        "Returns an ARRAY containing all elements from the source ARRAYas well as the new element.\nThe new element is located at end of the ARRAY.",
        "The column containing the source ARRAY.",
        "The column containing the element to be appended. The element may be of almost\n               any data type. The data type does not need to match the data type(s) of the\n               existing elements in the ARRAY.",
        "0.2.0",
        "Returns the concatenation of two ARRAYs.",
        "Returns the concatenation of two ARRAYs.",
        "Column containing the source ARRAY.",
        "Column containing the ARRAY to be appended to\n               \n                array1\n               \n               .",
        "0.2.0",
        "Returns a compacted ARRAY with missing and null values removed,\neffectively converting sparse arrays into dense arrays.",
        "Returns a compacted ARRAY with missing and null values removed,\neffectively converting sparse arrays into dense arrays.",
        "0.2.0",
        "Returns an ARRAY constructed from zero, one, or more inputs.",
        "Returns an ARRAY constructed from zero, one, or more inputs.",
        "Columns containing the values (or expressions that evaluate to values). The\n            values do not all need to be of the same data type.",
        "0.2.0",
        "Returns an ARRAY constructed from zero, one, or more inputs;\nthe constructed ARRAY omits any NULL input values.",
        "Returns an ARRAY constructed from zero, one, or more inputs;\nthe constructed ARRAY omits any NULL input values.",
        "Columns containing the values (or expressions that evaluate to values). The\n            values do not all need to be of the same data type.",
        "0.2.0",
        "Returns\n            \n             true\n            \n            if the specified VARIANT is found in the specified ARRAY.",
        "Returns\n              \n               true\n              \n              if the specified VARIANT is found in the specified ARRAY.",
        "Column containing the VARIANT to find.",
        "Column containing the ARRAY to search.",
        "0.2.0",
        "Returns an ARRAY containing all elements from the source ARRAY as well as the new element.",
        "Returns an ARRAY containing all elements from the source ARRAY as well as the new element.",
        "Column containing the source ARRAY.",
        "Column containing a (zero-based) position in the source ARRAY.\n           The new element is inserted at this position. The original element from this\n           position (if any) and all subsequent elements (if any) are shifted by one position\n           to the right in the resulting array (i.e. inserting at position 0 has the same\n           effect as using\n               \n                array_prepend\n               \n               ).\n           A negative position is interpreted as an index from the back of the array (e.g.\n               \n                -1\n               \n               results in insertion before the last element in the array).",
        "Column containing the element to be inserted. The new element is located at\n               position\n               \n                pos\n               \n               . The relative order of the other elements from the source\n               array is preserved.",
        "0.2.0",
        "Returns an ARRAY that contains the matching elements in the two input ARRAYs.",
        "Returns an ARRAY that contains the matching elements in the two input ARRAYs.",
        "0.1.0",
        "Returns the index of the first occurrence of an element in an ARRAY.",
        "Returns the index of the first occurrence of an element in an ARRAY.",
        "Column containing the VARIANT value that you want to find. The function\n               searches for the first occurrence of this value in the array.",
        "Column containing the ARRAY to be searched.",
        "0.2.0",
        "Returns an ARRAY containing the new element as well as all elements from the source ARRAY.",
        "Returns an ARRAY containing the new element as well as all elements from the source ARRAY.\nThe new element is positioned at the beginning of the ARRAY.",
        "Column containing the source ARRAY.",
        "Column containing the element to be prepended.",
        "0.2.0",
        "Returns the size of the input ARRAY.",
        "Returns the size of the input ARRAY.",
        "If the specified column contains a VARIANT value that contains an ARRAY, the size of the ARRAY\nis returned; otherwise, NULL is returned if the value is not an ARRAY.",
        "0.2.0",
        "Returns an ARRAY constructed from a specified subset of elements of the input ARRAY.",
        "Returns an ARRAY constructed from a specified subset of elements of the input ARRAY.",
        "Column containing the source ARRAY.",
        "Column containing a position in the source ARRAY. The position of the first\n                   element is\n               \n                0\n               \n               . Elements from positions less than this parameter are\n                   not included in the resulting ARRAY.",
        "Column containing a position in the source ARRAY. Elements from positions equal to\n                 or greater than this parameter are not included in the resulting array.",
        "0.2.0",
        "Returns an input ARRAY converted to a string by casting all values to strings (using\nTO_VARCHAR) and concatenating them (using the string from the second argument to separate\nthe elements).",
        "Returns an input ARRAY converted to a string by casting all values to strings (using\nTO_VARCHAR) and concatenating them (using the string from the second argument to separate\nthe elements).",
        "Column containing the ARRAY of elements to convert to a string.",
        "Column containing the string to put between each element (e.g. a space,\n                 comma, or other human-readable separator).",
        "0.2.0",
        "Compares whether two arrays have at least one element in common.",
        "Compares whether two arrays have at least one element in common.\nReturns TRUE if there is at least one element in common; otherwise returns FALSE.\nThe function is NULL-safe, meaning it treats NULLs as known values for comparing equality.",
        "0.1.0",
        "Casts a VARIANT value to an array.",
        "Casts a VARIANT value to an array.",
        "0.2.0",
        "Casts a VARIANT value to a binary string.",
        "Casts a VARIANT value to a binary string.",
        "0.2.0",
        "Casts a VARIANT value to a string.",
        "Casts a VARIANT value to a string. Does not convert values of other types into string.",
        "0.2.0",
        "Casts a VARIANT value to a date.",
        "Casts a VARIANT value to a date. Does not convert from timestamps.",
        "0.2.0",
        "Casts a VARIANT value to a fixed-point decimal (does not match floating-point values),\nwith precision and scale.",
        "Casts a VARIANT value to a fixed-point decimal (does not match floating-point values),\nwith precision and scale.",
        "0.2.0",
        "Casts a VARIANT value to a fixed-point decimal (does not match floating-point values),\nwith precision.",
        "Casts a VARIANT value to a fixed-point decimal (does not match floating-point values),\nwith precision.",
        "0.2.0",
        "Casts a VARIANT value to a fixed-point decimal (does not match floating-point values).",
        "Casts a VARIANT value to a fixed-point decimal (does not match floating-point values).",
        "0.2.0",
        "Casts a VARIANT value to a floating-point value.",
        "Casts a VARIANT value to a floating-point value.",
        "0.2.0",
        "Casts a VARIANT value to an integer.",
        "Casts a VARIANT value to an integer. Does not match non-integer values.",
        "0.2.0",
        "Casts a VARIANT value to a fixed-point decimal (does not match floating-point values),\nwith precision and scale.",
        "Casts a VARIANT value to a fixed-point decimal (does not match floating-point values),\nwith precision and scale.",
        "0.2.0",
        "Casts a VARIANT value to a fixed-point decimal (does not match floating-point values),\nwith precision.",
        "Casts a VARIANT value to a fixed-point decimal (does not match floating-point values),\nwith precision.",
        "0.2.0",
        "Casts a VARIANT value to a fixed-point decimal (does not match floating-point values).",
        "Casts a VARIANT value to a fixed-point decimal (does not match floating-point values).",
        "0.2.0",
        "Casts a VARIANT value to an object.",
        "Casts a VARIANT value to an object.",
        "0.2.0",
        "Casts a VARIANT value to a floating-point value.",
        "Casts a VARIANT value to a floating-point value.",
        "0.2.0",
        "Casts a VARIANT value to a time value.",
        "Casts a VARIANT value to a time value. Does not convert from timestamps.",
        "0.2.0",
        "Casts a VARIANT value to a TIMESTAMP value with local timezone.",
        "Casts a VARIANT value to a TIMESTAMP value with local timezone.",
        "0.2.0",
        "Casts a VARIANT value to a TIMESTAMP value with no timezone.",
        "Casts a VARIANT value to a TIMESTAMP value with no timezone.",
        "0.2.0",
        "Casts a VARIANT value to a TIMESTAMP value with timezone.",
        "Casts a VARIANT value to a TIMESTAMP value with timezone.",
        "0.2.0",
        "Casts a VARIANT value to a string.",
        "Casts a VARIANT value to a string. Does not convert values of other types into string.",
        "0.2.0",
        "Returns a Column expression with values sorted in ascending order.",
        "Returns a Column expression with values sorted in ascending order.\nExample:",
        "Column name.",
        "Column object ordered in an ascending manner.",
        "1.14.0",
        "Returns the ASCII code for the first character of a string.",
        "Returns the ASCII code for the first character of a string. If the string is empty,\na value of 0 is returned.",
        "0.1.0",
        "Computes the inverse sine (arc sine) of its argument; the result is a number in the\ninterval [-pi, pi].",
        "Computes the inverse sine (arc sine) of its argument; the result is a number in the\ninterval [-pi, pi].",
        "0.1.0",
        "Computes the inverse tangent (arc tangent) of its argument; the result is a number in\nthe interval [-pi, pi].",
        "Computes the inverse tangent (arc tangent) of its argument; the result is a number in\nthe interval [-pi, pi].",
        "0.1.0",
        "Computes the inverse tangent (arc tangent) of the ratio of its two arguments.",
        "Computes the inverse tangent (arc tangent) of the ratio of its two arguments.",
        "0.1.0",
        "Returns the average of non-NULL records.",
        "Returns the average of non-NULL records. If all records inside a group are NULL,\nthe function returns NULL.",
        "0.1.0",
        "Computes the BASE64 encoding of a column and returns it as a string column.",
        "Computes the BASE64 encoding of a column and returns it as a string column.\nThis is the reverse of unbase64.\nExample",
        "base64 encoded value of the given input column.",
        "1.14.0",
        "Returns the bitwise negation of a numeric expression.",
        "Returns the bitwise negation of a numeric expression.",
        "0.1.0",
        "Shifts the bits for a numeric expression numBits positions to the left.",
        "Shifts the bits for a numeric expression numBits positions to the left.",
        "0.1.0",
        "Shifts the bits for a numeric expression numBits positions to the right.",
        "Shifts the bits for a numeric expression numBits positions to the right.",
        "0.1.0",
        "Invokes a built-in snowflake function with the specified name and arguments.",
        "Invokes a built-in snowflake function with the specified name and arguments.\nArguments can be of two types",
        "a.\n              \n               Column\n              \n              , or",
        "b. Basic types such as Int, Long, Double, Decimal etc. which are converted to\nSnowpark literals.",
        "0.1.0",
        "Calls a user-defined function (UDF) by name.",
        "Calls a user-defined function (UDF) by name.",
        "0.1.0",
        "Returns values from the specified column rounded to the nearest equal or larger integer.",
        "Returns values from the specified column rounded to the nearest equal or larger integer.",
        "0.1.0",
        "Converts a Unicode code point (including 7-bit ASCII) into the character\nthat matches the input Unicode.",
        "Converts a Unicode code point (including 7-bit ASCII) into the character\nthat matches the input Unicode.",
        "0.1.0",
        "Searches for targetExpr in sourceExpr and, if successful,\nreturns the position (1-based) of the targetExpr in sourceExpr.",
        "Searches for targetExpr in sourceExpr and, if successful,\nreturns the position (1-based) of the targetExpr in sourceExpr.",
        "0.1.0",
        "Searches for targetExpr in sourceExpr and, if successful,\nreturns the position (1-based) of the targetExpr in sourceExpr.",
        "Searches for targetExpr in sourceExpr and, if successful,\nreturns the position (1-based) of the targetExpr in sourceExpr.",
        "0.1.0",
        "Checks the validity of a JSON document.",
        "Checks the validity of a JSON document.\nIf the input string is a valid JSON document or a NULL (i.e. no error would occur when\nparsing the input string), the function returns NULL.\nIn case of a JSON parsing error, the function returns a string that contains the error\nmessage.",
        "0.2.0",
        "Checks the validity of an XML document.",
        "Checks the validity of an XML document.\nIf the input string is a valid XML document or a NULL (i.e. no error would occur when parsing\nthe input string), the function returns NULL.\nIn case of an XML parsing error, the output string contains the error message.",
        "0.2.0",
        "Returns the first non-NULL expression among its arguments,\nor NULL if all its arguments are NULL.",
        "Returns the first non-NULL expression among its arguments,\nor NULL if all its arguments are NULL.",
        "0.1.0",
        "Generate a\n            \n             Column\n            \n            representing the result of the input DataFrame.",
        "Generate a\n              \n               Column\n              \n              representing the result of the input DataFrame.\nThe parameter\n              \n               df\n              \n              should have one column and must produce one row.\nIs an alias of\n              \n               toScalar\n              \n              .",
        "For Example:",
        "0.2.0",
        "Returns the\n            \n             Column\n            \n            with the specified name.",
        "Returns the\n              \n               Column\n              \n              with the specified name.",
        "0.1.0",
        "Returns a copy of expr, but with the specified collationSpec property\ninstead of the original collation specification property.",
        "Returns a copy of expr, but with the specified collationSpec property\ninstead of the original collation specification property.",
        "Collation Specification is specified\n              \n               here",
        "0.1.0",
        "Returns the collation specification of expr.",
        "Returns the collation specification of expr.",
        "0.1.0",
        "Returns the input values, pivoted into an ARRAY.",
        "Returns the input values, pivoted into an ARRAY. If the input is empty, an empty\nARRAY is returned.",
        "Example::\n    >>> df = session.create_dataframe(\n              \n               [2], [3], [1\n              \n              , schema=[\"a\"])\n    >>> df.select(array_agg(\"a\", True).alias(\"result\")).show()\n    ------------\n    |\"RESULT\"  |\n    ------------\n    |[         |\n    |  1,      |\n    |  2,      |\n    |  3       |\n    |]         |\n    ------------",
        "Column name to be collected.",
        "The array.",
        "1.14.0",
        "Returns the input values, pivoted into an ARRAY.",
        "Returns the input values, pivoted into an ARRAY. If the input is empty, an empty\nARRAY is returned.\n<pr>\nExample::\n    >>> df = session.create_dataframe(\n              \n               [2], [3], [1\n              \n              , schema=[\"a\"])\n    >>> df.select(array_agg(\"a\", True).alias(\"result\")).show()\n    ------------\n    |\"RESULT\"  |\n    ------------\n    |[         |\n    |  1,      |\n    |  2,      |\n    |  3       |\n    |]         |\n    ------------\n</pr>",
        "Column to be collect.",
        "The array.",
        "1.14.0",
        "Aggregate function: returns a set of objects with duplicate elements eliminated.",
        "Aggregate function: returns a set of objects with duplicate elements eliminated.\nReturns the input values, pivoted into an ARRAY. If the input is empty, an empty\nARRAY is returned.",
        "Example::\n>>> df = session.create_dataframe(\n              \n               [2], [3], [1\n              \n              , schema=[\"a\"])\n>>> df.select(array_agg(\"a\", True).alias(\"result\")).show()\n------------",
        "\"RESULT\"",
        "[",
        "2,",
        "3",
        "]",
        "The column to collect the list values",
        "A list with unique values",
        "1.15.0",
        "Aggregate function: returns a set of objects with duplicate elements eliminated.",
        "Aggregate function: returns a set of objects with duplicate elements eliminated.\n Returns the input values, pivoted into an ARRAY. If the input is empty, an empty\n ARRAY is returned.",
        "Example::\n >>> df = session.create_dataframe(\n              \n               [2], [3], [1\n              \n              , schema=[\"a\"])\n >>> df.select(array_agg(\"a\", True).alias(\"result\")).show()\n ------------\n |\"RESULT\"  |\n ------------\n |[         |\n |  1,      |\n |  2,      |\n |  3       |\n |]         |\n ------------",
        "The column to collect the list values",
        "A list with unique values",
        "1.15.0",
        "Returns a\n            \n             Column\n            \n            with the specified name.",
        "Returns a\n              \n               Column\n              \n              with the specified name. Alias for col.",
        "0.1.0",
        "Concatenates one or more strings, or concatenates one or more binary values.",
        "Concatenates one or more strings, or concatenates one or more binary values.\nIf any of the values is null, the result is also null.",
        "0.1.0",
        "Concatenates two or more strings, or concatenates two or more binary values.",
        "Concatenates two or more strings, or concatenates two or more binary values.\nIf any of the values is null, the result is also null.",
        "0.1.0",
        "Returns true if col contains str.",
        "Returns true if col contains str.",
        "0.1.0",
        "Converts the given sourceTimestampNTZ to targetTimeZone.",
        "Converts the given sourceTimestampNTZ to targetTimeZone.",
        "Supported time zones are listed\n              \n               here",
        "Example",
        "0.1.0",
        "Converts the given sourceTimestampNTZ from sourceTimeZone to targetTimeZone.",
        "Converts the given sourceTimestampNTZ from sourceTimeZone to targetTimeZone.",
        "Supported time zones are listed\n              \n               here",
        "Example",
        "0.1.0",
        "Returns the correlation coefficient for non-null pairs in a group.",
        "Returns the correlation coefficient for non-null pairs in a group.",
        "0.1.0",
        "Computes the cosine of its argument; the argument should be expressed in radians.",
        "Computes the cosine of its argument; the argument should be expressed in radians.",
        "0.1.0",
        "Computes the hyperbolic cosine of its argument.",
        "Computes the hyperbolic cosine of its argument.",
        "0.1.0",
        "Returns either the number of non-NULL records for the specified columns,\nor the total number of records.",
        "Returns either the number of non-NULL records for the specified columns,\nor the total number of records.",
        "0.1.0",
        "Returns either the number of non-NULL distinct records for the specified columns,\nor the total number of the distinct records.",
        "Returns either the number of non-NULL distinct records for the specified columns,\nor the total number of the distinct records. An alias of count_distinct.",
        "1.13.0",
        "Returns either the number of non-NULL distinct records for the specified columns,\nor the total number of the distinct records.",
        "Returns either the number of non-NULL distinct records for the specified columns,\nor the total number of the distinct records. An alias of count_distinct.",
        "1.13.0",
        "Returns either the number of non-NULL distinct records for the specified columns,\nor the total number of the distinct records.",
        "Returns either the number of non-NULL distinct records for the specified columns,\nor the total number of the distinct records.",
        "0.1.0",
        "Returns the population covariance for non-null pairs in a group.",
        "Returns the population covariance for non-null pairs in a group.",
        "0.1.0",
        "Returns the sample covariance for non-null pairs in a group.",
        "Returns the sample covariance for non-null pairs in a group.",
        "0.1.0",
        "Finds the cumulative distribution of a value with regard to other values\nwithin the same window partition.",
        "Finds the cumulative distribution of a value with regard to other values\nwithin the same window partition.",
        "0.1.0",
        "Returns the account used by the user's current session.",
        "Returns the account used by the user's current session.",
        "0.1.0",
        "Returns a JSON string that lists all roles granted to the current user.",
        "Returns a JSON string that lists all roles granted to the current user.",
        "0.1.0",
        "Returns the name of the database in use for the current session.",
        "Returns the name of the database in use for the current session.",
        "0.1.0",
        "Returns the current date of the system.",
        "Returns the current date of the system.",
        "0.1.0",
        "Returns the name of the region for the account where the current user is logged in.",
        "Returns the name of the region for the account where the current user is logged in.",
        "0.1.0",
        "Returns the name of the role in use for the current session.",
        "Returns the name of the role in use for the current session.",
        "0.1.0",
        "Returns the name of the schema in use by the current session.",
        "Returns the name of the schema in use by the current session.",
        "0.1.0",
        "Returns active search path schemas.",
        "Returns active search path schemas.",
        "0.1.0",
        "Returns a unique system identifier for the Snowflake session corresponding\nto the present connection.",
        "Returns a unique system identifier for the Snowflake session corresponding\nto the present connection.",
        "0.1.0",
        "Returns the SQL text of the statement that is currently executing.",
        "Returns the SQL text of the statement that is currently executing.",
        "0.1.0",
        "Returns the current time for the system.",
        "Returns the current time for the system.",
        "0.1.0",
        "Returns the current timestamp for the system.",
        "Returns the current timestamp for the system.",
        "0.1.0",
        "Returns the name of the user currently logged into the system.",
        "Returns the name of the user currently logged into the system.",
        "0.1.0",
        "Returns the current Snowflake version.",
        "Returns the current Snowflake version.",
        "0.1.0",
        "Returns the name of the warehouse in use for the current session.",
        "Returns the name of the warehouse in use for the current session.",
        "0.1.0",
        "Returns the date that is\n            \n             days\n            \n            days after\n            \n             start\n            \n            Usage - DATE_ADD( date_or_time_part, value, date_or_time_expr )\n Example::\n     SELECT TO_DATE('2013-05-08') AS v1, DATE_ADD(year, 2, TO_DATE('2013-05-08')) AS v;\n +------------+------------+\n | V1         | V          |\n |------------+------------|\n | 2013-05-08 | 2015-05-08 |\n +------------+------------+",
        "Returns the date that is\n              \n               days\n              \n              days after\n              \n               start\n              \n              Usage - DATE_ADD( date_or_time_part, value, date_or_time_expr )\n Example::\n     SELECT TO_DATE('2013-05-08') AS v1, DATE_ADD(year, 2, TO_DATE('2013-05-08')) AS v;\n +------------+------------+\n | V1         | V          |\n |------------+------------|\n | 2013-05-08 | 2015-05-08 |\n +------------+------------+",
        "A date, timestamp or string. If a string, the data must be in a format that\n             can be cast to a date, such as\n               \n                yyyy-MM-dd\n               \n               or\n               \n                yyyy-MM-dd HH:mm:ss.SSSS",
        "The number of days to add to\n               \n                start\n               \n               , can be negative to subtract days",
        "A date, or null if\n               \n                start\n               \n               was a string that could not be cast to a date",
        "1.15.0",
        "Returns the date that is\n            \n             days\n            \n            days after\n            \n             start\n            \n            Usage - DATE_ADD( date_or_time_part, value, date_or_time_expr )\nExample::\n    SELECT TO_DATE('2013-05-08') AS v1, DATE_ADD(year, 2, TO_DATE('2013-05-08')) AS v;\n+------------+------------+",
        "Returns the date that is\n              \n               days\n              \n              days after\n              \n               start\n              \n              Usage - DATE_ADD( date_or_time_part, value, date_or_time_expr )\nExample::\n    SELECT TO_DATE('2013-05-08') AS v1, DATE_ADD(year, 2, TO_DATE('2013-05-08')) AS v;\n+------------+------------+",
        "V1",
        "V",
        "2013-05-08",
        "2015-05-08",
        "+------------+------------+",
        "Int            .",
        "Column name",
        "Column.",
        "1.15.0",
        "Converts an input expression into the corresponding date in the specified date format.",
        "Converts an input expression into the corresponding date in the specified date format.\nExample:",
        "Column to format to date.",
        "Date format.",
        "Column object.",
        "1.14.0",
        "Creates a date from individual numeric components that represent the year,\nmonth, and day of the month.",
        "Creates a date from individual numeric components that represent the year,\nmonth, and day of the month.",
        "0.1.0",
        "Truncates a DATE, TIME, or TIMESTAMP to the specified precision.",
        "Truncates a DATE, TIME, or TIMESTAMP to the specified precision.",
        "0.1.0",
        "Adds the specified value for the specified date or time art to date or time expr.",
        "Adds the specified value for the specified date or time art to date or time expr.",
        "Supported date and time parts are listed\n              \n               here",
        "Example: add one year on dates",
        "0.1.0",
        "Calculates the difference between two date, time, or timestamp columns based on the date or time part requested.",
        "Calculates the difference between two date, time, or timestamp columns based on the date or time part requested.",
        "Supported date and time parts are listed\n              \n               here",
        "Example: year difference between two date columns",
        "0.1.0",
        "Extracts the three-letter day-of-week name from the specified date or\ntimestamp.",
        "Extracts the three-letter day-of-week name from the specified date or\ntimestamp.",
        "0.1.0",
        "Extracts the day of month from a date or timestamp.",
        "Extracts the day of month from a date or timestamp.",
        "0.1.0",
        "Extracts the day of week from a date or timestamp.",
        "Extracts the day of week from a date or timestamp.",
        "0.1.0",
        "Extracts the day of year from a date or timestamp.",
        "Extracts the day of year from a date or timestamp.",
        "0.1.0",
        "Converts radians to degrees.",
        "Converts radians to degrees.",
        "0.1.0",
        "Returns the rank of a value within a group of values, without gaps in the ranks.",
        "Returns the rank of a value within a group of values, without gaps in the ranks.\nThe rank value starts at 1 and continues up sequentially.\nIf two values are the same, they will have the same rank.",
        "0.1.0",
        "Performs division like the division operator (/),\nbut returns 0 when the divisor is 0 (rather than reporting an error).",
        "Performs division like the division operator (/),\nbut returns 0 when the divisor is 0 (rather than reporting an error).",
        "0.1.0",
        "Returns TRUE if expr ends with str.",
        "Returns TRUE if expr ends with str.",
        "0.1.0",
        "Return true if the value in the column is not a number (NaN).",
        "Return true if the value in the column is not a number (NaN).",
        "0.1.0",
        "Computes Euler's number e raised to a floating-point value.",
        "Computes Euler's number e raised to a floating-point value.",
        "0.1.0",
        "Creates a\n            \n             Column\n            \n            expression from raw SQL text.",
        "Creates a\n              \n               Column\n              \n              expression from raw SQL text.",
        "Note that the function does not interpret or check the SQL text.",
        "Example:",
        "SQL Expression as text.",
        "Converted SQL Expression.",
        "1.14.0",
        "Computes the factorial of its input.",
        "Computes the factorial of its input. The input argument must be an integer\nexpression in the range of 0 to 33.",
        "0.1.0",
        "Returns values from the specified column rounded to the nearest equal or smaller integer.",
        "Returns values from the specified column rounded to the nearest equal or smaller integer.",
        "0.1.0",
        "Formats numeric column x to a format like '#,###,###.##', rounded to d decimal places\nwith HALF_EVEN round mode, and returns the result as a string column.",
        "Formats numeric column x to a format like '#,###,###.##', rounded to d decimal places\nwith HALF_EVEN round mode, and returns the result as a string column.",
        "numeric column to be transformed",
        "Amount of decimal for the number format",
        "Number casted to the specific string format",
        "1.15.0\nIf d is 0, the result has no decimal point or fractional part.\nIf d is less than 0, the result will be null.",
        "Converts the number of seconds from unix epoch (1970-01-01 00:00:00 UTC) to a string\nrepresenting the timestamp of that moment in the current system time zone in the given\nformat.",
        "Converts the number of seconds from unix epoch (1970-01-01 00:00:00 UTC) to a string\nrepresenting the timestamp of that moment in the current system time zone in the given\nformat.",
        "A number of a type that is castable to a long, such as string or integer. Can be\n          negative for timestamps before the unix epoch",
        "A date time pattern that the input will be formatted to",
        "A string, or null if\n               \n                ut\n               \n               was a string that could not be cast to a long or\n               \n                f\n               \n               was\n        an invalid date time pattern",
        "1.15.0",
        "Converts the number of seconds from unix epoch (1970-01-01 00:00:00 UTC) to a string\nrepresenting the timestamp of that moment in the current system time zone in the\nyyyy-MM-dd HH:mm:ss format.",
        "Converts the number of seconds from unix epoch (1970-01-01 00:00:00 UTC) to a string\nrepresenting the timestamp of that moment in the current system time zone in the\nyyyy-MM-dd HH:mm:ss format.",
        "A number of a type that is castable to a long, such as string or integer. Can be\n          negative for timestamps before the unix epoch",
        "A string, or null if the input was a string that could not be cast to a long",
        "1.15.0",
        "Given a timestamp like '2017-07-14 02:40:00.0', interprets it as a time in UTC, and renders\nthat time as a timestamp in the given time zone.",
        "Given a timestamp like '2017-07-14 02:40:00.0', interprets it as a time in UTC, and renders\nthat time as a timestamp in the given time zone. For example, 'GMT+1' would yield\n'2017-07-14 03:40:00.0'.\nALTER SESSION SET TIMEZONE = 'America/Los_Angeles';\n SELECT TO_TIMESTAMP_TZ('2024-04-05 01:02:03');\n  +----------------------------------------+\n | TO_TIMESTAMP_TZ('2024-04-05 01:02:03') |\n |----------------------------------------|\n | 2024-04-05 01:02:03.000 -0700          |\n +----------------------------------------+",
        "A date, timestamp or string. If a string, the data must be in a format that can be\n          cast to a timestamp, such as\n               \n                yyyy-MM-dd\n               \n               or\n               \n                yyyy-MM-dd HH:mm:ss.SSSS\n               \n               A string detailing the time zone ID that the input should be adjusted to. It should\n          be in the format of either region-based zone IDs or zone offsets. Region IDs must\n          have the form 'area/city', such as 'America/Los_Angeles'. Zone offsets must be in\n          the format '(+|-)HH:mm', for example '-08:00' or '+01:00'. Also 'UTC' and 'Z' are\n          supported as aliases of '+00:00'. Other short names are not recommended to use\n          because they can be ambiguous.",
        "A timestamp, or null if\n               \n                ts\n               \n               was a string that could not be cast to a timestamp or\n               \n                tz\n               \n               was an invalid value",
        "1.15.0",
        "Extracts a value from an object or array; returns NULL if either of the arguments is NULL.",
        "Extracts a value from an object or array; returns NULL if either of the arguments is NULL.",
        "0.2.0",
        "Extracts a field value from an object; returns NULL if either of the arguments is NULL.",
        "Extracts a field value from an object; returns NULL if either of the arguments is NULL.\nThis function is similar to GET but applies case-insensitive matching to field names.",
        "0.2.0",
        "Extracts a value from semi-structured data using a path name.",
        "Extracts a value from semi-structured data using a path name.",
        "0.2.0",
        "Returns the largest value from a list of expressions.",
        "Returns the largest value from a list of expressions. If any of the argument values is NULL,\nthe result is NULL. GREATEST supports all data types, including VARIANT.",
        "0.1.0",
        "Describes which of a list of expressions are grouped in a row produced by a GROUP BY query.",
        "Describes which of a list of expressions are grouped in a row produced by a GROUP BY query.",
        "0.1.0",
        "Describes which of a list of expressions are grouped in a row produced by a GROUP BY query.",
        "Describes which of a list of expressions are grouped in a row produced by a GROUP BY query.",
        "0.1.0",
        "Returns a signed 64-bit hash value.",
        "Returns a signed 64-bit hash value. Note that HASH never returns NULL, even for NULL inputs.",
        "0.1.0",
        "Computes hex value of the given column.",
        "Computes hex value of the given column.\nExample",
        "Column to encode.",
        "Encoded string.",
        "1.14.0",
        "Extracts the hour from a date or timestamp.",
        "Extracts the hour from a date or timestamp.",
        "0.1.0",
        "Returns one of two specified expressions, depending on a condition.",
        "Returns one of two specified expressions, depending on a condition.",
        "This is equivalent to an\n              \n               if-then-else\n              \n              expression.\nIf\n              \n               condition\n              \n              evaluates to TRUE, the function returns\n              \n               expr1\n              \n              .\nOtherwise, the function returns\n              \n               expr2\n              \n              .",
        "The condition to evaluate.",
        "The expression to return if the condition evaluates to TRUE.",
        "The expression to return if the condition is not TRUE\n                 (i.e. if it is FALSE or NULL).",
        "0.9.0",
        "Returns a conditional expression that you can pass to the filter or where method to\nperform the equivalent of a WHERE ...",
        "Returns a conditional expression that you can pass to the filter or where method to\nperform the equivalent of a WHERE ... IN query with the subquery represented by\nthe specified DataFrame.",
        "The expression evaluates to true if the value in the column is one of the values in\nthe column of the same name in a specified DataFrame.",
        "For example, the following code returns a DataFrame that contains the rows where\nthe values of the columns\n              \n               c1\n              \n              and\n              \n               c2\n              \n              in\n              \n               df2\n              \n              match the values of the columns\n              \n               a\n              \n              and\n              \n               b\n              \n              in\n              \n               df1\n              \n              . This is equivalent to\nSELECT * FROM table2 WHERE (c1, c2) IN (SELECT a, b FROM table1).",
        "A sequence of the columns to compare for the IN operation.",
        "The DataFrame used as the values for the IN operation",
        "0.10.0",
        "Returns a conditional expression that you can pass to the filter or where method to\nperform the equivalent of a WHERE ...",
        "Returns a conditional expression that you can pass to the filter or where method to\nperform the equivalent of a WHERE ... IN query that matches rows containing a sequence of\nvalues.",
        "The expression evaluates to true if the values in a row matches the values in one of\nthe specified sequences.",
        "For example, the following code returns a DataFrame that contains the rows in which\nthe columns\n              \n               c1\n              \n              and\n              \n               c2\n              \n              contain the values:\n-\n              \n               1\n              \n              and\n              \n               \"a\"\n              \n              , or\n-\n              \n               2\n              \n              and\n              \n               \"b\"\n              \n              This is equivalent to\n              \n               SELECT * FROM table WHERE (c1, c2) IN ((1, 'a'), (2, 'b'))\n              \n              .",
        "A sequence of the columns to compare for the IN operation.",
        "A sequence containing the sequences of values to compare for the IN operation.",
        "0.10.0",
        "Returns the input string with the first letter of each word in uppercase\nand the subsequent letters in lowercase.",
        "Returns the input string with the first letter of each word in uppercase\nand the subsequent letters in lowercase.",
        "0.1.0",
        "Replaces a substring of the specified length, starting at the specified position,\nwith a new string or binary value.",
        "Replaces a substring of the specified length, starting at the specified position,\nwith a new string or binary value.",
        "0.1.0",
        "Locate the position of the first occurrence of substr column in the given string.",
        "Locate the position of the first occurrence of substr column in the given string.\nReturns null if either of the arguments are null.\nFor example\nSELECT id,\n       string1,\n        REGEXP_SUBSTR(string1, 'nevermore\\\\d') AS substring,\n       REGEXP_INSTR( string1, 'nevermore\\\\d') AS position\n   FROM demo1\n   ORDER BY id;\n+----+-------------------------------------+------------+----------+\n | ID | STRING1                             | SUBSTRING  | POSITION |\n |----+-------------------------------------+------------+----------|\n |  1 | nevermore1, nevermore2, nevermore3. | nevermore1 |        1 |\n +----+-------------------------------------+------------+----------+",
        "1.15.0",
        "The position is not zero based, but 1 based index. Returns 0 if substr\ncould not be found in str.",
        "Returns true if the specified VARIANT column contains an ARRAY value.",
        "Returns true if the specified VARIANT column contains an ARRAY value.",
        "0.1.0",
        "Returns true if the specified VARIANT column contains a binary value.",
        "Returns true if the specified VARIANT column contains a binary value.",
        "0.1.0",
        "Returns true if the specified VARIANT column contains a Boolean value.",
        "Returns true if the specified VARIANT column contains a Boolean value.",
        "0.1.0",
        "Returns true if the specified VARIANT column contains a string value.",
        "Returns true if the specified VARIANT column contains a string value.",
        "0.1.0",
        "Returns true if the specified VARIANT column contains a DATE value.",
        "Returns true if the specified VARIANT column contains a DATE value.",
        "0.1.0",
        "Returns true if the specified VARIANT column contains a DATE value.",
        "Returns true if the specified VARIANT column contains a DATE value.",
        "0.1.0",
        "Returns true if the specified VARIANT column contains a fixed-point decimal value or integer.",
        "Returns true if the specified VARIANT column contains a fixed-point decimal value or integer.",
        "0.1.0",
        "Returns true if the specified VARIANT column contains a floating-point value, fixed-point\ndecimal, or integer.",
        "Returns true if the specified VARIANT column contains a floating-point value, fixed-point\ndecimal, or integer.",
        "0.1.0",
        "Returns true if the specified VARIANT column contains an integer value.",
        "Returns true if the specified VARIANT column contains an integer value.",
        "0.1.0",
        "Return true if the value in the column is null.",
        "Return true if the value in the column is null.",
        "0.1.0",
        "Returns true if the specified VARIANT column is a JSON null value.",
        "Returns true if the specified VARIANT column is a JSON null value.",
        "0.1.0",
        "Returns true if the specified VARIANT column contains an OBJECT value.",
        "Returns true if the specified VARIANT column contains an OBJECT value.",
        "0.1.0",
        "Returns true if the specified VARIANT column contains a floating-point value, fixed-point\ndecimal, or integer.",
        "Returns true if the specified VARIANT column contains a floating-point value, fixed-point\ndecimal, or integer.",
        "0.1.0",
        "Returns true if the specified VARIANT column contains a TIME value.",
        "Returns true if the specified VARIANT column contains a TIME value.",
        "0.1.0",
        "Returns true if the specified VARIANT column contains a TIMESTAMP value to be interpreted\nusing the local time zone.",
        "Returns true if the specified VARIANT column contains a TIMESTAMP value to be interpreted\nusing the local time zone.",
        "0.1.0",
        "Returns true if the specified VARIANT column contains a TIMESTAMP value with no time zone.",
        "Returns true if the specified VARIANT column contains a TIMESTAMP value with no time zone.",
        "0.1.0",
        "Returns true if the specified VARIANT column contains a TIMESTAMP value with a time zone.",
        "Returns true if the specified VARIANT column contains a TIMESTAMP value with a time zone.",
        "0.1.0",
        "Returns true if the specified VARIANT column contains a string value.",
        "Returns true if the specified VARIANT column contains a string value.",
        "0.1.0",
        "Wrapper for Snowflake built-in isnull function.",
        "Wrapper for Snowflake built-in isnull function. Gets a boolean\ndepending if value is NULL or not.\nReturn true if the value in the column is null.\nExample::\n>>> from snowflake.snowpark.functions import is_null\n>>> df = session.create_dataframe([1.2, float(\"nan\"), None, 1.0],\n schema=[\"a\"])\n>>> df.select(is_null(\"a\").as_(\"a\")).collect()\n[Row(A=False), Row(A=False), Row(A=True), Row(A=False)]",
        "Column to qnalize if it is null value.",
        "Column object.",
        "1.14.0",
        "Parses a JSON string and returns the value of an element at a specified path in the resulting\nJSON document.",
        "Parses a JSON string and returns the value of an element at a specified path in the resulting\nJSON document.",
        "Column containing the JSON string that should be parsed.",
        "Column containing the path to the element that should be extracted.",
        "0.2.0",
        "Returns the population excess kurtosis of non-NULL records.",
        "Returns the population excess kurtosis of non-NULL records.\nIf all records inside a group are NULL, the function returns NULL.",
        "0.1.0",
        "Accesses data in a previous row in the same result set without having to\njoin the table to itself.",
        "Accesses data in a previous row in the same result set without having to\njoin the table to itself.",
        "0.1.0",
        "Accesses data in a previous row in the same result set without having to\njoin the table to itself.",
        "Accesses data in a previous row in the same result set without having to\njoin the table to itself.",
        "0.1.0",
        "Accesses data in a previous row in the same result set without having to\njoin the table to itself.",
        "Accesses data in a previous row in the same result set without having to\njoin the table to itself.",
        "0.1.0",
        "Returns the last value of the column in a group.",
        "Returns the last value of the column in a group.\nExample",
        "Column to obtain last value.",
        "Column object.",
        "1.14.0",
        "Returns the last day of the specified date part for a date or timestamp.",
        "Returns the last day of the specified date part for a date or timestamp.\nCommonly used to return the last day of the month for a date or timestamp.",
        "0.1.0",
        "Accesses data in a subsequent row in the same result set without having to join the\ntable to itself.",
        "Accesses data in a subsequent row in the same result set without having to join the\ntable to itself.",
        "0.1.0",
        "Accesses data in a subsequent row in the same result set without having to join the\ntable to itself.",
        "Accesses data in a subsequent row in the same result set without having to join the\ntable to itself.",
        "0.1.0",
        "Accesses data in a subsequent row in the same result set without having to join the\ntable to itself.",
        "Accesses data in a subsequent row in the same result set without having to join the\ntable to itself.",
        "0.1.0",
        "Returns the smallest value from a list of expressions.",
        "Returns the smallest value from a list of expressions. LEAST supports all data types,\nincluding VARIANT.",
        "0.1.0",
        "Returns a left most substring of strExpr.",
        "Returns a left most substring of strExpr.",
        "0.1.0",
        "Returns the length of an input string or binary value.",
        "Returns the length of an input string or binary value. For strings,\nthe length is the number of characters, and UTF-8 characters are counted as a\nsingle character. For binary, the length is the number of bytes.",
        "0.1.0",
        "Returns the concatenated input values, separated by empty string.",
        "Returns the concatenated input values, separated by empty string.",
        "For example:",
        "The expression (typically a Column) that determines the values\n           to be put into the list. The expression should evaluate to a\n           string, or to a data type that can be cast to string.",
        "0.12.0",
        "Returns the concatenated input values, separated by\n            \n             delimiter\n            \n            string.",
        "Returns the concatenated input values, separated by\n              \n               delimiter\n              \n              string.",
        "For example:",
        "The expression (typically a Column) that determines the values\n           to be put into the list. The expression should evaluate to a\n           string, or to a data type that can be cast to string.",
        "A string delimiter.",
        "0.12.0",
        "Returns the concatenated input values, separated by\n            \n             delimiter\n            \n            string.",
        "Returns the concatenated input values, separated by\n              \n               delimiter\n              \n              string.",
        "For example:",
        "The expression (typically a Column) that determines the values\n           to be put into the list. The expression should evaluate to a\n           string, or to a data type that can be cast to string.",
        "A string delimiter.",
        "Whether the input expression is distinct.",
        "0.12.0",
        "Creates a\n            \n             Column\n            \n            expression for a literal value.",
        "Creates a\n              \n               Column\n              \n              expression for a literal value.",
        "0.1.0",
        "Locate the position of the first occurrence of substr in a string column, after position pos.",
        "Locate the position of the first occurrence of substr in a string column, after position pos.",
        "string to search",
        "value where string will be searched",
        "index for starting the search. default to 1.",
        "Returns the position of the first occurrence",
        "1.14.0",
        "The position is not zero based, but 1 based index. returns 0 if substr\ncould not be found in str. This function is just leverages the SF POSITION builtin\nExample",
        "Locate the position of the first occurrence of substr in a string column, after position pos.",
        "Locate the position of the first occurrence of substr in a string column, after position pos.",
        "string to search",
        "value where string will be searched",
        "index for starting the search",
        "returns the position of the first occurrence.",
        "1.14.0",
        "The position is not zero based, but 1 based index. returns 0 if substr\ncould not be found in str. This function is just leverages the SF POSITION builtin\nExample",
        "Returns the logarithm of a numeric expression.",
        "Returns the logarithm of a numeric expression.",
        "0.1.0",
        "Computes the logarithm of the given column in base 10.",
        "Computes the logarithm of the given column in base 10.\nExample",
        "ColumnName in String to apply logarithm operation",
        "log10 of the given column",
        "1.14.0",
        "Computes the logarithm of the given value in base 10.",
        "Computes the logarithm of the given value in base 10.\nExample",
        "Column to apply logarithm operation",
        "log10 of the given column",
        "1.14.0",
        "Computes the natural logarithm of the given value plus one.",
        "Computes the natural logarithm of the given value plus one.\nExample",
        "ColumnName in String to apply logarithm operation",
        "the natural logarithm of the given value plus one.",
        "1.14.0",
        "Computes the natural logarithm of the given value plus one.",
        "Computes the natural logarithm of the given value plus one.\nExample",
        "Column to apply logarithm operation",
        "the natural logarithm of the given value plus one.",
        "1.14.0",
        "Returns the input string with all characters converted to lowercase.",
        "Returns the input string with all characters converted to lowercase.",
        "0.1.0",
        "Left-pads a string with characters from another string, or left-pads a\nbinary value with bytes from another binary value.",
        "Left-pads a string with characters from another string, or left-pads a\nbinary value with bytes from another binary value.",
        "0.1.0",
        "Removes leading characters, including whitespace, from a string.",
        "Removes leading characters, including whitespace, from a string.",
        "0.1.0",
        "Removes leading characters, including whitespace, from a string.",
        "Removes leading characters, including whitespace, from a string.",
        "0.1.0",
        "Returns the maximum value for the records in a group.",
        "Returns the maximum value for the records in a group. NULL values are ignored unless all\nthe records are NULL, in which case a NULL value is returned.",
        "0.1.0",
        "Returns the maximum value for the records in a group.",
        "Returns the maximum value for the records in a group. NULL values are ignored unless all\nthe records are NULL, in which case a NULL value is returned.",
        "Example:",
        "The name of the column",
        "The maximum value of the given column",
        "1.13.0",
        "Returns a 32-character hex-encoded string containing the 128-bit MD5 message digest.",
        "Returns a 32-character hex-encoded string containing the 128-bit MD5 message digest.",
        "0.1.0",
        "Returns the average of non-NULL records.",
        "Returns the average of non-NULL records. If all records inside a group are NULL,\nthe function returns NULL. Alias of avg",
        "0.1.0",
        "Returns the average of non-NULL records.",
        "Returns the average of non-NULL records. If all records inside a group are NULL,\nthe function returns NULL. Alias of avg.",
        "Example:",
        "The name of the column",
        "The average value of the given column",
        "1.13.0",
        "Returns the median value for the records in a group.",
        "Returns the median value for the records in a group. NULL values are ignored unless all\nthe records are NULL, in which case a NULL value is returned.",
        "0.5.0",
        "Returns the minimum value for the records in a group.",
        "Returns the minimum value for the records in a group. NULL values are ignored unless all\nthe records are NULL, in which case a NULL value is returned.",
        "0.1.0",
        "Returns the minimum value for the records in a group.",
        "Returns the minimum value for the records in a group. NULL values are ignored unless all\nthe records are NULL, in which case a NULL value is returned.",
        "Example:",
        "The name of the column",
        "The minimum value of the given column",
        "1.13.0",
        "Extracts the minute from a date or timestamp.",
        "Extracts the minute from a date or timestamp.",
        "0.1.0",
        "A column expression that generates monotonically increasing 64-bit integers.",
        "A column expression that generates monotonically increasing 64-bit integers.\nReturns a sequence of monotonically increasing integers, with wrap-around\nwhich happens after largest representable integer of integer width 8 byte.",
        "Args:\nsign: When 0, the sequence continues at 0 after wrap-around. When 1, the sequence\ncontinues at smallest representable 8 byte integer. Defaults to 0.",
        "See Also:",
        "Example::\n>>> df = session.generator(seq8(0), rowcount=3)\n>>> df.collect()\n[Row(SEQ8(0)=0), Row(SEQ8(0)=1), Row(SEQ8(0)=2)]",
        "1.15.0",
        "Extracts the month from a date or timestamp.",
        "Extracts the month from a date or timestamp.",
        "0.1.0",
        "Extracts the three-letter month name from the specified date or timestamp.",
        "Extracts the three-letter month name from the specified date or timestamp.",
        "0.1.0",
        "Returns number of months between dates\n            \n             start\n            \n            and\n            \n             end\n            \n            .",
        "Returns number of months between dates\n              \n               start\n              \n              and\n              \n               end\n              \n              .",
        "A whole number is returned if both inputs have the same day of month or both are the last day\nof their respective months. Otherwise, the difference is calculated assuming 31 days per month.",
        "For example:",
        "Column name. If a string, the data must be in a format that can\n             be cast to a timestamp, such as yyyy-MM-dd\n             or yyyy-MM-dd HH:mm:ss.SSSS",
        "Column name . If a string, the data must be in a format that can\n             cast to a timestamp, such as yyyy-MM-dd or yyyy-MM-dd HH:mm:ss.SSSS",
        "A double, or null if either end or start were strings that could not be cast to a\n        timestamp. Negative if end is before start",
        "1.15.0",
        "Returns the negation of the value in the column (equivalent to a unary minus).",
        "Returns the negation of the value in the column (equivalent to a unary minus).",
        "0.1.0",
        "Returns the date of the first specified DOW (day of week) that occurs after the input date.",
        "Returns the date of the first specified DOW (day of week) that occurs after the input date.",
        "0.1.0",
        "Returns the inverse of a boolean expression.",
        "Returns the inverse of a boolean expression.",
        "0.1.0",
        "Window function: returns the ntile group id (from 1 to\n            \n             n\n            \n            inclusive) in an ordered window\npartition.",
        "Window function: returns the ntile group id (from 1 to\n              \n               n\n              \n              inclusive) in an ordered window\npartition. For example, if\n              \n               n\n              \n              is 4, the first quarter of the rows will get value 1, the second\nquarter will get 2, the third quarter will get 3, and the last quarter will get 4.",
        "This is equivalent to the NTILE function in SQL.\nExample",
        "number of groups",
        "returns the ntile group id (from 1 to n inclusive) in an ordered window partition.",
        "1.14.0",
        "Divides an ordered data set equally into the number of buckets specified by n.",
        "Divides an ordered data set equally into the number of buckets specified by n.\nBuckets are sequentially numbered 1 through n.",
        "0.1.0",
        "Returns an OBJECT constructed from the arguments.",
        "Returns an OBJECT constructed from the arguments.",
        "0.2.0",
        "Returns an object containing the contents of the input (i.e.source) object with one or more\nkeys removed.",
        "Returns an object containing the contents of the input (i.e.source) object with one or more\nkeys removed.",
        "0.2.0",
        "Returns an object consisting of the input object with a new key-value pair inserted (or an\nexisting key updated with a new value).",
        "Returns an object consisting of the input object with a new key-value pair inserted (or an\nexisting key updated with a new value).",
        "0.2.0",
        "Returns an object consisting of the input object with a new key-value pair inserted.",
        "Returns an object consisting of the input object with a new key-value pair inserted.\nThe input key must not exist in the object.",
        "0.2.0",
        "Returns an array containing the list of keys in the input object.",
        "Returns an array containing the list of keys in the input object.",
        "0.2.0",
        "Returns a new OBJECT containing some of the key-value pairs from an existing object.",
        "Returns a new OBJECT containing some of the key-value pairs from an existing object.",
        "To identify the key-value pairs to include in the new object, pass in the keys as arguments,\nor pass in an array containing the keys.",
        "If a specified key is not present in the input object, the key is ignored.",
        "0.2.0",
        "Returns one OBJECT per group.",
        "Returns one OBJECT per group. For each (key, value) input pair, where key must be a VARCHAR\nand value must be a VARIANT, the resulting OBJECT contains a key:value field.",
        "0.2.0",
        "Parse the value of the specified column as a JSON string and returns the resulting JSON\ndocument.",
        "Parse the value of the specified column as a JSON string and returns the resulting JSON\ndocument.",
        "0.2.0",
        "Parse the value of the specified column as a JSON string and returns the resulting XML\ndocument.",
        "Parse the value of the specified column as a JSON string and returns the resulting XML\ndocument.",
        "0.2.0",
        "Returns the relative rank of a value within a group of values, specified as a percentage\nranging from 0.0 to 1.0.",
        "Returns the relative rank of a value within a group of values, specified as a percentage\nranging from 0.0 to 1.0.",
        "0.1.0",
        "Returns a number (l) raised to the specified power (r).",
        "Returns a number (l) raised to the specified power (r).",
        "Example:",
        "The value of the base.",
        "The name of the numeric column representing the exponent.",
        "A column containing the result of raising\n               \n                l\n               \n               to the power of\n               \n                r\n               \n               .",
        "1.15.0",
        "Returns a number (l) raised to the specified power (r).",
        "Returns a number (l) raised to the specified power (r).",
        "Example:",
        "The value of the base.",
        "The numeric column representing the exponent.",
        "A column containing the result of raising\n               \n                l\n               \n               to the power of\n               \n                r\n               \n               .",
        "1.15.0",
        "Returns a number (l) raised to the specified power (r).",
        "Returns a number (l) raised to the specified power (r).",
        "Example:",
        "The name of the numeric column representing the base.",
        "The value of the exponent.",
        "A column containing the result of raising\n               \n                l\n               \n               to the power of\n               \n                r\n               \n               .",
        "1.15.0",
        "Returns a number (l) raised to the specified power (r).",
        "Returns a number (l) raised to the specified power (r).",
        "Example:",
        "The numeric column representing the base.",
        "The value of the exponent.",
        "A column containing the result of raising\n               \n                l\n               \n               to the power of\n               \n                r\n               \n               .",
        "1.15.0",
        "Returns a number (l) raised to the specified power (r).",
        "Returns a number (l) raised to the specified power (r).",
        "Example:",
        "The name of the numeric column representing the base.",
        "The name of the numeric column representing the exponent.",
        "A column containing the result of raising\n               \n                l\n               \n               to the power of\n               \n                r\n               \n               .",
        "1.15.0",
        "Returns a number (l) raised to the specified power (r).",
        "Returns a number (l) raised to the specified power (r).",
        "Example:",
        "The name of the numeric column representing the base.",
        "The numeric column representing the exponent.",
        "A column containing the result of raising\n               \n                l\n               \n               to the power of\n               \n                r\n               \n               .",
        "1.15.0",
        "Returns a number (l) raised to the specified power (r).",
        "Returns a number (l) raised to the specified power (r).",
        "Example:",
        "The numeric column representing the base.",
        "The name of the numeric column representing the exponent.",
        "A column containing the result of raising\n               \n                l\n               \n               to the power of\n               \n                r\n               \n               .",
        "1.15.0",
        "Returns a number (l) raised to the specified power (r).",
        "Returns a number (l) raised to the specified power (r).",
        "0.1.0",
        "Returns the date of the first specified DOW (day of week) that occurs before the input date.",
        "Returns the date of the first specified DOW (day of week) that occurs before the input date.",
        "0.1.0",
        "Extracts the quarter from a date or timestamp.",
        "Extracts the quarter from a date or timestamp.",
        "0.1.0",
        "Converts degrees to radians.",
        "Converts degrees to radians.",
        "0.1.0",
        "Generate a column with independent and identically distributed (i.i.d.) samples\nfrom the standard normal distribution.",
        "Generate a column with independent and identically distributed (i.i.d.) samples\nfrom the standard normal distribution.\nCalls to the Snowflake RANDOM function.\nNOTE: Snowflake returns integers of 17-19 digits.\nExample",
        "Seed to use in the random function.",
        "Random number.",
        "1.14.0",
        "Generate a column with independent and identically distributed (i.i.d.) samples\nfrom the standard normal distribution.",
        "Generate a column with independent and identically distributed (i.i.d.) samples\nfrom the standard normal distribution.\nReturn a call to the Snowflake RANDOM function.\nNOTE: Snowflake returns integers of 17-19 digits.\nExample",
        "Random number.",
        "1.14.0",
        "Each call returns a pseudo-random 64-bit integer.",
        "Each call returns a pseudo-random 64-bit integer.",
        "0.1.0",
        "Each call returns a pseudo-random 64-bit integer.",
        "Each call returns a pseudo-random 64-bit integer.",
        "0.1.0",
        "Returns the rank of a value within an ordered group of values.",
        "Returns the rank of a value within an ordered group of values.\nThe rank value starts at 1 and continues up.",
        "0.1.0",
        "Returns the number of times that a pattern occurs in a strExpr.",
        "Returns the number of times that a pattern occurs in a strExpr.",
        "Pattern syntax is specified\n              \n               here",
        "Parameter detail is specified\n              \n               here",
        "0.1.0",
        "Returns the number of times that a pattern occurs in a strExpr.",
        "Returns the number of times that a pattern occurs in a strExpr.",
        "Pattern syntax is specified\n              \n               here",
        "Parameter detail is specified\n              \n               here",
        "0.1.0",
        "Signature - snowflake.snowpark.functions.regexp_extract\n(value: Union[Column, str], regexp: Union[Column, str], idx: int)\n  Column\nExtract a specific group matched by a regex, from the specified string\ncolumn.",
        "Signature - snowflake.snowpark.functions.regexp_extract\n(value: Union[Column, str], regexp: Union[Column, str], idx: int)\n  Column\nExtract a specific group matched by a regex, from the specified string\ncolumn. If the regex did not match, or the specified group did not match,\nan empty string is returned.\n<pr>Example:\nfrom snowflake.snowpark.functions import regexp_extract\ndf = session.createDataFrame(\n              \n               10], [\"id_40_50\", 30\n              \n              ,\n [\"id\", \"age\"])\ndf.select(regexp_extract(\"id\", r\"(\\d+)\", 1).alias(\"RES\")).show()\n</pr>\n<pr>\n    ---------\n    |\"RES\"  |\n    ---------\n    |20     |\n    |40     |\n    ---------\n</pr>\nNote: non-greedy tokens such as  are not supported",
        "Column object.",
        "1.14.0",
        "Returns the subject with the specified pattern (or all occurrences of the pattern)\nreplaced by a replacement string.",
        "Returns the subject with the specified pattern (or all occurrences of the pattern)\nreplaced by a replacement string. If no matches are found,\nreturns the original subject.",
        "1.9.0",
        "Returns the subject with the specified pattern (or all occurrences of the pattern) removed.",
        "Returns the subject with the specified pattern (or all occurrences of the pattern) removed.\nIf no matches are found, returns the original subject.",
        "1.9.0",
        "Builds a string by repeating the input for the specified number of times.",
        "Builds a string by repeating the input for the specified number of times.",
        "0.1.0",
        "Removes all occurrences of a specified strExpr,\nand optionally replaces them with replacement.",
        "Removes all occurrences of a specified strExpr,\nand optionally replaces them with replacement.",
        "0.1.0",
        "Removes all occurrences of a specified strExpr,\nand optionally replaces them with replacement.",
        "Removes all occurrences of a specified strExpr,\nand optionally replaces them with replacement.",
        "0.1.0",
        "Wrapper for Snowflake built-in reverse function.",
        "Wrapper for Snowflake built-in reverse function. Gets the reversed string.\nReverses the order of characters in a string, or of bytes in a binary value.\nThe returned value is the same length as the input, but with the characters/bytes\n in reverse order. If subject is NULL, the result is also NULL.\nExample: SELECT REVERSE('Hello, world!');\n+--------------------------+",
        "REVERSE('HELLO, WORLD!')",
        "!dlrow ,olleH",
        "+--------------------------+",
        "Column to be reverse.",
        "Column object.",
        "1.14.0",
        "Returns a right most substring of strExpr.",
        "Returns a right most substring of strExpr.",
        "0.1.0",
        "Rounds the numeric values of the given column\n            \n             e\n            \n            to the\n            \n             scale\n            \n            decimal places using the\nhalf away from zero rounding mode.",
        "Rounds the numeric values of the given column\n              \n               e\n              \n              to the\n              \n               scale\n              \n              decimal places using the\nhalf away from zero rounding mode.",
        "Example:",
        "The column of numeric values to round.",
        "The number of decimal places to which\n               \n                e\n               \n               should be rounded.",
        "A new column containing the rounded numeric values.",
        "1.14.0",
        "Rounds the numeric values of the given column\n            \n             e\n            \n            to 0 decimal places using the\nhalf away from zero rounding mode.",
        "Rounds the numeric values of the given column\n              \n               e\n              \n              to 0 decimal places using the\nhalf away from zero rounding mode.",
        "Example:",
        "The column of numeric values to round.",
        "A new column containing the rounded numeric values.",
        "0.1.0",
        "Rounds the numeric values of the given column\n            \n             e\n            \n            to the\n            \n             scale\n            \n            decimal places using the\nhalf away from zero rounding mode.",
        "Rounds the numeric values of the given column\n              \n               e\n              \n              to the\n              \n               scale\n              \n              decimal places using the\nhalf away from zero rounding mode.",
        "Example:",
        "The column of numeric values to round.",
        "A column representing the number of decimal places to which\n               \n                e\n               \n               should be rounded.",
        "A new column containing the rounded numeric values.",
        "0.1.0",
        "Returns a unique row number for each row within a window partition.",
        "Returns a unique row number for each row within a window partition.\nThe row number starts at 1 and continues up sequentially.",
        "0.1.0",
        "Right-pads a string with characters from another string, or right-pads a\nbinary value with bytes from another binary value.",
        "Right-pads a string with characters from another string, or right-pads a\nbinary value with bytes from another binary value.",
        "0.1.0",
        "Removes trailing characters, including whitespace, from a string.",
        "Removes trailing characters, including whitespace, from a string.",
        "0.1.0",
        "Removes trailing characters, including whitespace, from a string.",
        "Removes trailing characters, including whitespace, from a string.",
        "0.1.0",
        "Extracts the second from a date or timestamp.",
        "Extracts the second from a date or timestamp.",
        "0.1.0",
        "Generates a sequence of monotonically increasing integers, with wrap-around.",
        "Generates a sequence of monotonically increasing integers, with wrap-around.\nWrap-around occurs after the largest representable integer of the integer width\n1 byte.",
        "if true, the sequence continues at 0 after wrap-around,\n                      otherwise, continues at the smallest representable number\n                      based on the given integer width.",
        "0.11.0",
        "Generates a sequence of monotonically increasing integers, with wrap-around.",
        "Generates a sequence of monotonically increasing integers, with wrap-around.\nWrap-around occurs after the largest representable integer of the integer width\n1 byte. the sequence continues at 0 after wrap-around.",
        "0.11.0",
        "Generates a sequence of monotonically increasing integers, with wrap-around.",
        "Generates a sequence of monotonically increasing integers, with wrap-around.\nWrap-around occurs after the largest representable integer of the integer width\n2 byte.",
        "if true, the sequence continues at 0 after wrap-around,\n                      otherwise, continues at the smallest representable number\n                      based on the given integer width.",
        "0.11.0",
        "Generates a sequence of monotonically increasing integers, with wrap-around.",
        "Generates a sequence of monotonically increasing integers, with wrap-around.\nWrap-around occurs after the largest representable integer of the integer width\n2 byte. the sequence continues at 0 after wrap-around.",
        "0.11.0",
        "Generates a sequence of monotonically increasing integers, with wrap-around.",
        "Generates a sequence of monotonically increasing integers, with wrap-around.\nWrap-around occurs after the largest representable integer of the integer width\n4 byte.",
        "if true, the sequence continues at 0 after wrap-around,\n                      otherwise, continues at the smallest representable number\n                      based on the given integer width.",
        "0.11.0",
        "Generates a sequence of monotonically increasing integers, with wrap-around.",
        "Generates a sequence of monotonically increasing integers, with wrap-around.\nWrap-around occurs after the largest representable integer of the integer width\n4 byte. the sequence continues at 0 after wrap-around.",
        "0.11.0",
        "Generates a sequence of monotonically increasing integers, with wrap-around.",
        "Generates a sequence of monotonically increasing integers, with wrap-around.\nWrap-around occurs after the largest representable integer of the integer width\n8 byte.",
        "if true, the sequence continues at 0 after wrap-around,\n                      otherwise, continues at the smallest representable number\n                      based on the given integer width.",
        "0.11.0",
        "Generates a sequence of monotonically increasing integers, with wrap-around.",
        "Generates a sequence of monotonically increasing integers, with wrap-around.\nWrap-around occurs after the largest representable integer of the integer width\n8 byte. the sequence continues at 0 after wrap-around.",
        "0.11.0",
        "Returns a 40-character hex-encoded string containing the 160-bit SHA-1 message digest.",
        "Returns a 40-character hex-encoded string containing the 160-bit SHA-1 message digest.",
        "0.1.0",
        "Returns a hex-encoded string containing the N-bit SHA-2 message digest,\nwhere N is the specified output digest size.",
        "Returns a hex-encoded string containing the N-bit SHA-2 message digest,\nwhere N is the specified output digest size.",
        "0.1.0",
        "Shift the given value numBits left.",
        "Shift the given value numBits left. If the given value is a long value,\nthis function will return a long value else it will return an integer value.\nExample",
        "Column to modify.",
        "Number of bits to shift.",
        "Column object.",
        "1.14.0",
        "Shift the given value numBits right.",
        "Shift the given value numBits right. If the given value is a long value,\nit will return a long value else it will return an integer value.\nExample",
        "Column to modify.",
        "Number of bits to shift.",
        "Column object.",
        "1.14.0",
        "Returns the sign of its argument as mentioned :",
        "Returns the sign of its argument as mentioned :",
        "Args:\n    col: The column to evaluate its sign\n<pr>\nExample::\n    >>> df = session.create_dataframe([(-2, 2, 0)], [\"a\", \"b\", \"c\"])\n    >>> df.select(sign(\"a\").alias(\"a_sign\"), sign(\"b\").alias(\"b_sign\"),\nsign(\"c\").alias(\"c_sign\")).show()\n    ----------------------------------\n    |\"A_SIGN\"  |\"B_SIGN\"  |\"C_SIGN\"  |\n    ----------------------------------\n    |-1        |1         |0         |\n    ----------------------------------\n</pr>",
        "Column object.",
        "1.14.0",
        "Returns the sign of the given column.",
        "Returns the sign of the given column. Returns either 1 for positive,\n 0 for 0 or\nNaN, -1 for negative and null for null.\nNOTE: if string values are provided snowflake will attempts to cast.\n If it casts correctly, returns the calculation,\n if not an error will be thrown",
        "Name of the column to calculate the sign.",
        "Column object.",
        "1.14.0",
        "Returns the sign of its argument:",
        "Returns the sign of its argument:",
        "Args:\n    col: The column to evaluate its sign\n<pr>\nExample::\n    >>> df = session.create_dataframe([(-2, 2, 0)], [\"a\", \"b\", \"c\"])\n    >>> df.select(sign(\"a\").alias(\"a_sign\"), sign(\"b\").alias(\"b_sign\"),\nsign(\"c\").alias(\"c_sign\")).show()\n    ----------------------------------\n    |\"A_SIGN\"  |\"B_SIGN\"  |\"C_SIGN\"  |\n    ----------------------------------\n    |-1        |1         |0         |\n    ----------------------------------\n</pr>",
        "Column object.",
        "1.14.0",
        "Computes the sine of its argument; the argument should be expressed in radians.",
        "Computes the sine of its argument; the argument should be expressed in radians.",
        "0.1.0",
        "Computes the hyperbolic sine of its argument.",
        "Computes the hyperbolic sine of its argument.",
        "0.1.0",
        "Returns the size of the input ARRAY.",
        "Returns the size of the input ARRAY.",
        "If the specified column contains a VARIANT value that contains an ARRAY, the size of the ARRAY\nis returned; otherwise, NULL is returned if the value is not an ARRAY.",
        "Example:",
        "Column to get the size.",
        "Size of array column.",
        "1.14.0",
        "Returns the sample skewness of non-NULL records.",
        "Returns the sample skewness of non-NULL records. If all records inside a group are NULL,\nthe function returns NULL.",
        "0.1.0",
        "Returns a string that contains a phonetic representation of the input string.",
        "Returns a string that contains a phonetic representation of the input string.",
        "0.1.0",
        "Splits a given string with a given separator and returns the result in an array of strings.",
        "Splits a given string with a given separator and returns the result in an array of strings.\nTo specify a string separator, use the lit() function.",
        "Example 1:",
        "|\"SPLIT(\"\"V\"\", \"\"D\"\")\"  |\n  -------------------------\n  |[                      |\n  |  \"many\",              |\n  |  \"many\",              |\n  |  \"words\"              |\n  |]                      |\n  |[                      |\n  |  \"hello\",             |\n  |  \"hello\"              |\n  |]                      |\n  -------------------------",
        "Example 2:",
        "|\"SPLIT(\"\"V\"\", \"\"D\"\")\"  |\n  -------------------------\n  |[                      |\n  |  \"many\",              |\n  |  \"many\",              |\n  |  \"words\"              |\n  |]                      |\n  |[                      |\n  |  \"hello\",             |\n  |  \"hello\"              |\n  |]                      |\n  -------------------------",
        "0.1.0",
        "Creates a\n            \n             Column\n            \n            expression from raw SQL text.",
        "Creates a\n              \n               Column\n              \n              expression from raw SQL text.",
        "Note that the function does not interpret or check the SQL text.",
        "0.1.0",
        "Returns the square-root of a non-negative numeric expression.",
        "Returns the square-root of a non-negative numeric expression.",
        "0.1.0",
        "Returns true if col starts with str.",
        "Returns true if col starts with str.",
        "0.1.0",
        "Returns the sample standard deviation (square root of sample variance) of non-NULL values.",
        "Returns the sample standard deviation (square root of sample variance) of non-NULL values.\nIf all records inside a group are NULL, returns NULL.",
        "0.1.0",
        "Returns the population standard deviation (square root of variance) of non-NULL values.",
        "Returns the population standard deviation (square root of variance) of non-NULL values.\nIf all records inside a group are NULL, returns NULL.",
        "0.1.0",
        "Returns the sample standard deviation (square root of sample variance) of non-NULL values.",
        "Returns the sample standard deviation (square root of sample variance) of non-NULL values.\nIf all records inside a group are NULL, returns NULL. Alias of stddev",
        "0.1.0",
        "Converts a JSON \"null\" value in the specified column to a SQL NULL value.",
        "Converts a JSON \"null\" value in the specified column to a SQL NULL value.\nAll other VARIANT values in the column are returned unchanged.",
        "0.2.0",
        "Tokenizes the given string using the given set of delimiters and returns the tokens as an\narray.",
        "Tokenizes the given string using the given set of delimiters and returns the tokens as an\narray. If either parameter is a NULL, a NULL is returned. An empty array is returned if\ntokenization produces no tokens.",
        "0.2.0",
        "Tokenizes the given string using the given set of delimiters and returns the tokens as an\narray.",
        "Tokenizes the given string using the given set of delimiters and returns the tokens as an\narray. If either parameter is a NULL, a NULL is returned. An empty array is returned if\ntokenization produces no tokens.",
        "0.2.0",
        "Returns the portion of the string or binary value str,\nstarting from the character/byte specified by pos, with limited length.",
        "Returns the portion of the string or binary value str,\nstarting from the character/byte specified by pos, with limited length.",
        "0.1.0",
        "Returns the substring from string str before count occurrences\nof the delimiter delim.",
        "Returns the substring from string str before count occurrences\nof the delimiter delim. If count is positive,\neverything the left of the final delimiter (counting from left)\n is returned. If count is negative, every to the right of the\nfinal delimiter (counting from the right) is returned.\nsubstring_index performs a case-sensitive match when searching for delim.",
        "1.14.0",
        "Returns the sum of non-NULL records in a group.",
        "Returns the sum of non-NULL records in a group. If all records inside a group are NULL,\nthe function returns NULL.",
        "The input column name",
        "The result column",
        "1.12.0",
        "Returns the sum of non-NULL records in a group.",
        "Returns the sum of non-NULL records in a group. If all records inside a group are NULL,\nthe function returns NULL.",
        "0.1.0",
        "Returns the sum of non-NULL distinct records in a group.",
        "Returns the sum of non-NULL distinct records in a group. You can use the DISTINCT keyword to\ncompute the sum of unique non-null values. If all records inside a group are NULL,\nthe function returns NULL.",
        "0.1.0",
        "Returns the current timestamp for the system, but in the UTC time zone.",
        "Returns the current timestamp for the system, but in the UTC time zone.",
        "0.1.0",
        "Computes the tangent of its argument; the argument should be expressed in radians.",
        "Computes the tangent of its argument; the argument should be expressed in radians.",
        "0.1.0",
        "Computes the hyperbolic tangent of its argument.",
        "Computes the hyperbolic tangent of its argument.",
        "0.1.0",
        "Creates a time from individual numeric components.",
        "Creates a time from individual numeric components.",
        "0.1.0",
        "Creates a time from individual numeric components.",
        "Creates a time from individual numeric components.",
        "0.1.0",
        "Creates a timestamp from individual numeric components.",
        "Creates a timestamp from individual numeric components.\nIf no time zone is in effect, the function can be used to create a timestamp\nfrom a date expression and a time expression.",
        "0.1.0",
        "Creates a timestamp from individual numeric components.",
        "Creates a timestamp from individual numeric components.\nIf no time zone is in effect, the function can be used to create a timestamp\nfrom a date expression and a time expression.",
        "0.1.0",
        "Creates a timestamp from individual numeric components.",
        "Creates a timestamp from individual numeric components.\nIf no time zone is in effect, the function can be used to create a timestamp\nfrom a date expression and a time expression.",
        "0.1.0",
        "Creates a timestamp from individual numeric components.",
        "Creates a timestamp from individual numeric components.\nIf no time zone is in effect, the function can be used to create a timestamp\nfrom a date expression and a time expression.",
        "0.1.0",
        "Creates a timestamp from individual numeric components.",
        "Creates a timestamp from individual numeric components.\nIf no time zone is in effect, the function can be used to create a timestamp\nfrom a date expression and a time expression.",
        "0.1.0",
        "Creates a timestamp from individual numeric components.",
        "Creates a timestamp from individual numeric components.\nIf no time zone is in effect, the function can be used to create a timestamp\nfrom a date expression and a time expression.",
        "0.1.0",
        "Creates a timestamp from individual numeric components.",
        "Creates a timestamp from individual numeric components.\nIf no time zone is in effect, the function can be used to create a timestamp\nfrom a date expression and a time expression.",
        "0.1.0",
        "Creates a timestamp from individual numeric components.",
        "Creates a timestamp from individual numeric components.\nIf no time zone is in effect, the function can be used to create a timestamp\nfrom a date expression and a time expression.",
        "0.1.0",
        "Creates a timestamp from individual numeric components.",
        "Creates a timestamp from individual numeric components.\nIf no time zone is in effect, the function can be used to create a timestamp\nfrom a date expression and a time expression.",
        "0.1.0",
        "Creates a timestamp from individual numeric components.",
        "Creates a timestamp from individual numeric components.\nIf no time zone is in effect, the function can be used to create a timestamp\nfrom a date expression and a time expression.",
        "0.1.0",
        "Creates a timestamp from individual numeric components.",
        "Creates a timestamp from individual numeric components.\nIf no time zone is in effect, the function can be used to create a timestamp\nfrom a date expression and a time expression.",
        "0.1.0",
        "Generate a\n            \n             Column\n            \n            representing the result of the input DataFrame.",
        "Generate a\n              \n               Column\n              \n              representing the result of the input DataFrame.\nThe parameter\n              \n               df\n              \n              should have one column and must produce one row.",
        "For Example:",
        "0.4.0",
        "Converts the input expression into an array:",
        "Converts the input expression into an array:",
        "If the input is an ARRAY, or VARIANT containing an array value, the result is unchanged.\nFor NULL or a JSON null input, returns NULL.\nFor any other value, the result is a single-element array containing this value.",
        "0.2.0",
        "Converts an input expression to a date.",
        "Converts an input expression to a date.",
        "0.1.0",
        "Converts an input expression to a date.",
        "Converts an input expression to a date.",
        "0.1.0",
        "Converts an input expression to a decimal",
        "Converts an input expression to a decimal",
        "0.5.0",
        "Converts any VARIANT value to a string containing the JSON representation of the value.",
        "Converts any VARIANT value to a string containing the JSON representation of the value.\nIf the input is NULL, the result is also NULL.",
        "0.2.0",
        "Converts the input value to an object:",
        "Converts the input value to an object:",
        "For a variant value containing an object, returns this object (in a value of type OBJECT).\nFor a variant value containing JSON null or for NULL input, returns NULL.\nFor all other input values, reports an error.",
        "0.2.0",
        "Converts an input expression into the corresponding timestamp.",
        "Converts an input expression into the corresponding timestamp.",
        "0.1.0",
        "Converts an input expression into the corresponding timestamp.",
        "Converts an input expression into the corresponding timestamp.",
        "0.1.0",
        "Given a timestamp like '2017-07-14 02:40:00.0', interprets it as a time in the given time\nzone, and renders that time as a timestamp in UTC.",
        "Given a timestamp like '2017-07-14 02:40:00.0', interprets it as a time in the given time\nzone, and renders that time as a timestamp in UTC. For example, 'GMT+1' would yield\n'2017-07-14 01:40:00.0'.",
        "A date, timestamp or string. If a string, the data must be in a format that can be\n          cast to a timestamp, such as\n               \n                yyyy-MM-dd\n               \n               or\n               \n                yyyy-MM-dd HH:mm:ss.SSSS\n               \n               A string detailing the time zone ID that the input should be adjusted to. It should\n          be in the format of either region-based zone IDs or zone offsets. Region IDs must\n          have the form 'area/city', such as 'America/Los_Angeles'. Zone offsets must be in\n          the format '(+|-)HH:mm', for example '-08:00' or '+01:00'. Also 'UTC' and 'Z' are\n          supported as aliases of '+00:00'. Other short names are not recommended to use\n          because they can be ambiguous.",
        "A timestamp, or null if\n               \n                ts\n               \n               was a string that could not be cast to a timestamp or\n               \n                tz\n               \n               was an invalid value",
        "1.15.0",
        "Converts any value to VARIANT value or NULL (if input is NULL).",
        "Converts any value to VARIANT value or NULL (if input is NULL).",
        "0.2.0",
        "Converts any VARIANT value to a string containing the XML representation of the value.",
        "Converts any VARIANT value to a string containing the XML representation of the value.\nIf the input is NULL, the result is also NULL.",
        "0.2.0",
        "Translates src from the characters in matchingString to the characters in replaceString.",
        "Translates src from the characters in matchingString to the characters in replaceString.",
        "0.1.0",
        "Removes leading and trailing characters from a string.",
        "Removes leading and trailing characters from a string.",
        "0.1.0",
        "Rounds the input expression down to the nearest (or equal) integer closer to zero,\nor to the nearest equal or smaller value with the specified number of\nplaces after the decimal point.",
        "Rounds the input expression down to the nearest (or equal) integer closer to zero,\nor to the nearest equal or smaller value with the specified number of\nplaces after the decimal point.",
        "0.1.0",
        "Creates a\n            \n             Column\n            \n            expression for a literal value.",
        "Creates a\n              \n               Column\n              \n              expression for a literal value.",
        "0.1.0",
        "Registers a Scala closure of 22 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 22 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.12.0",
        "Registers a Scala closure of 21 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 21 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.12.0",
        "Registers a Scala closure of 20 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 20 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.12.0",
        "Registers a Scala closure of 19 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 19 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.12.0",
        "Registers a Scala closure of 18 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 18 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.12.0",
        "Registers a Scala closure of 17 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 17 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.12.0",
        "Registers a Scala closure of 16 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 16 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.12.0",
        "Registers a Scala closure of 15 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 15 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.12.0",
        "Registers a Scala closure of 14 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 14 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.12.0",
        "Registers a Scala closure of 13 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 13 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.12.0",
        "Registers a Scala closure of 12 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 12 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.12.0",
        "Registers a Scala closure of 11 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 11 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.12.0",
        "Registers a Scala closure of 10 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 10 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.1.0",
        "Registers a Scala closure of 9 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 9 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.1.0",
        "Registers a Scala closure of 8 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 8 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.1.0",
        "Registers a Scala closure of 7 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 7 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.1.0",
        "Registers a Scala closure of 6 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 6 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.1.0",
        "Registers a Scala closure of 5 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 5 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.1.0",
        "Registers a Scala closure of 4 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 4 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.1.0",
        "Registers a Scala closure of 3 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 3 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.1.0",
        "Registers a Scala closure of 2 arguments as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 2 arguments as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.1.0",
        "Registers a Scala closure of 1 argument as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 1 argument as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.1.0",
        "Registers a Scala closure of 0 argument as a Snowflake Java UDF and returns the UDF.",
        "Registers a Scala closure of 0 argument as a Snowflake Java UDF and returns the UDF.",
        "return type of UDF.",
        "0.1.0",
        "Decodes a BASE64 encoded string column and returns it as a column.",
        "Decodes a BASE64 encoded string column and returns it as a column.\nExample",
        "the decoded value of the given encoded value.",
        "1.14.0",
        "Inverse of hex.",
        "Inverse of hex. Interprets each pair of characters as a hexadecimal number\nand converts to the byte representation of number.\nExample",
        "Column to encode.",
        "Encoded string.",
        "1.14.0",
        "Returns a uniformly random number, in the inclusive range (\n            \n             min\n            \n            ,\n            \n             max\n            \n            )",
        "Returns a uniformly random number, in the inclusive range (\n              \n               min\n              \n              ,\n              \n               max\n              \n              )",
        "For example:",
        "The lower bound",
        "The upper bound",
        "The generator expression for the function. for more information, see\n               \n                https://docs.snowflake.com/en/sql-reference/functions-data-generation.html#label-rand-dist-functions",
        "0.11.0",
        "Returns the current Unix timestamp (in seconds) as a long.",
        "Returns the current Unix timestamp (in seconds) as a long.\nExtracts a specified date or time portion from a date, time, or timestamp.\nhow:\nEXTRACT , HOUR / MINUTE / SECOND , YEAR* / DAY* / WEEK* / MONTH / QUARTER\nConstruction - DATE_PART( <date_or_time_part> , <date_or_time_expr> )\nSELECT TO_TIMESTAMP('2013-05-08T23:39:20.123-07:00') AS \"TIME_STAMP1\",\n DATE_PART(EPOCH_SECOND, \"TIME_STAMP1\") AS \"EXTRACTED EPOCH SECOND\";\n+-------------------------+------------------------+",
        "TIME_STAMP1",
        "EXTRACTED EPOCH SECOND",
        "2013-05-08 23:39:20.123",
        "1368056360",
        "+-------------------------+------------------------+",
        "1.14.0",
        "All calls of\n                \n                 unix_timestamp\n                \n                within the same query return the same value",
        "Returns the input string with all characters converted to uppercase.",
        "Returns the input string with all characters converted to uppercase.",
        "0.1.0",
        "Returns the population variance of non-NULL records in a group.",
        "Returns the population variance of non-NULL records in a group.\nIf all records inside a group are NULL, a NULL is returned.",
        "0.1.0",
        "Returns the sample variance of non-NULL records in a group.",
        "Returns the sample variance of non-NULL records in a group.\nIf all records inside a group are NULL, a NULL is returned.\nAlias of var_samp",
        "0.1.0",
        "Returns the sample variance of non-NULL records in a group.",
        "Returns the sample variance of non-NULL records in a group.\nIf all records inside a group are NULL, a NULL is returned.",
        "0.1.0",
        "Extracts the week of year from a date or timestamp.",
        "Extracts the week of year from a date or timestamp.",
        "0.1.0",
        "Works like a cascading if-then-else statement.",
        "Works like a cascading if-then-else statement.\nA series of conditions are evaluated in sequence.\nWhen a condition evaluates to TRUE, the evaluation stops and the associated\nresult (after THEN) is returned. If none of the conditions evaluate to TRUE,\nthen the result after the optional OTHERWISE is returned, if present;\notherwise NULL is returned.\nFor Example:",
        "0.2.0",
        "Extracts the first XML element object (often referred to as simply a tag) from a content of\nouter XML element object by the name of the tag",
        "Extracts the first XML element object (often referred to as simply a tag) from a content of\nouter XML element object by the name of the tag",
        "0.2.0",
        "Extracts an XML element object (often referred to as simply a tag) from a content of outer\nXML element object by the name of the tag and its instance number (counting from 0).",
        "Extracts an XML element object (often referred to as simply a tag) from a content of outer\nXML element object by the name of the tag and its instance number (counting from 0).",
        "0.2.0",
        "Extracts the year from a date or timestamp.",
        "Extracts the year from a date or timestamp.",
        "0.1.0"
    ]
}