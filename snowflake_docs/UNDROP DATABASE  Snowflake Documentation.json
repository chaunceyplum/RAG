{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/undrop-database",
    "title": "UNDROP DATABASE | Snowflake Documentation",
    "paragraphs": [
        "Restores the most recent version of a dropped database.",
        "Tip",
        "In addition to SQL, you can also use other interfaces, such as Snowflake REST APIs, Snowflake Python APIs, and Snowflake CLI.\nSee Alternate interfaces.",
        "CREATE DATABASE , ALTER DATABASE , DESCRIBE DATABASE , DROP DATABASE , SHOW DATABASES",
        "Specifies the identifier for the database to restore. If the identifier contains spaces or special characters, the entire string must be\nenclosed in double quotes. Identifiers enclosed in double quotes are also case-sensitive.",
        "If a database with the same name already exists, an error is returned.",
        "UNDROP relies on the Snowflake Time Travel feature. An object can be restored only if\nthe object was deleted within the Data retention period. The default value is 24 hours.",
        "Hybrid tables that belong to the specified database are not undropped.",
        "If you have multiple dropped databases with the same name, you can use the IDENTIFIER keyword\nwith the system-generated identifier (from the DATABASES view) to specify which database to\nrestore. The name of the restored database remains the same. See Examples.",
        "Note",
        "You can only use the system-generated identifier with the IDENTIFIER() keyword when executing the UNDROP command for tables,\nschemas, and databases.",
        "Restore the most recent version of a dropped database (this example builds on the DROP DATABASE examples):",
        "Restore a dropped database by ID using IDENTIFIER(). You can find the database ID of the specific database to restore using the\ndatabase_id column in the DATABASES view. For example, if you have multiple dropped\ndatabases named my_database, and you want to restore the second-to-last dropped database my_database, follow\nthese steps:",
        "Find the database ID of the dropped database in the Account Usage DATABASES view:",
        "Undrop my_database by database ID. To restore the second-to-last deleted database, use database ID 492 from the output of\nthe previous statement. After you execute the following statement, the database is restored with its original name, my_database:",
        "Snowflake REST APIs",
        "Undrop a database endpoint",
        "Snowflake Python APIs",
        "database.DatabaseResource.undrop method",
        "Snowflake CLI",
        "Not supported",
        "Was this page helpful?",
        "On this page"
    ]
}