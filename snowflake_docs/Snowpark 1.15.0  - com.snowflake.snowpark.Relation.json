{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/reference/scala/com/snowflake/snowpark/RelationalGroupedDataFrame.html#any_value(cols:com.snowflake.snowpark.Column*):com.snowflake.snowpark.DataFrame",
    "title": "Snowpark 1.15.0  - com.snowflake.snowpark.RelationalGroupedDataFrame",
    "paragraphs": [
        "This package contains all Snowpark logical types.",
        "This package contains all Snowpark logical types.",
        "0.1.0",
        "com\n        \n        .\n        \n         snowflake\n        \n        .\n        \n         snowpark",
        "Represents an underlying DataFrame with rows that are grouped by\ncommon values. Can be used to define aggregations on these grouped\nDataFrames.",
        "Example:",
        "The methods\n         \n          DataFrame.groupBy\n         \n         ,\n         \n          DataFrame.cube\n         \n         and\n         \n          DataFrame.rollup\n         \n         return an instance of type\n         \n          RelationalGroupedDataFrame",
        "0.1.0",
        "Returns a DataFrame with computed aggregates.",
        "Returns a DataFrame with computed aggregates. The first element\nof the 'expr' pair is the column to aggregate and the second\nelement is the aggregate function to compute.\nThe following example computes the mean of the price column and\nthe sum of the sales column.\nThe name of the aggregate function to compute must be a valid Snowflake\n              \n               aggregate function\n              \n              \"average\" and \"mean\" can be used to specify \"avg\".",
        "a\n               \n                DataFrame",
        "0.1.0",
        "Returns a DataFrame with aggregated computed according to the supplied\n            \n             Column\n            \n            expressions.",
        "Returns a DataFrame with aggregated computed according to the supplied\n              \n               Column\n              \n              expressions.\n              \n               com.snowflake.snowpark.functions\n              \n              contains some\nbuilt-in aggregate functions that can be used.",
        "a\n               \n                DataFrame",
        "0.9.0",
        "Returns a DataFrame with aggregated computed according to the supplied\n            \n             Column\n            \n            expressions.",
        "Returns a DataFrame with aggregated computed according to the supplied\n              \n               Column\n              \n              expressions.\n              \n               com.snowflake.snowpark.functions\n              \n              contains some\nbuilt-in aggregate functions that can be used.",
        "a\n               \n                DataFrame",
        "0.2.0",
        "Returns a DataFrame with aggregated computed according to the supplied\n            \n             Column\n            \n            expressions.",
        "Returns a DataFrame with aggregated computed according to the supplied\n              \n               Column\n              \n              expressions.\n              \n               com.snowflake.snowpark.functions\n              \n              contains some\nbuilt-in aggregate functions that can be used.",
        "a\n               \n                DataFrame",
        "0.1.0",
        "Returns a DataFrame with computed aggregates.",
        "Returns a DataFrame with computed aggregates. The first element\nof the 'expr' pair is the column to aggregate and the second\nelement is the aggregate function to compute.\nThe following example computes the mean of the price column and\nthe sum of the sales column.\nThe name of the aggregate function to compute must be a valid Snowflake\n              \n               aggregate function\n              \n              \"average\" and \"mean\" can be used to specify \"avg\".",
        "a\n               \n                DataFrame",
        "0.2.0",
        "Returns a DataFrame with computed aggregates.",
        "Returns a DataFrame with computed aggregates. The first element\nof the 'expr' pair is the column to aggregate and the second\nelement is the aggregate function to compute.\nThe following example computes the mean of the price column and\nthe sum of the sales column.\nThe name of the aggregate function to compute must be a valid Snowflake\n              \n               aggregate function\n              \n              \"average\" and \"mean\" can be used to specify \"avg\".",
        "a\n               \n                DataFrame",
        "0.1.0",
        "Returns non-deterministic values for the specified columns.",
        "Returns non-deterministic values for the specified columns.",
        "A\n               \n                DataFrame",
        "0.12.0",
        "Return the average for the specified numeric columns.",
        "Return the average for the specified numeric columns.",
        "a\n               \n                DataFrame",
        "0.4.0",
        "Computes the builtin aggregate 'aggName' over the specified columns.",
        "Computes the builtin aggregate 'aggName' over the specified columns.\nUse this function to invoke any aggregates not explicitly listed in this class.",
        "For example:",
        "the Name of an aggregate function.",
        "A\n               \n                DataFrame",
        "0.6.0",
        "Return the number of rows for each group.",
        "Return the number of rows for each group.",
        "A\n               \n                DataFrame",
        "0.1.0",
        "Return the max for the specified numeric columns.",
        "Return the max for the specified numeric columns.",
        "A\n               \n                DataFrame",
        "0.4.0",
        "Return the average for the specified numeric columns.",
        "Return the average for the specified numeric columns. Alias of avg",
        "a\n               \n                DataFrame",
        "0.4.0",
        "Return the median for the specified numeric columns.",
        "Return the median for the specified numeric columns.",
        "A\n               \n                DataFrame",
        "0.5.0",
        "Return the min for the specified numeric columns.",
        "Return the min for the specified numeric columns.",
        "A\n               \n                DataFrame",
        "0.1.0",
        "Return the sum for the specified numeric columns.",
        "Return the sum for the specified numeric columns.",
        "a\n               \n                DataFrame",
        "0.1.0"
    ]
}