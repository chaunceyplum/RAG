{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark-ml/reference/latest/api/model/snowflake.ml.model.ModelVersion",
    "title": "snowflake.ml.model.ModelVersion | Snowflake Documentation",
    "paragraphs": [
        "Bases: LineageNode",
        "Model Version Object representing a specific version of the model that could be run.",
        "Initializes a LineageNode instance.",
        "session \u2013 The Snowflake session object.",
        "name \u2013 Fully qualified name of the lineage node, which is in the format \u2018<db>.<schema>.<object_name>\u2019.",
        "domain \u2013 The domain of the lineage node.",
        "version \u2013 The version of the lineage node, if applies.",
        "status \u2013 The status of the lineage node. Possible values are:\n- \u2018MASKED\u2019: The user does not have the privilege to view the node.\n- \u2018DELETED\u2019: The node has been deleted.\n- \u2018ACTIVE\u2019: The node is currently active.",
        "created_on \u2013 The creation time of the lineage node.",
        "ValueError \u2013 If the name is not fully qualified.",
        "Methods",
        "Create an inference service with the given spec.",
        "service_name \u2013 The name of the service, can be fully qualified. If not fully qualified, the database or\nschema of the model will be used.",
        "image_build_compute_pool \u2013 The name of the compute pool used to build the model inference image. It uses\nthe service compute pool if None.",
        "service_compute_pool \u2013 The name of the compute pool used to run the inference service.",
        "image_repo \u2013 The name of the image repository, can be fully qualified. If not fully qualified, the database\nor schema of the model will be used.",
        "ingress_enabled \u2013 If true, creates an service endpoint associated with the service. User must have\nBIND SERVICE ENDPOINT privilege on the account.",
        "max_instances \u2013 The maximum number of inference service instances to run. The same value it set to\nMIN_INSTANCES property of the service.",
        "cpu_requests \u2013 The cpu limit for CPU based inference. Can be an integer, fractional or string values. If\nNone, we attempt to utilize all the vCPU of the node.",
        "memory_requests \u2013 The memory limit with for CPU based inference. Can be an integer or a fractional value, but\nrequires a unit (GiB, MiB). If None, we attempt to utilize all the memory of the node.",
        "gpu_requests \u2013 The gpu limit for GPU based inference. Can be integer, fractional or string values. Use CPU\nif None.",
        "num_workers \u2013 The number of workers to run the inference service for handling requests in parallel within an\ninstance of the service. By default, it is set to 2*vCPU+1 of the node for CPU based inference and 1 for\nGPU based inference. For GPU based inference, please see best practices before playing with this value.",
        "max_batch_rows \u2013 The maximum number of rows to batch for inference. Auto determined if None. Minimum 32.",
        "force_rebuild \u2013 Whether to force a model inference image rebuild.",
        "build_external_access_integration \u2013 (Deprecated) The external access integration for image build. This is\nusually permitting access to conda & PyPI repositories.",
        "build_external_access_integrations \u2013 The external access integrations for image build. This is usually\npermitting access to conda & PyPI repositories.",
        "block \u2013 A bool value indicating whether this function will wait until the service is available.\nWhen it is False, this function executes the underlying service creation asynchronously\nand returns an AsyncJob.",
        "ValueError \u2013 Illegal external access integration arguments.",
        "If block=True, return result information about service creation from server.\nOtherwise, return the service creation AsyncJob.",
        "Delete a metric from metric storage.",
        "metric_name \u2013 The name of the metric to be deleted.",
        "KeyError \u2013 When the requested metric name does not exist.",
        "Drops the given service.",
        "service_name \u2013 The name of the service, can be fully qualified. If not fully qualified, the database or\nschema of the model will be used.",
        "ValueError \u2013 If the service does not exist or operation is not permitted by user or service does not belong\nto this model.",
        "Export model files to a local directory.",
        "target_path \u2013 Path to a local directory to export files to. A directory will be created if does not exist.",
        "export_mode \u2013 The mode to export the model. Defaults to ExportMode.MODEL.\nExportMode.MODEL: All model files including environment to load the model and model weights.\nExportMode.FULL: Additional files to run the model in Warehouse, besides all files in MODEL mode,",
        "ValueError \u2013 Raised when the target path is a file or an non-empty folder.",
        "Get the value of a specific metric.",
        "metric_name \u2013 The name of the metric.",
        "KeyError \u2013 When the requested metric name does not exist.",
        "The value of the metric.",
        "Retrieves the lineage nodes connected to this node.",
        "direction \u2013 The direction to trace lineage. Defaults to \u201cdownstream\u201d.",
        "domain_filter \u2013 Set of domains to filter nodes. Defaults to None.",
        "A list of connected lineage nodes.",
        "List[LineageNode]",
        "This function or method is in private preview since 1.5.3.",
        "List all the service names using this model version.",
        "",
        "or schema of the model will be used.",
        "",
        "List of service_names",
        "This operation requires to have the exact the same environment as the one when logging the model, otherwise,\nthe model might be not functional or some other problems might occur.",
        "force \u2013 Bypass the best-effort environment validation. Defaults to False.",
        "options \u2013 Options to specify when loading the model, check snowflake.ml.model.type_hints for available\noptions. Defaults to None.",
        "ValueError \u2013 Raised when the best-effort environment validation fails.",
        "The original Python object loaded from the model object.",
        "Invoke a method in a model version object via the warehouse or a service.",
        "X \u2013 The input data, which could be a pandas DataFrame or Snowpark DataFrame.",
        "service_name \u2013 The service name. If None, the function is invoked via the warehouse. Otherwise, the function\nis invoked via the given service.",
        "function_name \u2013 The function name to run. It is the name used to call a function in SQL.",
        "partition_column \u2013 The partition column name to partition by.",
        "strict_input_validation \u2013 Enable stricter validation for the input data. This will result value range based\ntype validation to make sure your input data won\u2019t overflow when providing to the model.",
        "ValueError \u2013 When no method with the corresponding name is available.",
        "ValueError \u2013 When there are more than 1 target methods available in the model but no function name specified.",
        "ValueError \u2013 When the partition column is not a valid Snowflake identifier.",
        "The prediction data. It would be the same type dataframe as your input.",
        "Set alias to a model version.",
        "alias_name \u2013 Alias to the model version.",
        "Set the value of a specific metric.",
        "metric_name \u2013 The name of the metric.",
        "value \u2013 The value of the metric.",
        "Show all functions information in a model version that is callable.",
        "",
        "name: The name of the function to be called (both in SQL and in Python SDK).",
        "target_method: The original method name in the logged Python object.",
        "signature: Python signature of the original method.",
        "",
        "A list of ModelFunctionInfo objects containing the following information",
        "Show all metrics logged with the model version.",
        "A dictionary showing the metrics.",
        "unset alias to a model version.",
        "version_or_alias \u2013 The name of the version or alias to a version.",
        "Attributes",
        "The comment to the model version.",
        "The description for the model version. This is an alias of comment.",
        "Return the fully qualified name of the model to which the model version belongs.",
        "Return the name of the model to which the model version belongs, usable as a reference in SQL.",
        "Return the name of the version to which the model version belongs, usable as a reference in SQL.",
        "Was this page helpful?"
    ]
}