{
    "url": "https://docs.snowflake.com/en/sql-reference/functions/regexp",
    "title": "[ NOT ] REGEXP | Snowflake Documentation",
    "paragraphs": [
        "String functions (regular expressions)",
        "Performs a comparison to determine whether a string matches or does not match a specified pattern. Both inputs\nmust be text expressions.",
        "REGEXP is similar to the [ NOT ] LIKE function, but with POSIX extended regular expressions instead of SQL LIKE pattern syntax.\nIt supports more complex matching conditions than LIKE.",
        "Tip",
        "You can use the search optimization service to improve the performance of queries that call this function.\nFor details, see Search Optimization Service.",
        "[ NOT ] RLIKE (2nd syntax)",
        "See also: String functions (regular expressions)",
        "REGEXP_COUNT , REGEXP_INSTR , REGEXP_REPLACE , REGEXP_SUBSTR",
        "[ NOT ] ILIKE , [ NOT ] LIKE",
        "Required:",
        "The string to search for matches.",
        "Pattern to match.",
        "For guidelines on specifying patterns, see String functions (regular expressions).",
        "Returns a BOOLEAN or NULL.",
        "When REGEXP is specified, the value is TRUE if there is a match. Otherwise, returns FALSE.",
        "When NOT REGEXP is specified, the value is TRUE if there is no match. Otherwise, returns FALSE.",
        "When either REGEXP or NOT REGEXP is specified, returns NULL if any argument is NULL.",
        "The function implicitly anchors a pattern at both ends (for example, '' automatically becomes '^$', and 'ABC'\nautomatically becomes '^ABC$'). To match any string starting with ABC, the pattern would be 'ABC.*'.",
        "The backslash character (\\) is the escape character. For more information, see Specifying regular expressions in single-quoted string constants.",
        "For more usage notes, see the General usage notes for regular expression functions.",
        "Arguments with collation specifications currently aren\u2019t supported.",
        "The example below shows how to use REGEXP with a simple wildcard expression:",
        "Create a table and load data:",
        "Use wildcards to search for a pattern:",
        "The backslash character \\ is the escape character in regular expressions, and specifies special\ncharacters or groups of characters. For example, \\s is the regular expression for whitespace.",
        "The Snowflake string parser, which parses literal strings, also treats backslash as an escape character. For\nexample, a backslash is used as part of the sequence of characters that specifies a tab character. Thus to create a\nstring that contains a single backslash, you must specify two backslashes. For example, compare the string in\nthe input statement below with the corresponding string in the output:",
        "This example shows how to search for strings that start with San, where San is a complete word (for example, not\npart of Santa). \\b is the escape sequence for a word boundary.",
        "This example shows how to search for a blank followed by a backslash. Note that the single backslash to search for\nis represented by four backslashes below; for REGEXP to look for a literal backslash, that backslash must be\nescaped, so you need two backslashes. The string parser requires that each of those backslashes be escaped, so the\nexpression contains four backslashes to represent the one backslash that the expression is searching for:",
        "The following example is the same as the preceding example, except that it uses $$ as a string delimiter to tell the\nstring parser that the string is a literal and that backslashes should not be interpreted as escape sequences. (The\nbackslashes are still interpreted as escape sequences by REGEXP.)",
        "Was this page helpful?",
        "On this page"
    ]
}