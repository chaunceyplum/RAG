{
    "url": "https://docs.snowflake.com/en/sql-reference/functions/try_to_timestamp",
    "title": "TRY_TO_TIMESTAMP / TRY_TO_TIMESTAMP_* | Snowflake Documentation",
    "paragraphs": [
        "Conversion functions",
        "A special version of TO_TIMESTAMP / TO_TIMESTAMP_* that performs the same operation (i.e. converts an input expression into a timestamp), but with error-handling support (i.e. if the conversion cannot be performed, it returns a NULL value instead of raising an error).",
        "For more information, see Error-handling conversion functions.",
        "Note",
        "TRY_TO_TIMESTAMP maps to one of the other timestamp functions, based on the\nTIMESTAMP_TYPE_MAPPING session parameter. The parameter default\nis TIMESTAMP_NTZ so TRY_TO_TIMESTAMP maps to TRY_TO_TIMESTAMP_NTZ by default.",
        "TO_TIMESTAMP / TO_TIMESTAMP_*",
        "Where:",
        "Required:",
        "One of:",
        "A string that can be evaluated to a TIMESTAMP (TIMESTAMP_NTZ, TIMESTAMP_LTZ, or TIMESTAMP_TZ).",
        "An expression that evaluates to a string containing an integer, for example '15000000'. Depending\non the magnitude of the string, it can be interpreted as seconds, milliseconds, microseconds, or\nnanoseconds. For details, see the Usage Notes.",
        "Optional:",
        "Format specifier for string_expr or\nAUTO.\nFor more information, see Date and time formats in conversion functions.",
        "The default is the current value of the TIMESTAMP_INPUT_FORMAT\nsession parameter (default AUTO).",
        "The data type of the returned value is one of the TIMESTAMP data\ntypes. By default, the data type is TIMESTAMP_NTZ. You can change\nthis by setting the session parameter TIMESTAMP_TYPE_MAPPING.",
        "For timestamps with time zones, the setting of the TIMEZONE parameter affects the return value. The returned\ntimestamp is in the time zone for the session.",
        "The display format for timestamps in the output is determined by the timestamp output format that corresponds with the\nfunction (TIMESTAMP_OUTPUT_FORMAT, TIMESTAMP_LTZ_OUTPUT_FORMAT, TIMESTAMP_NTZ_OUTPUT_FORMAT,\nor TIMESTAMP_TZ_OUTPUT_FORMAT).",
        "If the format of the input parameter is a string that contains an integer:",
        "After the string is converted to an integer, the integer is treated as a number of seconds, milliseconds,\nmicroseconds, or nanoseconds after the start of the Unix epoch (1970-01-01 00:00:00.000000000 UTC).",
        "If the integer is less than 31536000000 (the number of milliseconds in a year), then the value is treated as\na number of seconds.",
        "If the value is greater than or equal to 31536000000 and less than 31536000000000, then the value is treated\nas milliseconds.",
        "If the value is greater than or equal to 31536000000000 and less than 31536000000000000, then the value is\ntreated as microseconds.",
        "If the value is greater than or equal to 31536000000000000, then the value is\ntreated as nanoseconds.",
        "If more than one row is evaluated (for example, if the input is the column name of a table that contains more than\none row), each value is examined independently to determine if the value represents seconds, milliseconds, microseconds, or\nnanoseconds.",
        "When you use the TO_TIMESTAMP_NTZ or TRY_TO_TIMESTAMP_NTZ function to convert a timestamp with time zone information, the time zone\ninformation is lost. If the timestamp is then converted back to a timestamp with time zone information (by using\nthe TO_TIMESTAMP_TZ function for example), the time zone information is not recoverable.",
        "This example uses TRY_TO_TIMESTAMP:",
        "See TO_TIMESTAMP / TO_TIMESTAMP_* for examples that convert an input expression to a timestamp.",
        "Was this page helpful?",
        "On this page"
    ]
}