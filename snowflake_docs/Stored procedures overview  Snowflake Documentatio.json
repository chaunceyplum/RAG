{
    "url": "https://docs.snowflake.com/en/developer-guide/stored-procedure/stored-procedures-overview",
    "title": "Stored procedures overview | Snowflake Documentation",
    "paragraphs": [
        "You can write stored procedures to extend the system with procedural code that executes SQL. In a stored procedure, you can use programmatic\nconstructs to perform branching and looping. Once you create a stored procedure, you can reuse it multiple times.",
        "You write a procedure\u2019s logic \u2013 its handler \u2013 in one of the supported languages. Once\nyou have a handler, you can create a procedure with a CREATE PROCEDURE command, then\ncall the procedure with a CALL statement.",
        "From a stored procedure, you can return a single value or (where supported with the handler language) tabular data. For more information\nabout supported return types, see CREATE PROCEDURE.",
        "Note",
        "To both create and call an anonymous procedure, use CALL (with anonymous procedure). Creating and calling an anonymous procedure does\nnot require a role with CREATE PROCEDURE schema privileges.",
        "Note",
        "A stored procedure is like a UDF, but the two differ in important ways. For more information, see\nChoosing whether to write a stored procedure or a user-defined function.",
        "A stored procedure contains logic you write so you can call it from SQL. A stored procedure\u2019s logic typically performs database operations\nby executing SQL statements.",
        "With a stored procedure, you can also:",
        "Dynamically create and execute SQL statements.",
        "Execute code with the privileges of the role that owns the procedure, rather than with the privileges of the role that runs the procedure.",
        "This allows the stored procedure owner to delegate the power to perform specified operations to users who otherwise could not do so.\nHowever, there are limitations on these owner\u2019s rights stored procedures.",
        "You might want to use a stored procedure to automate a task that requires multiple SQL statements and is performed frequently.\nFor example, imagine that you want to clean up a database by deleting data older than a specified date. You can write multiple DELETE\nstatements, each of which deletes data from a specific table. You can put all of those statements in a single stored procedure and pass a\nparameter that specifies the cut-off date. Then you can simply call the procedure to clean up the database. As your database changes, you\ncan update the procedure to clean up additional tables; if there are multiple users who use the cleanup command, they can call one\nprocedure, rather than remember every table name and clean up each table individually.",
        "Code in the following example creates a stored procedure called myproc with a Python handler called run.",
        "Code in the following example calls the stored procedure myproc.",
        "You write a procedure\u2019s handler \u2013 its logic \u2013 in any of several programming languages. Each language allows you to manipulate data\nwithin the constraints of the language and its runtime environment. Regardless of the handler language, you create the procedure itself in\nthe same way using SQL, specifying your handler and handler language.",
        "You can write a handler in any of the following languages:",
        "Language",
        "Developer Guide",
        "Java (using the Snowpark API)",
        "Writing stored procedures in Java",
        "JavaScript",
        "Writing stored procedures in JavaScript",
        "Python (using the Snowpark API)",
        "Writing stored procedures in Python",
        "Scala (using the Snowpark API)",
        "Writing stored procedures in Scala",
        "Snowflake Scripting (SQL)",
        "Writing stored procedures in Snowflake Scripting",
        "You write a procedure\u2019s handler \u2013 its logic \u2013 in any of several programming languages. Each language allows you to manipulate data within\nthe constraints of the language and its runtime environment.",
        "You might choose a particular language if:",
        "You already have code in that language.",
        "For example, if you already have a Java method that will work as a handler, and the method\u2019s object is in a .jar file, you could copy\nthe .jar to a stage, specify the handler as the class and method, then specify the language as Java.",
        "The language has capabilities that others don\u2019t have.",
        "The language has libraries that can help you do the processing that you need to do.",
        "When choosing a language, consider also the handler locations supported. Not all languages support referring to the handler on a stage\n(the handler code must instead be in-line). For more information, see Keeping handler code in-line or on a stage.",
        "Language",
        "Handler Location",
        "Java",
        "In-line or staged",
        "JavaScript",
        "In-line",
        "Python",
        "In-line or staged",
        "Scala",
        "In-line or staged",
        "Snowflake Scripting",
        "In-line",
        "For tips on writing stored procedures, see Working with stored procedures.",
        "You can ensure stability within the Snowflake environment by developing within Snowflake constraints. For more information, see\nDesigning Handlers that Stay Within Snowflake-Imposed Constraints.",
        "Be sure to name procedures in a way that avoids collisions with other procedures. For more information, see\nNaming and overloading procedures and UDFs.",
        "Specify the arguments for your stored procedure and indicate which arguments are optional. For more information, see\nDefining arguments for UDFs and stored procedures.",
        "For each handler language, there\u2019s a separate set of mappings between the language\u2019s data types and the SQL types used for arguments and\nreturn values. For more about the mappings for each language, see Data Type Mappings Between SQL and Handler Languages.",
        "For language-specific content on writing a handler, see Supported languages.",
        "You can access external network locations with\nexternal network access. You can create secure\naccess to specific network locations external to Snowflake, then use that access from within the handler code.",
        "You can record code activity by capturing log messages and trace events,\nstoring the data in a database you can query later.",
        "Whether you choose to have a stored procedure run with caller\u2019s rights or owner\u2019s rights can impact the information it has access to and\nthe tasks it may be allowed to perform. For more information, see Understanding caller\u2019s rights and owner\u2019s rights stored procedures.",
        "Stored procedures share certain security concerns with user-defined functions (UDFs). For more information, see the following:",
        "You can help a procedure\u2019s handler code execute securely by following the best practices described in\nSecurity Practices for UDFs and Procedures",
        "Ensure that sensitive information is concealed from users who should not have access to it. For more information, see\nProtecting Sensitive Information with Secure UDFs and Stored Procedures",
        "When creating a procedure, you can specify its handler \u2013 which implements the procedure\u2019s logic \u2013 as code in-line with the CREATE\nPROCEDURE statement or as code external to the statement, such as compiled code packaged and copied to a stage.",
        "For more information, see Keeping handler code in-line or on a stage.",
        "You use SQL to create and call a procedure.",
        "Once you have written handler code, you can create a stored procedure by executing the CREATE PROCEDURE statement, specifying the\nprocedure\u2019s handler. For more information, see Creating a stored procedure.",
        "To call a procedure, execute a SQL CALL statement that specifies the procedure. For more information, see\nCalling a stored procedure.",
        "To create a temporary procedure that executes only once and is discarded, use WITH\u2026CALL . For more information, see\nCALL (with anonymous procedure).",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}