{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-python-api/reference/latest/_autosummary/snowflake.core.warehouse.WarehouseResource",
    "title": "snowflake.core.warehouse.WarehouseResource | Snowflake Documentation",
    "paragraphs": [
        "Bases: ObjectReferenceMixin[WarehouseCollection]",
        "Represents a reference to a Snowflake warehouse.",
        "With this warehouse reference, you can create, update, and fetch information about warehouses, as well\nas perform certain actions on them.",
        "Attributes",
        "Methods",
        "Abort all queries running or queueing on this warehouse.",
        "if_exists (bool, optional) \u2013 If set to True, the function will not throw an error if the warehouse does not exist.\nThe default is None, which is equivalent to False.",
        "Examples",
        "Using a warehouse reference to abort all queries, erroring if it does not exist:",
        "Using a warehouse reference to abort all queries, if it exists:\n>>> warehouse = warehouse_reference.abort_all_queries(if_exists=True)",
        "Create a warehouse in Snowflake or alter one if it already exists.",
        "warehouse (Warehouse) \u2013 An instance of Warehouse.",
        "Examples",
        "Creating or updating a warehouse in Snowflake:",
        "# Using a WarehouseCollection to create or update a warehouse in Snowflake:\n>>> root.warehouses[\u201cyour-warehouse-name\u201d].create_or_alter(warehouse_parameters)",
        "The create_or_update method is deprecated; use create_or_alter instead.",
        "The delete method is deprecated; use drop instead.",
        "Drop this warehouse.",
        "if_exists (bool, optional) \u2013 If set to True, the function will not throw an error if the warehouse does not exist.\nThe default is None, which is equivalent to False.",
        "Examples",
        "Dropping a warehouse using its reference, erroring if it does not exist:",
        "Dropping a warehouse using its reference, if it exists:",
        "Fetch the details of a warehouse.",
        "Examples",
        "Fetching a warehouse using its reference:",
        "# Accessing information of the warehouse with warehouse instance.\n>>> print(warehouse.name, warehouse.warehouse_size)",
        "Rename this warehouse.",
        "This function will ignore other parameters in warehouse instance; use create_or_update() to update parameters.",
        "new_name (Warehouse) \u2013 An instance of Warehouse.",
        "if_exists (bool, optional) \u2013 If set to True, the function will not throw an error if the warehouse does not exist.\nThe default is None, which is equivalent to False.",
        "Examples",
        "Using a warehouse reference to rename a warehouse in Snowflake, erroring if it does not exist:\n>>>  warehouse_reference.rename(\u201cnew_wh_name\u201d)",
        "Using a warehouse reference to rename a warehouse in Snowflake, if it exists:\n>>>  warehouse_reference.rename(\u201cnew_wh_name\u201d, if_exists=True)",
        "Resume the warehouse.",
        "if_exists (bool, optional) \u2013 If set to True, the function will not throw an error if the warehouse does not exist.\nThe default is None, which is equivalent to False.",
        "Examples",
        "Using a warehouse reference to resume a warehouse, erroring if it does not exist:",
        "Using a warehouse reference to resume a warehouse if it exists:",
        "Suspend the warehouse.",
        "if_exists (bool, optional) \u2013 Check the existence of this warehouse before suspending it.\nDefault is None, which is equivalent to False.",
        "Examples",
        "Using a warehouse reference to suspend a warehouse, erroring if it does not exist:",
        "Using a warehouse reference to suspend a warehouse if it exists:",
        "Use this warehouse as the current warehouse.",
        "Examples",
        "Using a warehouse reference to set the current active warehouse:",
        "Was this page helpful?"
    ]
}