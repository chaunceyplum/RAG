{
    "url": "https://docs.snowflake.com/en/user-guide/dynamic-tables-create",
    "title": "Create dynamic tables | Snowflake Documentation",
    "paragraphs": [
        "This topic outlines the key concepts for creating dynamic tables and what occurs during the\ninitialization process.",
        "Before you begin, ensure you have the\nprivileges for creating dynamic tables,\nand all objects used by the dynamic table query have\nchange tracking enabled.",
        "Some limitations might apply to creating dynamic tables. For a complete list, see\nKnown limitations for dynamic tables.",
        "When creating a dynamic table with incremental refresh mode, if change tracking is not already enabled\non the tables that it queries, Snowflake automatically attempts to enable change tracking on them.\nIn order to support incremental refreshes, change tracking must be enabled with\nnon-zero time travel retention on all underlying objects\nused by a dynamic table. As underlying database objects change, so does the dynamic table. If you\nrecreate an object, you must re-enable change tracking.",
        "Note",
        "Snowflake doesn\u2019t automatically attempt to enable change tracking on dynamic tables created with full\nrefresh mode.",
        "To enable change tracking on a specific database object, use ALTER TABLE,\nALTER VIEW, and similar commands on that object. The user creating the\ndynamic table must have the OWNERSHIP privilege to enable change tracking on all underlying objects.\nTo check if change tracking is enabled, use SHOW VIEWS,\nSHOW TABLES, and similar commands on the underlying objects, and inspect\nthe change_tracking column.",
        "Suppose that you want to create a dynamic table named product that contains the product_id and\nproduct_name columns from the table named staging_table, and you decide:",
        "You want the data in the product table to be at most 20 minutes behind the data in staging_table.",
        "You want to use the warehouse mywh for the compute resources needed for the refresh.",
        "You want the refresh mode to be automatically chosen.",
        "Snowflake recommends using the automatic refresh mode only during development. For more information,\nsee Set the refresh mode for all production dynamic tables.",
        "You want the dynamic table to refresh synchronously at creation.",
        "You want the refresh mode to be automatically chosen, and you want the dynamic table to refresh synchronously at creation.",
        "To create this dynamic table, you would execute the following\nCREATE DYNAMIC TABLE SQL statement:",
        "For a complete list of parameters and variant syntax, see the\nCREATE DYNAMIC TABLE reference.",
        "When you create a dynamic table using a CREATE DYNAMIC TABLE statement, its initial refresh\ntakes place either at a scheduled time or synchronously at creation. The initial data population,\nor initialization, depends on when this initial refresh occurs.",
        "Dynamic tables undergo refresh based on the specified target lag,\nwhich sets the maximum allowed time for the dynamic table\u2019s content to lag behind updates to\nthe base tables. If you specify a dynamic table to refresh synchronously at creation, it is\ninitialized immediately. However, if a dynamic table is set to refresh at a scheduled time, it is\ninitialized within the time specified for the target lag.",
        "For example, consider a dynamic table, DT1,with a target lag of 30 minutes. The initial data\npopulation for DT1 can occur as follows:",
        "If DT1 is set to refresh synchronously at creation (default), it initializes upon creation.",
        "If DT1 is set to refresh at a scheduled time, it initializes within the time specified for the target lag.",
        "In scenarios involving downstream dependencies, the dynamics change. Consider dynamic tables\nDT1 and D2, where DT1 has downstream target lag,\nand DT2 has a target lag of 30 minutes and depends on DT1. DT1, with its downstream target lag,\nrefreshes only when dependent dynamic tables, such as DT2, refresh.",
        "For DT1 in this context:",
        "If set to refresh synchronously at creation, it refreshes and initializes upon creation. If initialization fails, the table creation process halts, providing immediate feedback on any incorrect definitions.",
        "If configured to refresh at a scheduled time, initialization depends on when DT2, the dependent table, undergoes refresh.",
        "Initialization can take some time, depending on how much data is scanned. To track progress,\nyou can query the refresh history using the DYNAMIC_TABLE_REFRESH_HISTORY\nfunction.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}