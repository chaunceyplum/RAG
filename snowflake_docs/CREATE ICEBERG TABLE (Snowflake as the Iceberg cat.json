{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table-snowflake",
    "title": "CREATE ICEBERG TABLE (Snowflake as the Iceberg catalog) | Snowflake Documentation",
    "paragraphs": [
        "Creates or replaces an Apache Iceberg\u2122 table that uses\nSnowflake as the Iceberg catalog\nin the current/specified schema.",
        "This command supports the following variants:",
        "CREATE ICEBERG TABLE \u2026 AS SELECT (creates a populated table; also referred to as CTAS)",
        "CREATE ICEBERG TABLE \u2026 LIKE (creates an empty copy of an existing table)",
        "This topic refers to Iceberg tables as simply \u201ctables\u201d except where specifying Iceberg tables avoids confusion.",
        "Note",
        "Before creating a table, you must create the external volume where the Iceberg metadata\nand data files are stored.\nFor instructions, see Configure an external volume.",
        "ALTER ICEBERG TABLE , DROP ICEBERG TABLE , SHOW ICEBERG TABLES , DESCRIBE ICEBERG TABLE , UNDROP ICEBERG TABLE",
        "Where:",
        "For additional inline constraint details, see CREATE | ALTER TABLE \u2026 CONSTRAINT.",
        "Note",
        "Snowflake represents columns defined as PRIMARY KEY as identifier fields in the Iceberg metadata. The IDs for these columns are populated\nin the metadata as identifier field IDs.",
        "Snowflake doesn\u2019t enforce NOT NULL and UNIQUE constraints on PRIMARY KEY columns for Iceberg tables.",
        "For additional out-of-line constraint details, see CREATE | ALTER TABLE \u2026 CONSTRAINT.",
        "Creates a new table populated with the data returned by a query. Place the AS SELECT clause at the end of the statement.",
        "A masking policy can be applied to a column in a CTAS statement. Specify the masking policy after the column data type. Similarly, a\nrow access policy can be applied to the table. For example:",
        "Note",
        "In a CTAS, the COPY GRANTS parameter is valid only when combined with the OR REPLACE clause. COPY GRANTS copies\nprivileges from the table being replaced with CREATE OR REPLACE (if it already exists), not from the source\ntable(s) being queried in the SELECT statement. CTAS with COPY GRANTS lets you overwrite a table with a new\nset of data while keeping existing grants on that table.",
        "For more information about the COPY GRANTS parameter, see COPY GRANTS in this document.",
        "For more information about this variant syntax, see the usage notes.",
        "Creates a new table with the same column definitions as an existing table, but without copying data from the existing table. Column\nnames, types, defaults, and constraints are copied to the new table:",
        "For more information about the COPY GRANTS parameter, see COPY GRANTS in this document.",
        "Note",
        "CREATE TABLE \u2026 LIKE isn\u2019t supported for tables with an auto-increment sequence accessed through a data share.",
        "For more information about this variant syntax, see the usage notes.",
        "Preview Feature \u2014 Open",
        "Available to all accounts.",
        "Creates a new Iceberg table with the same column definitions and containing all the existing data from the source table, without actually\ncopying the data. You can also use this variant to clone a table at a specific time or point in the past (using\nTime Travel):",
        "Note",
        "If the statement replaces an existing Iceberg table of the same name, Snowflake copies the grants from the table\nbeing replaced. If there is no existing table of that name, Snowflake copies the grants from the source table\nbeing cloned.",
        "For more information about the COPY GRANTS parameter, see COPY GRANTS in this document.",
        "For more information about cloning, see CREATE <object> \u2026 CLONE and Cloning and Apache Iceberg\u2122 tables.",
        "Specifies the identifier (name) for the table; must be unique for the schema in which the table is created.",
        "In addition, the identifier must start with an alphabetic character and cannot contain spaces or special characters unless the\nentire identifier string is enclosed in double quotes (for example, \"My object\"). Identifiers enclosed in double quotes are also\ncase-sensitive.",
        "For more information, see Identifier requirements.",
        "Specifies the column identifier (name). All the requirements for table identifiers also apply to column identifiers.",
        "For more information, see Identifier requirements and Reserved & limited keywords.",
        "Note",
        "In addition to the standard reserved keywords, the following keywords cannot be used as column identifiers because they are\nreserved for ANSI-standard context functions:",
        "CURRENT_DATE",
        "CURRENT_ROLE",
        "CURRENT_TIME",
        "CURRENT_TIMESTAMP",
        "CURRENT_USER",
        "For the list of reserved keywords, see Reserved & limited keywords.",
        "Specifies the data type for the column.",
        "For information about the data types that can be specified for table columns, see Data types for Apache Iceberg\u2122 tables.",
        "Note",
        "You can\u2019t use float or double as primary keys (in accordance with the\nApache Iceberg spec).",
        "The path to a directory where Snowflake can write data and metadata files for the table.\nSpecify a relative path from the table\u2019s EXTERNAL_VOLUME location.\nFor more information, see Data and metadata directories.",
        "This directory can\u2019t be changed after you create a table.",
        "Defines an inline or out-of-line constraint for the specified column(s) in the table.",
        "For syntax information, see CREATE | ALTER TABLE \u2026 CONSTRAINT. For more information about constraints, see Constraints.",
        "Specifies whether a default value is automatically inserted in the column if a value is not explicitly specified via an INSERT\nor CREATE TABLE AS SELECT statement:",
        "Column default value is defined by the specified expression, which can be any of the following:",
        "Constant value.",
        "Sequence reference (seq_name.NEXTVAL).",
        "Simple expression that returns a scalar value.",
        "The simple expression can include a SQL UDF (user-defined function) if the UDF is not a\nsecure UDF.",
        "Note",
        "If a default expression refers to a SQL UDF, then the function is replaced by the function\ndefinition at table creation time. If the user-defined function is redefined in the future, this doesn\u2019t\nupdate the column\u2019s default expression.",
        "The simple expression cannot contain references to:",
        "Subqueries.",
        "Aggregates.",
        "Window functions.",
        "Secure UDFs.",
        "UDFs written in languages other than SQL (for example, Java, JavaScript).",
        "External functions.",
        "AUTOINCREMENT and IDENTITY are synonymous.\nWhen either is used, the default value for the column starts with a specified number and each successive\nvalue automatically increments by the specified amount.",
        "Caution",
        "Snowflake uses a sequence to generate the values for an auto-incremented column. Sequences have limitations;\nsee Sequence Semantics.",
        "The default value for both start and step/increment is 1.",
        "AUTOINCREMENT and IDENTITY can be used only for columns with numeric data types.",
        "Default: No value (the column has no default value)",
        "Note",
        "DEFAULT and AUTOINCREMENT are mutually exclusive; only one can be specified for a column.",
        "Specifies the masking policy to set on a column.",
        "Specifies the projection policy to set on a column.",
        "Specifies a comment for the column.",
        "(Note that comments can be specified at the column level or the table level. The syntax for each is slightly different.)",
        "Specifies the arguments to pass into the SQL expression for the conditional masking policy.",
        "The first column in the list specifies the column for the policy conditions to mask or tokenize the data and must match the\ncolumn to which the masking policy is set.",
        "The additional columns specify the columns to evaluate to determine whether to mask or tokenize the data in each row of the query result\nwhen a query selects from the first column.",
        "If the USING clause is omitted, Snowflake treats the conditional masking policy as a normal\nmasking policy.",
        "Specifies one or more columns or column expressions in the table as the clustering key. For more information, see\nClustering Keys & Clustered Tables.",
        "Default: No value (no clustering key is defined for the table)",
        "Important",
        "Clustering keys are not intended or recommended for all tables; they typically benefit very large (that is, multi-terabyte)\ntables.",
        "Before you specify a clustering key for a table, you should understand micro-partitions.\nFor more information, see Understanding Snowflake Table Structures.",
        "Specifies the identifier (name) for the external volume where the Iceberg table stores its metadata files and data in Parquet\nformat. Iceberg metadata and manifest files store the table schema, partitions, snapshots, and other metadata.",
        "If you don\u2019t specify this parameter, the Iceberg table defaults to the external volume for the schema, database, or account.\nThe schema takes precedence over the database, and the database takes precedence over the account.",
        "Specifies Snowflake as the Iceberg catalog. Snowflake handles all life-cycle maintenance, such as compaction, for the table.",
        "Optionally specifies the name of a catalog integration configured for Snowflake Open Catalog. If specified, Snowflake syncs\nthe table with an external catalog in your Snowflake Open Catalog account. For more information, see Sync a Snowflake-managed table with Snowflake Open Catalog.",
        "Specifies the storage serialization policy for the table.\nIf not specified at table creation, the table inherits the value set at the schema, database, or account level. If the value isn\u2019t\nspecified at any level, the table uses the default value.",
        "You can\u2019t change the value of this parameter after table creation.",
        "COMPATIBLE: Snowflake performs encoding and compression that ensures interoperability with third-party compute engines.",
        "OPTIMIZED: Snowflake performs encoding and compression that ensures the best table performance within Snowflake.",
        "Default: OPTIMIZED",
        "Specifies the retention period for a Snowflake-managed table so that Time Travel actions (SELECT, CLONE, UNDROP) can be performed on historical\ndata in the table. For more information, see Understanding & using Time Travel.",
        "For a detailed description of this object-level parameter, as well as more information about object parameters, see\nParameters.",
        "Values:",
        "Standard Edition: 0 or 1",
        "Enterprise Edition: 0 to 90 for permanent tables",
        "Default:",
        "Standard Edition: 1",
        "Enterprise Edition (or higher): 1 (unless a different default value was specified at the schema, database, or account level)",
        "Note",
        "A value of 0 effectively disables Time Travel for the table.",
        "Object parameter that specifies the maximum number of days for which Snowflake can extend the data retention period for the table to\nprevent streams on the table from becoming stale.",
        "For a detailed description of this parameter, see MAX_DATA_EXTENSION_TIME_IN_DAYS.",
        "Specifies whether to enable change tracking on the table.",
        "TRUE enables change tracking on the table. This setting adds a pair of hidden columns to the source table and begins\nstoring change tracking metadata in the columns. These columns consume a small amount of storage.",
        "The change tracking metadata can be queried using the CHANGES clause for\nSELECT statements, or by creating and querying one or more streams on the table.",
        "FALSE does not enable change tracking on the table.",
        "Default: FALSE",
        "Specifies to retain the access privileges from the original table when a new table is created using any of the following\nCREATE TABLE variants:",
        "CREATE OR REPLACE TABLE",
        "CREATE TABLE \u2026 LIKE",
        "CREATE TABLE \u2026 CLONE",
        "The parameter copies all privileges, except OWNERSHIP, from the existing table to the new table. The new table does not\ninherit any future grants defined for the object type in the schema. By default, the role that executes the CREATE TABLE statement\nowns the new table.",
        "If the parameter is not included in the CREATE ICEBERG TABLE statement, then the new table does not inherit any explicit access\nprivileges granted on the original table, but does inherit any future grants defined for the object type in the schema.",
        "Note:",
        "With data sharing:",
        "If the existing table was shared to another account, the replacement table is also shared.",
        "If the existing table was shared with your account as a data consumer, and access was further granted to other roles in\nthe account (using GRANT IMPORTED PRIVILEGES on the parent database), access is also granted to the replacement\ntable.",
        "The SHOW GRANTS output for the replacement table lists the grantee for the copied privileges as the\nrole that executed the CREATE ICEBERG TABLE statement, with the current timestamp when the statement was executed.",
        "The operation to copy grants occurs atomically in the CREATE ICEBERG TABLE command (that is, within the same transaction).",
        "Specifies a comment. You can specify a comment at the column level or the table level.\nThe syntax for each is slightly different.",
        "Default: No value",
        "Specifies the row access policy to set on a table.",
        "Specifies the aggregation policy to set on a table.",
        "Specifies the tag name and the tag string value.",
        "The tag value is always a string, and the maximum number of characters for the tag value is 256.",
        "For information about specifying tags in a statement, see Tag quotas for objects and columns.",
        "A role used to execute this SQL command must have the following\nprivileges at a minimum:",
        "Privilege",
        "Object",
        "Notes",
        "CREATE ICEBERG TABLE",
        "Schema",
        "CREATE EXTERNAL VOLUME",
        "Account",
        "Required to create a new external volume.",
        "USAGE",
        "External Volume",
        "Required to reference an existing external volume.",
        "The USAGE privilege on the parent database and schema are required to perform operations on any object in a schema.",
        "For instructions on creating a custom role with a specified set of privileges, see Creating custom roles.",
        "For general information about roles and privilege grants for performing SQL actions on\nsecurable objects, see Overview of Access Control.",
        "Considerations for running this command:",
        "Cross-cloud and cross-region Iceberg tables are not currently supported when you use Snowflake as the Iceberg catalog.\nIf CREATE ICEBERG TABLE returns an error message like \"External volume <volume_name> must have a STORAGE_LOCATION\ndefined in the local region ...\", make sure that your external volume uses an active storage location\nin the same region as your Snowflake account.",
        "If you created your external volume using a double-quoted identifier,\nyou must specify the identifier exactly as created (including the double quotes) in your CREATE ICEBERG TABLE statement.\nFailure to include the quotes might result in an Object does not exist error (or\nsimilar type of error).",
        "To view an example, see the Examples (in this topic) section.",
        "Creating an Iceberg table with the USING TEMPLATE clause (and\ncolumn definitions derived from INFER_SCHEMA output) isn\u2019t supported.",
        "Considerations for creating tables:",
        "A schema cannot contain tables and/or views with the same name. When creating a table:",
        "If a view with the same name already exists in the schema, an error is returned and the table is not created.",
        "If a table with the same name already exists in the schema, an error is returned and the table is not created, unless the optional\nOR REPLACE keyword is included in the command.",
        "CREATE OR REPLACE <object> statements are atomic. That is, when an object is replaced, the old object is deleted and the new object is created in a single transaction.",
        "This means that any queries concurrent with the CREATE OR REPLACE ICEBERG TABLE operation use either the old or new table version.",
        "Similar to reserved keywords, ANSI-reserved function names\n(CURRENT_DATE, CURRENT_TIMESTAMP, etc.) cannot be used as column names.",
        "Recreating a table (using the optional OR REPLACE keyword) drops its history, which makes any stream on the table stale. A stale\nstream is unreadable.",
        "Using variant syntax:",
        "CREATE ICEBERG TABLE \u2026 LIKE:",
        "If the source table has clustering keys then the new table has clustering keys. By default, Automatic Clustering is not\nsuspended for the new table even if Automatic Clustering was suspended for the source table.",
        "CREATE ICEBERG TABLE \u2026 AS SELECT (CTAS):",
        "When clustering keys are specified in a CTAS statement:",
        "Column definitions are required and must be explicitly specified in the statement.",
        "By default, Automatic Clustering is not suspended for the new table \u2013 even if Automatic Clustering is suspended for the\nsource table.",
        "If you want the table to be created with rows in a specific order, then use an ORDER BY sub-clause in the SELECT clause of the\nCTAS. Specifying CLUSTER BY does not cluster the data at the time that the table is created; instead, CLUSTER BY relies on\nautomatic clustering to recluster the data over time.",
        "The ORDER BY sub-clause in a CREATE TABLE statement does not affect the order of the rows returned by future SELECT statements\non that table. To specify the order of rows in future SELECT statements, use an ORDER BY sub-clause in those statements.",
        "Regarding metadata:",
        "Attention",
        "Customers should ensure that no personal data (other than for a User object), sensitive data, export-controlled data, or other regulated data is entered as metadata when using the Snowflake service. For more information, see Metadata fields in Snowflake.",
        "If you\u2019re creating a table that you will sync with Snowflake Open Catalog, keep the following in mind:",
        "Important",
        "To ensure that access privileges in Open Catalog are enforced correctly on the table, make sure the table meets certain conditions\nbefore creating it. These conditions relate to the directory structure hierarchy for the catalog. For these conditions and instructions on\nhow to meet them, see the note in\nOrganize catalog content\nin the Snowflake Open Catalog documentation.",
        "To troubleshooting issues with creating a Snowflake-managed table, see You can\u2019t create a Snowflake-managed table.",
        "This example creates an Iceberg table with Snowflake as the Iceberg catalog.\nThe resulting table is managed by Snowflake and supports read and write access.",
        "The example sets the table name (my_iceberg_table) as the BASE_LOCATION. This way,\nSnowflake writes data and metadata to a directory with the same name as the table in your external volume\nlocation.",
        "This example use the CREATE ICEBERG TABLE \u2026 AS SELECT variant syntax to create a new Iceberg table from a table named\nbase_iceberg_table. The AS SELECT clause must be at the end of the statement.",
        "This example creates an Iceberg table with an external volume whose identifier contains double quotes.\nIdentifiers enclosed in double quotes are case-sensitive and often contain special characters.",
        "The identifier \"external_volume_1\" is specified exactly as created (including the double quotes).\nFailure to include the quotes might result in an Object does not exist error (or similar type of error).",
        "To learn more, see Double-quoted identifiers.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}