{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/reference/scala/com/snowflake/snowpark/MergeBuilder.html#async:com.snowflake.snowpark.MergeBuilderAsyncActor",
    "title": "Snowpark 1.15.0  - com.snowflake.snowpark.MergeBuilder",
    "paragraphs": [
        "This package contains all Snowpark logical types.",
        "This package contains all Snowpark logical types.",
        "0.1.0",
        "com\n        \n        .\n        \n         snowflake\n        \n        .\n        \n         snowpark",
        "Builder for a merge action. It provides APIs to build matched and not matched clauses.",
        "0.7.0",
        "Returns a\n            \n             MergeBuilderAsyncActor\n            \n            object that can be used to execute\nMergeBuilder actions asynchronously.",
        "Returns a\n              \n               MergeBuilderAsyncActor\n              \n              object that can be used to execute\nMergeBuilder actions asynchronously.",
        "Example:",
        "A\n               \n                MergeBuilderAsyncActor\n               \n               object",
        "1.3.0",
        "Executes the merge action and returns a\n            \n             MergeResult\n            \n            , representing number of rows inserted,\nupdated and deleted by this merge action.",
        "Executes the merge action and returns a\n              \n               MergeResult\n              \n              , representing number of rows inserted,\nupdated and deleted by this merge action.",
        "MergeResult",
        "0.7.0",
        "Adds a matched clause into the merge action.",
        "Adds a matched clause into the merge action. It matches all rows in target that satisfy\n<joinExpr> while also satisfying <condition>. Returns a\n              \n               MatchedClauseBuilder\n              \n              which provides\nAPIs to define actions to take when a row is matched.",
        "For example:",
        "Adds a matched clause where a row in the\n              \n               Updatable\n              \n              target is matched if its id equals the\nid of a row in the\n              \n               DataFrame\n              \n              source and its value equals 0.",
        "MatchedClauseBuilder",
        "0.7.0",
        "Adds a matched clause into the merge action.",
        "Adds a matched clause into the merge action. It matches all remaining rows in target\nthat satisfy <joinExpr>. Returns a\n              \n               MatchedClauseBuilder\n              \n              which provides APIs to\ndefine actions to take when a row is matched.",
        "For example:",
        "Adds a matched clause where a row in the\n              \n               Updatable\n              \n              target is matched if its id equals\nthe id of a row in the\n              \n               DataFrame\n              \n              source.",
        "Caution: Since it matches all remaining rows, no more whenMatched calls will be accepted\nbeyond this call.",
        "MatchedClauseBuilder",
        "0.7.0",
        "Adds a not matched clause into the merge action.",
        "Adds a not matched clause into the merge action. It matches all rows in source that do not\nsatisfy <joinExpr> but satisfy <condition>. Returns a\n              \n               MatchedClauseBuilder\n              \n              which provides\nAPIs to define actions to take when a row is matched.",
        "For example:",
        "Adds a not matched clause where a row in the\n              \n               DataFrame\n              \n              source is not matched if its id\ndoes not equal the id of any row in the\n              \n               Updatable\n              \n              source and its value equals 0.",
        "NotMatchedClauseBuilder",
        "0.7.0",
        "Adds a not matched clause into the merge action.",
        "Adds a not matched clause into the merge action. It matches all remaining rows in source\nthat do not satisfy <joinExpr>. Returns a\n              \n               MatchedClauseBuilder\n              \n              which provides APIs to\ndefine actions to take when a row is not matched.",
        "For example:",
        "Adds a not matched clause where a row in the\n              \n               DataFrame\n              \n              source is not matched if its id\ndoes not equal the id of any row in the\n              \n               Updatable\n              \n              target.",
        "Caution: Since it matches all remaining rows, no more whenNotMatched calls will be accepted\nbeyond this call.",
        "NotMatchedClauseBuilder",
        "0.7.0"
    ]
}