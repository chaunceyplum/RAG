{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-iceberg-table",
    "title": "ALTER ICEBERG TABLE | Snowflake Documentation",
    "paragraphs": [
        "Modifies properties such as clustering options and tags for an existing Apache Iceberg\u2122 table.",
        "You can also use an ALTER ICEBERG TABLE statement to refresh a table, convert a table, or alter a structured type column. The syntax for those operations varies\nconsiderably. To view the syntax, parameter descriptions, usage notes, and examples for refreshing or converting an Iceberg table,\nsee the following pages:",
        "ALTER ICEBERG TABLE \u2026 REFRESH",
        "ALTER ICEBERG TABLE \u2026 CONVERT TO MANAGED",
        "ALTER ICEBERG TABLE \u2026 ALTER COLUMN \u2026 SET DATA TYPE",
        "This topic refers to Iceberg tables as simply \u201ctables\u201d except where specifying Iceberg tables avoids confusion.",
        "CREATE ICEBERG TABLE , DROP ICEBERG TABLE , SHOW ICEBERG TABLES , DESCRIBE ICEBERG TABLE",
        "Where:",
        "Identifier for the table to modify.",
        "If the identifier contains spaces or special characters, the entire string must be enclosed in double quotes.\nIdentifiers enclosed in double quotes are also case-sensitive.",
        "For more information, see Identifier requirements.",
        "Specifies one or more properties/parameters to set for the external table (separated by blank spaces, commas, or new lines):",
        "Specifies whether to replace invalid UTF-8 characters with the Unicode replacement character (\ufffd) in query results.\nYou can only set this parameter for tables that use an external Iceberg catalog.",
        "TRUE replaces invalid UTF-8 characters with the Unicode replacement character.",
        "FALSE leaves invalid UTF-8 characters unchanged. Snowflake returns a user error message when it encounters invalid UTF-8\ncharacters in a Parquet data file.",
        "If not specified, the Iceberg table defaults to the parameter value for the schema, database, or account.\nThe schema takes precedence over the database, and the database takes precedence over the account.",
        "Default: FALSE",
        "Specifies the name of a catalog integration configured for Snowflake Open Catalog. Snowflake syncs\nthe table with an external catalog in your Snowflake Open Catalog account. For more information, see Sync a Snowflake-managed table with Snowflake Open Catalog.",
        "Specifies the retention period for a Snowflake-managed table so that Time Travel actions (SELECT, CLONE, UNDROP) can be performed on historical\ndata in the table. For more information, see Understanding & using Time Travel.",
        "For a detailed description of this object-level parameter, as well as more information about object parameters, see\nParameters.",
        "Values:",
        "Standard Edition: 0 or 1",
        "Enterprise Edition: 0 to 90 for permanent tables",
        "Default:",
        "Standard Edition: 1",
        "Enterprise Edition (or higher): 1 (unless a different default value was specified at the schema, database, or account level)",
        "Note",
        "A value of 0 effectively disables Time Travel for the table.",
        "Specifies whether Snowflake should automatically poll the external Iceberg catalog associated with the table for metadata updates\nwhen you use automated refresh.\nIf no value is specified for the REFRESH_INTERVAL_SECONDS parameter on the catalog integration, Snowflake uses a default\nrefresh interval of 30 seconds.",
        "Default: FALSE",
        "Preview feature",
        "Available to all accounts.",
        "Currently, you can only unset the following parameter with this command:",
        "REPLACE_INVALID_CHARACTERS",
        "Note",
        "Clustering is only supported for tables that use Snowflake as the Iceberg catalog.",
        "Specifies (or modifies) one or more table columns or column expressions as the clustering key for the table. These are the\ncolumns/expressions for which clustering is maintained by Automatic Clustering.",
        "To learn more about clustering, see Clustering Keys & Clustered Tables.",
        "Enables or disables Automatic Clustering for the table.",
        "Drops the clustering key for the table.",
        "For more information about clustering keys and reclustering, see Understanding Snowflake Table Structures.",
        "Specifies the tag name and the tag string value.",
        "The tag value is always a string, and the maximum number of characters for the tag value is 256.",
        "For information about specifying tags in a statement, see Tag quotas for objects and columns.",
        "Identifier for the policy; must be unique for your schema.",
        "The following clauses apply to all table kinds that support row access policies, such as but not limited to tables, views, and event tables.\nTo simplify, the clauses just refer to \u201ctable.\u201d",
        "Adds a row access policy to the table.",
        "At least one column name must be specified. Additional columns can be specified with a comma separating each column name. Use this\nexpression to add a row access policy to both an event table and an external table.",
        "Drops a row access policy from the table.",
        "Use this clause to drop the policy from the table.",
        "Drops the row access policy that is set on the table and adds a row access policy to the same table in a single SQL statement.",
        "Drops all row access policy associations from the table.",
        "This expression is helpful when a row access policy is dropped from a schema before dropping the policy from an event table. Use this expression to drop row access policy associations from the table.",
        "Assigns an aggregation policy to the table.",
        "Use the optional ENTITY KEY parameter to define which columns uniquely identity an entity within the table. For more information, see\nImplementing entity-level privacy with aggregation policies.",
        "Use the optional FORCE parameter to atomically replace an existing aggregation policy with the new aggregation policy.",
        "Detaches an aggregation policy from the table.",
        "Specifies the arguments to pass into the conditional masking policy SQL expression.",
        "The first column in the list specifies the column for the policy conditions to mask or tokenize the data and must match the\ncolumn to which the masking policy is set.",
        "The additional columns specify the columns to evaluate to determine whether to mask or tokenize the data in each row of the query\nresult when a query is made on the first column.",
        "If the USING clause is omitted, Snowflake treats the conditional masking policy as a normal\nmasking policy.",
        "Replaces a masking or projection policy that is currently set on a column with a different policy in a single statement.",
        "Note that using the FORCE keyword with a masking policy requires the data type of the policy\nin the ALTER TABLE statement (i.e. STRING) to match the data type of the masking policy currently set on the column (i.e. STRING).",
        "If a masking policy is not currently set on the column, specifying this keyword has no effect.",
        "For details, see: Replace a masking policy on a column or Replace a projection policy.",
        "A role used to execute this SQL command must have the following\nprivileges at a minimum:",
        "Privilege",
        "Object",
        "Notes",
        "OWNERSHIP",
        "Iceberg table",
        "OWNERSHIP is a special privilege on an object that is automatically granted to the role that created the object, but can also be transferred using the GRANT OWNERSHIP command to a different role by the owning role (or any role with the MANAGE GRANTS privilege).",
        "USAGE",
        "External volume",
        "USAGE",
        "Catalog integration",
        "Required if the table uses a catalog integration.",
        "The USAGE privilege on the parent database and schema are required to perform operations on any object in a schema.",
        "For instructions on creating a custom role with a specified set of privileges, see Creating custom roles.",
        "For general information about roles and privilege grants for performing SQL actions on\nsecurable objects, see Overview of Access Control.",
        "Only the table owner (that is, the role with the OWNERSHIP privilege on the table) or higher can execute this command.",
        "Clustering is only supported for tables that use Snowflake as the Iceberg catalog. To add clustering to an Iceberg table,\nyou must also have the USAGE or OWNERSHIP privileges on the schema and database that contain the table.",
        "You can use data metric functions with Iceberg tables by executing an ALTER TABLE command. For more information, see\nWorking with data metric functions.",
        "Regarding metadata:",
        "Attention",
        "Customers should ensure that no personal data (other than for a User object), sensitive data, export-controlled data, or other regulated data is entered as metadata when using the Snowflake service. For more information, see Metadata fields in Snowflake.",
        "To troubleshooting issues with altering the CATALOG_SYNC parameter, see You can\u2019t alter an Iceberg table when specifying the CATALOG_SYNC parameter",
        "The following example sets a tag (my_tag) with a value of customer on an Iceberg table.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}