{
    "url": "https://docs.snowflake.com/en/developer-guide/odbc/odbc-linux",
    "title": "Installing and configuring the ODBC Driver for Linux | Snowflake Documentation",
    "paragraphs": [
        "Linux uses named data sources (DSNs) for connecting ODBC-based client applications to Snowflake. You can choose to install the ODBC driver using the TGZ file, RPM package, or DEB package provided in the Snowflake Client Repository.",
        "For a list of the operating systems supported by Snowflake clients, see Operating system support.",
        "With ODBC version 3.0.1, the driver no longer supports CentOS 6 versions.",
        "A driver manager is required to manage communication between Snowflake and the ODBC driver. The driver supports using either iODBC or unixODBC as the driver manager.",
        "If iODBC is not installed on CentOS, as sudo, execute the following command:",
        "unixODBC provides the odbcinst and isql command line utilities used to install, configure, and test the driver. To verify whether unixODBC is installed, execute the following commands:",
        "If unixODBC is not installed:",
        "As sudo, execute the following commands:",
        "Verify the directory where odbcinst expects the odbcinst.ini and odbc.ini files to be located:",
        "The location should be /etc.",
        "Note",
        "If you are installing the ODBC driver by using yum or the\nTGZ file, skip this step.",
        "If you are installing the ODBC driver using the RPM or DEB package and wish to verify the package signature before installation, perform the following tasks:",
        "From the public keyserver, download and import the Snowflake GPG public key for the version of the ODBC driver that you are using:",
        "For version 3.5.0 and higher:",
        "For version 2.25.6 through 3.4.1:",
        "For version 2.22.1 through 2.25.5:",
        "For version 2.18.2 through 2.22.0:",
        "For version 2.18.1 and lower:",
        "Note",
        "If this command fails with the following error:",
        "then specify that you want to use port 80 for the keyserver:",
        "Download the package from the Snowflake Client Repository. For details, see Downloading the ODBC Driver.",
        "Verify the key was imported successfully:",
        "The command should display the Snowflake key.",
        "Verify the signature:",
        "Note",
        "If rpm does not have the GPG key that you imported, the command will report that the signatures are not OK and will\nproduce a NOKEY warning:",
        "If this occurs, run the following commands to export the GPG key, import the key into rpm, and verify the\nsignature again:",
        "where <GPG_KEY_ID> is the ID for the key that you installed in 1.1: Download and import the latest Snowflake public key.",
        "Install the package signature verification tool:",
        "Import the public key to the keyring:",
        "where <GPG_KEY_ID> is the ID for the key that you installed in 1.1: Download and import the latest Snowflake public key.",
        "Configure a policy for the key. For details, see /usr/share/doc/debsig-verify. The policy must be stored in the following directory:",
        "where <GPG_KEY_ID> is the ID for the key that you installed in 1.1: Download and import the latest Snowflake public key.",
        "Store the policy in a file named policy_name.pol, where policy_name is your name for the policy. For the policy name, you can use any text string, however the string cannot contain blank spaces.",
        "Here is a sample policy file for a key with the ID 5A125630709DD64B:",
        "Verify the signature:",
        "Note",
        "By default, the dpkg package signature verification tool does not check the signature when you install the package. If you want to verify the signature every time you run dpkg, remove the\n--no-debsig line in the /etc/dpkg/dpkg.cfg file.",
        "Your local environment can contain multiple GPG keys; however, for security reasons, Snowflake periodically rotates the public GPG key. As a best practice, we recommend deleting the existing public key\nafter confirming that the latest key works with the latest signed package.",
        "To delete the key:",
        "Install the driver using one of the following approaches:",
        "Use yum to download and install the driver.",
        "Install the driver by using the downloaded TGZ file (TAR file compressed using .GZIP).",
        "Install the downloaded RPM package.",
        "Install the downloaded DEB package.",
        "With version 2.21.1 of the ODBC Driver (and later versions), you can use yum to download and install the driver.",
        "To download and install the Snowflake ODBC driver for Linux using yum:",
        "Create a file named /etc/yum.repos.d/snowflake-odbc.repo, and add the following text to the file:",
        "where VERSION_NUMBER is the specific version number of the driver (for example, 3.5.0) and GPG_KEY_ID is one of the\nfollowing key IDs:",
        "ODBC Driver Version",
        "GPG Key ID",
        "3.5.0 and higher",
        "5A125630709DD64B",
        "2.25.6 through 3.4.1",
        "630D9F3CAB551AF3",
        "2.22.1 through 2.25.5",
        "37C7086698CB005C",
        "In the settings above, baseurl and gpgkey point to the Snowflake Client Repository on Amazon S3. If\nyou want to use the mirror on Azure Blob instead, change the hostname to https://sfc-repo.azure.snowflakecomputing.com/:",
        "Run the following command to install the driver:",
        "To install the Snowflake ODBC driver for Linux using\nthe TGZ file that you downloaded earlier.",
        "Copy the downloaded file (snowflake_linux_x8664_odbc-version.tgz) to a working directory.",
        "Unzip the file:",
        "Extract the files from the .tar file:",
        "Copy the resulting snowflake_odbc folder to the directory where you want to install the driver. Make note of this directory. You\u2019ll need the location later in the instructions.",
        "Note",
        "The RPM package requires unixODBC as the driver manager.",
        "To install the Snowflake ODBC driver for Linux using\nthe RPM package that you downloaded earlier, after\noptionally verifying the package signature, run the following command:",
        "Note",
        "The installation directory is /usr/lib64/snowflake/odbc/. You\u2019ll need the location later in the instructions.",
        "If the driver cannot find the library, it displays an Unable to locate SQLGetPrivateProfileString function error. In this case, you must set ODBCInstLib=<driver_manager_path> manually in the simba.snowflake.ini configuration file with the name of the driver manager on your system. For more information, see Configure the ODBC Driver.",
        "For example, ODBCInstLib=/usr/lib/x86_64-linux-gnu/libodbcinst.so.2.",
        "Note",
        "The DEB package requires unixODBC as the driver manager.",
        "To install the Snowflake ODBC driver for Linux using\nthe DEB package that you downloaded earlier, after\noptionally verifying the package signature, run the following command:",
        "The command may fail if any required dependencies for the package manager are not installed. If that happens, install them now:",
        "Note",
        "The installation directory is /usr/lib/snowflake/odbc/. You\u2019ll need the location later in the instructions.",
        "Note",
        "If you installed the ODBC driver using the RPM or DEB package file, skip this step.",
        "If you installed using the TGZ file, configure the environment using the installed driver manager (either iODBC or unixODBC).",
        "In a terminal window, change to the snowflake_odbc directory, and run the following command to install Snowflake ODBC:",
        "This script completes the following steps:",
        "Adds one Snowflake connection to your system-level /etc/odbc.ini file.",
        "Adds the Snowflake driver information to your system-level /etc/odbcinst.ini file.",
        "Adds all certificate authority (CA) certificates required by the Snowflake ODBC driver to your system-level simba.snowflake.ini file.",
        "By running iodbc_setup.sh, you don\u2019t need to set any environment variables.",
        "Alternatively, if you don\u2019t want Snowflake to change your system configurations, add the following environment variables to your shell configuration file (e.g. .profile, .bash_profile):",
        "ODBCINI = <path>/conf/odbc.ini",
        "ODBCINSTINI = <path>/conf/odbcinst.ini",
        "Where path is the location of the snowflake_odbc directory. If you have configured other ODBC drivers in your system and plan to add the Snowflake ODBC entries to your existing odbc.ini and\nodbcinst.ini files in the next step, then point ODBCINI and ODBCINSTINI to the location of those files.",
        "In a terminal window, change to the snowflake_odbc directory, and run the following command to install Snowflake ODBC:",
        "This script completes the following steps:",
        "Adds a Snowflake connection to your system-level /etc/odbc.ini file.",
        "Adds the Snowflake driver information to your system-level /etc/odbcinst.ini file.",
        "Adds all certificate authority (CA) certificates required by the Snowflake ODBC driver to your system-level simba.snowflake.ini file.",
        "By running unixodbc_setup.sh, you don\u2019t need to set any environment variables.",
        "Alternatively, if you don\u2019t want Snowflake change your system configurations, add the following environment variables to your shell configuration file, e.g. .profile, .bash_profile:",
        "ODBCSYSINI = <path>/conf/",
        "Where path is the location of the snowflake_odbc directory. If you have configured other ODBC drivers in your system and plan to add the Snowflake ODBC entries to your existing odbc.ini and\nodbcinst.ini files in the next step, then point ODBCSYSINI to the location of those files.",
        "Configuring the ODBC driver requires adding entries to the following files:",
        "<path>/lib/simba.snowflake.ini",
        "/etc/odbcinst.ini (or <path>/conf/odbc.ini, if you are using environment variables)",
        "/etc/odbc.ini (or <path>/conf/odbcinst.ini, if you are using environment variables)",
        "Where path is the location of the snowflake_odbc directory.",
        "Add the following entries to the simba.snowflake.ini file:",
        "Where:",
        "path is the location of the snowflake_odbc directory.",
        "driver_manager_path is the location of your driver manager directory:",
        "iODBC: ODBCInstLib=libiodbcinst.so.2",
        "unixODBC: ODBCInstLib=libodbcinst.so",
        "Note",
        "If your driver manager directory is not included in the LD_LIBRARY_PATH environment variable, specify the full path to the driver manager library here.",
        "Verify that you have write permissions on the log path.",
        "The ANSIENCODING parameter specifies the application\u2019s character encoding. The default is UTF-8. The\nparameter is intended for use only by Snowflake; customers should not change the value.",
        "Add the following entries to the odbcinst.ini file:",
        "Where path is the location of the snowflake_odbc directory.",
        "For each DSN, add the following entries to the odbc.ini file:",
        "DSN Name and driver name (SnowflakeDSIIDriver), in the form of <dsn_name> = <driver_name>.",
        "Parameters:",
        "Required connection parameters, such as server.",
        "Any additional, optional parameters, such as default role, database, and warehouse.",
        "Parameters are specified in the form of <parameter_name> = <value>. For details about the parameters that can be set for each DSN, see ODBC configuration and connection parameters.",
        "The following example illustrates an odbc.ini file that configures two data sources that use different forms of an\naccount identifier in the server URL:",
        "testodbc1 uses the account name as an identifier for the account myaccount in the\norganization myorganization.",
        "testodbc2 uses the account locator xy12345 as the account identifier.",
        "Note that testodbc2 uses an account in the AWS US West (Oregon) region. If the account is in a different region or if\nthe account uses a different cloud provider, you need to\nspecify additional segments after the account locator.",
        "Note the following:",
        "Both testodbc1 and testodbc2 have default roles.",
        "testodbc2 also has a default database and warehouse.",
        "Test the driver using the installed driver manager (either iODBC or unixODBC).",
        "Test the DSNs you created. On the command line, specify the DSN name, user login name, and password, using the following format:",
        "iodbctest \"DSN=<dsn_name>;UID=<user_name>;PWD=<password>\"",
        "For example:",
        "Test the DSNs you created using the isql command line utility provided with unixODBC.",
        "On the command line, specify the DSN name, user login name, and password.",
        "For example:",
        "Was this page helpful?",
        "On this page"
    ]
}