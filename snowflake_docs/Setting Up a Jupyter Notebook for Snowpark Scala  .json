{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/scala/quickstart-jupyter",
    "title": "Setting Up a Jupyter Notebook for Snowpark Scala | Snowflake Documentation",
    "paragraphs": [
        "This topic explains how to set up a Jupyter notebook for Snowpark.",
        "Make sure that Jupyter is set up to use Scala. For example, you can\ninstall the Almond kernel.",
        "Note",
        "When using coursier to install the Almond kernel, specify a\nsupported version of Scala.",
        "The Snowpark library requires access to the directory that contains classes generated by the Scala REPL. If you are planning to\nuse multiple notebooks, you must use a separate REPL class directory for each notebook.",
        "To make it easier to set up a separate REPL class directory for each notebook, create a separate folder for each notebook:",
        "In the Notebook Dashboard,\nclick New \u00bb Folder to create a new folder for a notebook.",
        "Select the checkbox next to the folder, click Rename, and assign a new name for the folder.",
        "Click the link for the folder to navigate into the folder.",
        "Click New \u00bb Scala to create a new notebook in that folder.",
        "Next, configure the Jupyter notebook for Snowpark.",
        "In a new cell, run the following commands to define a variable for a directory:",
        "This does the following:",
        "Defines a os.Path variable and a String variable for a directory\nfor classes generated by the Scala REPL.",
        "Creates that directory, if that directory does not already exist.",
        "The Scala REPL generates classes for the Scala code that you write, including your code that defines UDFs. The Snowpark\nlibrary uses this directory to find and upload the classes for your UDFs that are generated by the REPL.",
        "Note",
        "If you are using multiple notebooks, you\u2019ll need to create and configure a separate REPL class directory for each notebook.\nFor simplicity, you can just put each notebook in a separate folder, as explained in\nCreating a New Notebook in a New Folder.",
        "Run the following commands in a cell to configure the compiler for the Scala REPL:",
        "This does the following:",
        "Configures the compiler to generate classes for the REPL in the directory that you created earlier.",
        "Configures the compiler to wrap code entered in the REPL in classes, rather than in objects.",
        "Adds the directory that you created earlier as a dependency of the REPL interpreter.",
        "Create a new session in Snowpark, and add the REPL class directory that you created\nearlier as a dependency. For example:",
        "See Creating a Session for Snowpark Scala for an explanation of the Map keys.",
        "Run the following commands in a cell to add the Ammonite kernel classes as\ndependencies for your UDF:",
        "Note",
        "If you plan to create UDFs that have dependencies that are available through Maven, you can use the addClass method\ndefined above to add those dependencies:",
        "If you need to specify a dependency in a JAR file, call interp.load.cp to load the JAR file for the REPL interpreter,\nand call session.addDependency to add the JAR file as a dependency for your UDFs:",
        "Run the following commands in a cell to verify that you can define and call an anonymous\nuser-defined function (UDF):",
        "If the following error occurs:",
        "Delete the contents of the directory containing the REPL classes (the directory with the path specified by the replClassPath\nvariable), and restart the notebook server.",
        "Was this page helpful?",
        "On this page"
    ]
}