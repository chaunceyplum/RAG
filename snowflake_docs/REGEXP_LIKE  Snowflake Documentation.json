{
    "url": "https://docs.snowflake.com/en/sql-reference/functions/regexp_like",
    "title": "REGEXP_LIKE | Snowflake Documentation",
    "paragraphs": [
        "String functions (regular expressions)",
        "Performs a comparison to determine whether a string matches a specified pattern. Both inputs must be text expressions.",
        "REGEXP_LIKE is similar to the [ NOT ] LIKE function, but with POSIX extended regular expressions instead of SQL LIKE pattern syntax.\nIt supports more complex matching conditions than LIKE.",
        "Tip",
        "You can use the search optimization service to improve the performance of queries that call this function.\nFor details, see Search Optimization Service.",
        "[ NOT ] RLIKE (1st syntax)",
        "See also: String functions (regular expressions)",
        "REGEXP_COUNT , REGEXP_INSTR , REGEXP_REPLACE , REGEXP_SUBSTR , REGEXP_SUBSTR_ALL",
        "[ NOT ] ILIKE , [ NOT ] LIKE",
        "Required:",
        "The string to search for matches.",
        "Pattern to match.",
        "For guidelines on specifying patterns, see String functions (regular expressions).",
        "Optional:",
        "String of one or more characters that specifies the parameters used for searching for matches. Supported values:",
        "Parameter",
        "Description",
        "c",
        "Case-sensitive matching",
        "i",
        "Case-insensitive matching",
        "m",
        "Multi-line mode",
        "e",
        "Extract submatches",
        "s",
        "POSIX wildcard character . matches \\n",
        "Default: c",
        "For more details, see Specifying the parameters for the regular expression.",
        "Returns a BOOLEAN or NULL. The value is TRUE if there is a match. Otherwise, returns FALSE. Returns NULL if any argument is NULL.",
        "The function implicitly anchors a pattern at both ends (for example, '' automatically becomes '^$', and 'ABC'\nautomatically becomes '^ABC$'). To match any string starting with ABC, the pattern would be 'ABC.*'.",
        "The backslash character (\\) is the escape character. For more information, see Specifying regular expressions in single-quoted string constants.",
        "For more usage notes, see the General usage notes for regular expression functions.",
        "Arguments with collation specifications currently aren\u2019t supported.",
        "Create a table with names of cities:",
        "Run a case-sensitive query with a wildcard:",
        "Run a case-insensitive query with a wildcard:",
        "For additional examples of regular expressions, see [ NOT ] REGEXP.",
        "To search for a wildcard character, you need to escape the wildcard character. For more information about wildcard\ncharacters, see Specifying regular expressions in single-quoted string constants.",
        "Was this page helpful?",
        "On this page"
    ]
}