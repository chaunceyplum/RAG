{
    "url": "https://docs.snowflake.com/en/developer-guide/node-js/nodejs-driver-options",
    "title": "Node.js options reference | Snowflake Documentation",
    "paragraphs": [
        "When constructing a new Connection object, you pass in a JavaScript object that specifies the options for the connection\n(e.g. your account identifier, your user name, etc.). The following sections describe the options that you can set. To set an\noption, specify the option name as the property name in the JavaScript object.",
        "Connection options",
        "Required connection options",
        "Authentication options",
        "Additional connection options",
        "Other options",
        "xmlParserConfig options",
        "Your account identifier.",
        "The ID for the region where your account is located.",
        "Note",
        "This option is deprecated and is included here only for backward compatibility.\nSnowflake recommends transitioning to embedding the region in the account identifier,\nas described in Using an account locator as an identifier, such as follows.",
        "In addition, you must specify the options for authenticating to the server.",
        "Specifies the name of the client application connecting to Snowflake.",
        "Specifies the authenticator to use for verifying user login credentials. You can set this to one of the following values:",
        "Value",
        "Description",
        "SNOWFLAKE",
        "Use the internal Snowflake authenticator. You must also set the password option.",
        "EXTERNALBROWSER",
        "Use your web browser to authenticate with Okta, AD FS, or any other SAML 2.0-compliant identity\nprovider (IdP) that has been defined for your account.",
        "https://<okta_account_name>.okta.com",
        "Use Native SSO through Okta.",
        "OAUTH",
        "Use OAuth for authentication. You must also set the token option to the OAuth token\n(see below).",
        "SNOWFLAKE_JWT",
        "Use key pair authentication. See Use key-pair authentication and key-pair rotation.",
        "USERNAME_PASSWORD_MFA",
        "Use multi-factor authentication (MFA). See Use an MFA passcode.",
        "The default value is SNOWFLAKE.",
        "For more information on authentication, see Managing/Using federated authentication and\nClients, drivers, and connectors.",
        "The login name for your Snowflake user or your Identity Provider (e.g. your login name for Okta). Set this option if you set the authenticator option to SNOWFLAKE, SNOWFLAKE_JWT, or the\nOkta URL endpoint for your Okta account (e.g. https://<okta_account_name>.okta.com).\nIf you don\u2019t set the authenticator option, you must set this value.",
        "Password for the user. Set this option if you set the authenticator option to SNOWFLAKE or the\nOkta URL endpoint for your Okta account (e.g. https://<okta_account_name>.okta.com)\nor if you left the authenticator option unset.",
        "Specifies the OAuth token to use for authentication. Set this option if you set the authenticator option to\nOAUTH.",
        "Specifies the private key (in PEM format) for key pair authentication. For details, see\nUse key-pair authentication and key-pair rotation.",
        "Specifies the local path to the private key file (e.g. rsa_key.p8). For details, see\nUse key-pair authentication and key-pair rotation.",
        "Specifies the passcode to decrypt the private key file, if the file is encrypted. For details, see\nUse key-pair authentication and key-pair rotation.",
        "Specifies the passcode provided by Duo when using multi-factor authentication (MFA) for logins. For details, see Use an MFA passcode.",
        "Specifies whether the MFA passcode is embedded in the login password. If true, the MFA passcode is appended to the end of the password. Default: false. For details, see Use an MFA passcode.",
        "Specifies a fully-qualified endpoint for connecting to Snowflake. The accessUrl includes the full schema and host,\nas well as an optional port number, similar to https://myaccount.us-east-1.snowflakecomputing.com.",
        "Note",
        "When using the accessUrl option, the value specified in the account option is not used.",
        "Specifies the timeout, in milliseconds, for browser activities related to SSO authentication. The default value is\n120000 (milliseconds).",
        "Path to the client configuration file associated with the easy logging feature.",
        "Sets whether the driver uses the MFA token in the local credential storage for authentication instead of requesting a new token from the server. Default: false.",
        "Sets whether the driver uses the SSO token in the local credential storage for authentication instead of requesting a new token from the server. Default: false.",
        "By default, client connections typically time out approximately 3-4 hours after the most recent query was executed.",
        "If the clientSessionKeepAlive option is set to true, the client\u2019s connection to the server will be kept alive\nindefinitely, even if no queries are executed.",
        "The default setting of this option is false.",
        "If you set this option to true, make sure that your program explicitly disconnects from the server when your\nprogram has finished. Do not exit without disconnecting.",
        "(Applies only when clientSessionKeepAlive is true)",
        "Sets the frequency (interval in seconds) between heartbeat messages.",
        "You can loosely think of a connection heartbeat message as substituting for a query and restarting the timeout\ncountdown for the connection. In other words, if the connection would time out after at least 4 hours of inactivity,\nthe heartbeat resets the timer so that the timeout will not occur until at least 4 hours after the most recent\nheartbeat (or query).",
        "The default value is 3600 seconds (one hour). The valid range of values is 900 - 3600. Because timeouts usually\noccur after at least 4 hours, a heartbeat every 1 hour is normally sufficient to keep the connection alive.\nHeartbeat intervals of less than 3600 seconds are rarely necessary or useful.",
        "Sets the directory in which to store the credential cache when token caching is enabled. Default: user\u2019s $HOME directory.",
        "The default database to use for the session after connecting.",
        "Specifies whether to disable the validation check of a SAML response. Default: false.",
        "Host address to which the driver should connect.",
        "Specifies whether to enable keep-alive functionality on the socket immediately after receiving a new connection request.",
        "By default, the HTTP protocol creates a new TCP connection for every request. Enabling this parameter allows the driver to re-use connections for multiple requests\ninstead of creating new connections for each request.",
        "The default value is true.",
        "Specifies the lists of hosts that the driver should connect to directly, bypassing the proxy\nserver (e.g. *.amazonaws.com to bypass Amazon S3 access). For multiple hosts, separate the hostnames with a pipe\nsymbol (|). You can also use an asterisk as a wild card. For example:",
        "noProxy: \"*.amazonaws.com|*.my_company.com\"",
        "Specifies the hostname of an authenticated proxy server.",
        "Specifies the password for the user specified by proxyUser.",
        "Specifies the port of an authenticated proxy server.",
        "Specifies the protocol used to connect to the authenticated proxy server.\nUse this property to specify the HTTP protocol: http or https.",
        "Specifies the username used to connect to an authenticated proxy server.",
        "The default security role to use for the session after connecting.",
        "The default schema to use for the session after connecting.",
        "Number of milliseconds to keep the connection alive with no response. Default: 60000 (1 minute).",
        "The default virtual warehouse to use for the session after connecting. Used for performing queries, loading data, etc.",
        "Some connection options assume that the specified database object (database, schema, warehouse, or role) already\nexists in the system. If the specified object does not exist, a default is not set during connection.",
        "After connecting, all of the optional connection options can also be set or overridden through the USE <object> command.",
        "Sets the maximum number of binds the driver uses in a bulk insert operation. The default value is 100000 (100K).",
        "Current working directory to use for GET and PUt operations when it differs from the connector directory.",
        "Specifies how the fetchAsString method returns null values.",
        "true (enabled): Returns null values as the string, \u201cNULL\u201d.",
        "false (disabled): Returns null values as null.",
        "Default: true (enabled)",
        "Number of threads for clients to use to prefetch large result sets. Valid values: 1-10.",
        "Specifies how to return results that contain duplicate column names. Values include:",
        "array: returns the result set as an array, including duplicate column names.",
        "object: returns the result set as an object, omitting duplicate column names.",
        "object_with_renamed_duplicated_columns: returns the result set as an object, while adding suffixes to duplicate names to make them unique.",
        "The default value is object.",
        "Beginning with version 1.7.0 of the driver, you can use the following fast-xml-parser\nlibrary configuration options to customize how the driver processes XML document attributes when querying columns\nwith XML content.",
        "You can download the fast-xml-parser.",
        "By default, the Node.js driver ignores XML element attributes when returning XML data from a query. For example,\nin the following XML content, the <animal> element includes an id attribute:",
        "By default, when the Node.js driver returns the result set, it ignores the id attribute and returns the following\noutput. Notice the attribute names and values are not included.",
        "For information about how to set these options, refer to Parsing XML data.",
        "To help illustrate how the following options affect how the driver parses XML data, each option description shows how it\naffects this example.",
        "Whether to ignore XML attributes during parsing. If you want to use the other parser options, you must set\nignoreAttributes: false.",
        "Default: true",
        "When set to false, the driver returns the output as follows. Notice the id attribute is now\nincluded in the output (by default, the driver prefixes attribute names with @_):",
        "Whether to create a property with the tag name and assign the value directly.",
        "Default: false",
        "When set to true, the driver returns the output as follows:",
        "String to prepend to attribute names.",
        "Default: \u201c@_\u201d",
        "When set to \"\" to specify no prefix for attribute names, the driver returns the output as follows:",
        "Groups all attributes of a tag under a specified property name.",
        "Default: unset",
        "When set to @@ to group all tag attributes in an element named @@, the driver returns the output as follows:",
        "Was this page helpful?",
        "On this page",
        "Related info",
        "Node.js driver for Snowflake (at npm)"
    ]
}