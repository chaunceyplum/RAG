{
    "url": "https://docs.snowflake.com/en/user-guide/network-policies",
    "title": "Controlling network traffic with network policies | Snowflake Documentation",
    "paragraphs": [
        "You can use network policies to control inbound access to the Snowflake service and internal stage.",
        "If you want to control outbound traffic from Snowflake to an external network destination, see\nExternal network access overview.",
        "Note",
        "Network policies that existed before the introduction of network rules can no longer be modified in Snowsight. Use the\nALTER NETWORK POLICY command instead.",
        "By default, Snowflake allows users to connect to the service and internal stage from any computer or device. A security administrator\n(or higher) can use a network policy to allow or deny access to a request based on its origin. The allowed list of the network policy\ncontrols which requests are allowed to access the Snowflake service or internal stage, while the blocked list controls which\nrequests should be explicitly blocked.",
        "A network policy does not directly specify the network identifiers in its allowed list or blocked list. Rather, a network policy adds\nnetwork rules to its allowed and blocked lists. These network rules group related identifiers into logical units that are added to the\nallowed list and blocked list of a network policy.",
        "Important",
        "Network policies that existed before the introduction of network rules still work. However, all new network policies should use network\nrules, not the ALLOWED_IP_LIST and BLOCKED_IP_LIST parameters, to control access from IP addresses. Best practice is to\navoid using both ways to restrict access in the same network policy.",
        "The general workflow of using network policies to control inbound network traffic is:",
        "Create network rules based on their purpose and type of network identifier.",
        "Create one or more network policies that include the network rules that contain the identifiers to be allowed or blocked.",
        "Activate the network policy for an account, user, or security integration. A network policy does not restrict network traffic until it is activated.",
        "When you add a network rule to the allowed list of a network policy, you do not have to use the blocked list to explicitly block other\nidentifiers of the same type; only the allowed identifiers have access. For example, if you add an IPv4 network rule with a single IP\naddress to the allowed list, all other IPv4 addresses are blocked. There is no need to use the blocked list to restrict access from other\nIP addresses.",
        "If a network policy has the same IP address values in both the ALLOWED_IP_LIST and the BLOCKED_IP_LIST parameters, Snowflake\napplies the values in the BLOCKED_IP_LIST parameter first. This behavior also applies to the ALLOWED_NETWORK_RULE_LIST and\nthe BLOCKED_NETWORK_RULE_LIST parameters.",
        "Over private connections, if a network policy has a VPCE ID (AWS) or LinkID (Azure) network rule in the ALLOWED_NETWORK_RULE_LIST\nparameter, IP network rules in the BLOCKED_NETWORK_RULE_LIST parameter are ignored, causing VPCE ID or LinkID network rules to take\nprecedence.",
        "As an example, a network rule that uses private endpoint identifiers such as Azure LinkIDs or AWS VPCE IDs to restrict access have no effect\non requests coming from the public network. If you want to restrict access based on private endpoint identifiers, and then completely\nblock requests from public IPv4 addresses, you must create two separate network rules, one for the allowed list and another for the blocked\nlist.",
        "The following network rules could be combined in a network policy to allow a VPCE ID while blocking public network traffic.",
        "If you want to allow a range of IP addresses with the exception of a single IP address, you can create two network rules, one for the\nallowed list and another for the blocked list.",
        "For example, the following would allow requests from all IP addresses in the range of 192.168.1.0 to 192.168.1.255, except\n192.168.1.99. IP addresses outside the range are also blocked.",
        "You can apply a network policy to an account, a security integration, or a user. If there are network policies applied to more than one\nof these, the most specific network policy overrides more general network policies. The following summarizes the order of precedence:",
        "Network policies applied to an account are the most general network policies. They are overridden by network policies applied to a\nsecurity integration or user.",
        "Network policies applied to a security integration override network policies applied to the account, but are overridden by a network\npolicy applied to a user.",
        "Network policies applied to a user are the most specific network policies. They override both accounts and security integrations.",
        "It is possible to temporarily bypass a network policy for a set number of minutes by configuring the user object property\nMINS_TO_BYPASS_NETWORK_POLICY, which can be viewed by executing DESCRIBE USER. Only Snowflake can set the\nvalue for this object property. Please contact Snowflake Support to set a value for this property.",
        "While restrictions on incoming requests to Snowflake are ultimately applied to an account, user, or security integration with a network\npolicy, the administrator can organize these restrictions using network rules, which are schema-level\nobjects.",
        "Each network rule groups together the identifiers for a particular type of request origin. For example, one network rule\nmight include all of the IPv4 addresses that should be allowed to access Snowflake while another groups together all of the private\nendpoints that should be blocked.",
        "A network rule, however, does not specify whether it is allowing or blocking the origin of a request. It simply organizes\nrelated origins into a logical unit. Administrators specify whether that unit should be allowed or blocked when they create\nor modify a network policy.",
        "If you already understand the strategies for using network rules with network policies, see Working with network rules.",
        "Limit the scope.  Network rules are designed to group together small units of related network identifiers. Previously, network\npolicies often contained a large, monolithic list of IP addresses that should be allowed or blocked. The introduction of network rules\nchanges this strategy. For example, you could break up network identifiers by:",
        "Creating a network rule to contain client IP addresses for the North American region, and a different rule for the Europe and Middle\nEastern region.",
        "Creating a network rule whose purpose is to allow access for a special population, such as highly privileged users and service account\nusers. This network rule can be added to a network policy that is applied to individual users.",
        "Creating a network rule that is scoped to one or more data apps.",
        "With the introduction of network rules, Snowflake recommends that you also limit the scope of network policies. Whenever possible,\nnarrowly scope a network policy to a group of users or a security integration rather than an entire account.",
        "Add comments. When creating a network rule, use the COMMENT property to keep track of what the rule is supposed to do.\nComments are important because Snowflake encourages a large number of small targeted rules over fewer monolithic ones.",
        "You can use the SHOW NETWORK RULES command to list all of the network rules, including their comments.",
        "Each network rule contains a list of one or more network identifiers of the same type (e.g. an IPv4 address rule or a private endpoint rule).",
        "A network rule\u2019s TYPE property identifies what type of identifiers the network rule contains.",
        "For a complete list of the types of identifiers that can be restricted using network rules, see Supported network identifiers.",
        "This section discusses how to use network rules to restrict access to the Snowflake service only. If you want to restrict access to both the\nservice and the internal stage of an account on AWS, see Protecting internal stages on AWS.",
        "To restrict access to the Snowflake service, set the MODE property of the network rule to INGRESS.",
        "You can then use the TYPE property to specify the identifiers that should be allowed or\nblocked.",
        "This section discusses how to use network rules to restrict access to internal stages on AWS, including how to simultaneously restrict\naccess to the Snowflake service and internal stage. It includes:",
        "Limitations",
        "Prerequisite: Enabling internal stage restrictions",
        "Guidelines for internal stages",
        "Strategy for protecting the internal stage only",
        "Strategies for protecting both service and internal stage",
        "Note",
        "You cannot use a network rule to restrict access to an internal stage on Microsoft Azure. However, you can block all public access to an\ninternal stage on Azure if you are using\nAzure Private Link. For details, see Blocking public access \u2014 Recommended.",
        "A network policy that is activated for a security integration does not restrict access to an internal stage.",
        "To use network rules to restrict access to the internal stage of an account, the account administrator must enable the ENFORCE_NETWORK_RULES_FOR_INTERNAL_STAGES parameter . Network rules do not protect an internal stage until this parameter is\nenabled, regardless of the rule\u2019s mode.",
        "To allow network rules to restrict access to internal stages, execute:",
        "In addition to the best practices for network rules, you should adhere to the following\nguidelines when creating network policies and network rules to restrict access to internal stages.",
        "Limit the number of identifiers. Network policies used to protect an internal stage cannot contain an unlimited number of network\nidentifiers. The limits vary depending on your Snowflake edition.",
        "Note",
        "If a network policy has more than one network rule, the combined number of identifiers from all network rules cannot exceed the limit\nfor the network policy.",
        "Standard and Enterprise editions:",
        "Maximum number of IPv4 address ranges is 10 per network rule.",
        "Maximum number of VPCE IDs is 7 per network policy.",
        "Business Critical edition and higher:",
        "Maximum number of IPv4 address ranges is approximately 250 per network policy.",
        "Maximum number of VPCE IDs is approximately 200 per network policy.",
        "Maximum number of network policies is 50. If you need to increase this limit, contact Snowflake Support.",
        "Use same rule to protect both service and internal stage. When a rule contains IPv4 addresses and the mode of a network rule is\nINGRESS, a single rule can protect both the Snowflake service and the internal stage of the account. Snowflake recommends using a\nsingle rule even when the IP addresses accessing the service are different from the IP addresses accessing the internal stage. This\napproach improves organization, manageability, and auditing.",
        "Test Network Policies. Snowflake recommends testing network rules using user-level network policies. If you encounter\nPolicySizeExceeded exceptions when fetching the scoped credentials from AWS STS, break up the network identifiers into smaller network\nrules.",
        "To restrict access to an AWS internal stage without affecting how network traffic accesses the Snowflake service, create a network rule with\nthe following settings:",
        "Set the MODE parameter to INTERNAL_STAGE.",
        "Set the TYPE parameter to AWSVPCEID.",
        "Note",
        "You cannot restrict access to the internal stage based on the IP address of the request without also restricting access to the Snowflake\nservice.",
        "When restricting access to both the Snowflake service and internal stage, the implementation strategy varies based on whether network\ntraffic is traversing the public internet or AWS Private Link.",
        "In the following comparison, \u201cPublic\u201d indicates that traffic to the service or internal stage is traversing the public internet while\n\u201cPrivate\u201d indicates traffic is using AWS Private Link. Find the combination that matches your environment, and then choose the\nimplementation strategy accordingly.",
        "Service Connection",
        "Internal Stage Connection",
        "Implementation Strategy",
        "Public",
        "Public",
        "Create a single network rule with TYPE=IPV4 and MODE=INGRESS. Include all IP addresses that access the service and internal\nstage.",
        "Private",
        "Private",
        "Strategy depends on whether you want to restrict access using private IP addresses or the VPCE ID of the VPC endpoints:",
        "(Recommended) If using VPCE IDs, you must create two network rules, even if the same VPC endpoint is connecting to both the\nservice and the internal stage.",
        "For the service, create a network rule with TYPE=AWSVPCEID and MODE=INGRESS.",
        "For the internal stage, create a network rule with TYPE=AWSVPCEID and MODE=INTERNAL_STAGE.",
        "If using private IP addresses, create a network rule with TYPE=IPV4 and MODE=INGRESS. Include all private IP addresses that\naccess the service and internal stage.",
        "Public [1]",
        "Private",
        "Strategy depends on whether you want to restrict access to the internal stage using private IP addresses  or VPCE ID of the VPC\nendpoints:",
        "(Recommended) If using VPCE IDs, create two network rules, one for the service and one for the internal stage.",
        "For the service,  create a network with TYPE=IPV4 and MODE=INGRESS.",
        "For the internal stage, create a network rule with TYPE=AWSVPCEID and MODE=INTERNAL_STAGE.",
        "If using private IP addresses, create a single network rule with TYPE=IPV4 and MODE=INGRESS. Include all IP addresses that\naccess the service and internal stage.",
        "Private",
        "Public [1]",
        "You must use private IPs for the service (cannot use VPCE IDs). Create a single network rule with TYPE=IPV4 and MODE=INGRESS.\nInclude all IP addresses that access the service and internal stage.",
        "If you have implemented private connectivity to either the service or the internal stage, Snowflake recommends implementing it for both.",
        "You can use Snowsight or SQL to manage the lifecycle of a network rule.",
        "You need the CREATE NETWORK RULE privilege on the schema to create a network rule. By default, only the ACCOUNTADMIN and SECURITYADMIN\nroles, along with the schema owner, have this privilege.",
        "The mode of a network rule that will be used by a network policy must be INGRESS or INTERNAL STAGE.",
        "To gain a better understand of best practices and strategies for creating network rules, see About network rules.",
        "You can create a network rule using Snowsight or by executing a SQL command:",
        "Sign in to Snowsight.",
        "Select Admin \u00bb Security.",
        "Select the Network Rules tab.",
        "Select + Network Rule.",
        "Enter the name of the network rule.",
        "Select the schema of the network rule. Network rule are schema-level objects.",
        "Optionally, add a descriptive comment for the network rule to help organize and maintain network rules in the schema.",
        "In the Type drop-down, select the type of identifier being defined in the network\nrule. The Host Port type is not a valid option for network rules being used with network policies.",
        "In the Mode drop-down, select Ingress or Internal Stage. The Egress mode is not a valid option for network\nrules being used with network policies.",
        "Enter a comma-separated list of the identifiers that will be allowed or blocked when the network rule is added to a network policy. The\nidentifiers in this list must all be of the type specified in the Type drop-down.",
        "Select Create Network Rule.",
        "An administrator can execute the CREATE NETWORK RULE command to create a new network rule, specifying a list of\nnetwork identifiers along with the type of those identifiers.",
        "For example, to use a custom role to create a network rule that can be used to allow or block traffic from a range of IP addresses:",
        "You can modify the network rule using Snowsight or SQL.",
        "Sign in to Snowsight.",
        "Select Admin \u00bb Security.",
        "Select the Network Rules tab.",
        "Find the network rule, select the \u2026 button, and then select Edit.",
        "Modify the network rule as needed.",
        "Select Update Network Rule.",
        "Execute an ALTER NETWORK RULE statement.",
        "Once you have grouped network identifiers into network rules, you are ready to add those network rules to the allowed list and blocked list\nof a new or existing network policy. There is no limit on how many network rules can be added to a network policy.",
        "For general information about how network policies control inbound access to the Snowflake service and internal stage, see\nAbout network policies.",
        "Network policies that were accessible from the Classic Console are no longer available in Snowsight. To access these\nnetwork policies in Snowsight, do the following:",
        "Log into the Classic Console and view your network policies.",
        "Call the POLICY_REFERENCES function to determine whether the network policy is set on your account or a\nuser in your account.",
        "Run the DESCRIBE NETWORK POLICY command to view the network policy details.",
        "Recreate the network policy to specify network rules.",
        "If the old network policy was assigned to either your account or a user in the account, reassign the new network policy to the same\naccount or user to activate the network policy.",
        "Only security administrators (i.e. users with the SECURITYADMIN role) or higher or a role with the global CREATE NETWORK POLICY\nprivilege can create network policies. Ownership of a network policy can be transferred to another role.",
        "Caution",
        "0.0.0.0/0 refers to all public and private IPv4 address ranges. Use a network rule to block public access and add the\nnetwork rule to the BLOCKED_NETWORK_RULE_LIST property of the network policy.",
        "The network policy evaluation considers any network rule properties before the ALLOWED_IP_LIST and BLOCKED_IP_LIST\nnetwork policy properties:",
        "The network rule TYPE property for AWSVPCEID and AZURELINKID takes precedence over any TYPE = IPV4\nvalue.",
        "If there are no network rules, the network policy evaluation considers the ALLOWED_IP_LIST and BLOCKED_IP_LIST\nnetwork policy properties and their values.",
        "Before you block all public access with a network rule, ensure that you have a network rule added to a network policy to allow access to\nSnowflake. If you are using private connectivity to the Snowflake service, such as AWS PrivateLink, configure this service and update the\nnetwork rule and network policy accordingly.",
        "If you try to create an empty network policy, no IPv4 addresses are allowed to access your Snowflake account.",
        "Caution",
        "When defining the network policy for a Snowflake Open Catalog account, ensure the allowed list of the network policy includes at least one IP\naddress that you intend to use to access the account. Otherwise, you may get locked out of the account.",
        "You can create a network policy using Snowsight or SQL:",
        "Sign in to Snowsight.",
        "Select Admin \u00bb Security.",
        "Select the Network Policies tab.",
        "Select + Network Policy.",
        "Enter the name of the network policy.",
        "Optionally, enter a descriptive comment.",
        "To add a network rule to the allowed list, select Allowed, and then select Select rule. You can add multiple network rules\nto the allowed list by re-selecting Select rule.",
        "To add a network rule to the blocked list, select Blocked, and then select Select rule. You can add multiple network rules\nto the blocked list by re-selecting Select rule.",
        "Select Create Network Policy.",
        "Execute a CREATE NETWORK POLICY statement.",
        "You can identify the network policies in your account using Snowsight or SQL.",
        "Sign in to Snowsight.",
        "Select Admin \u00bb Security.",
        "Select the Network Policies tab.",
        "Do one of the following:",
        "Call the POLICY_REFERENCES Information Schema table function.",
        "Query the POLICY_REFERENCES or\nNETWORK_POLICIES Account Usage view.",
        "Run the SHOW PARAMETERS command as follows:",
        "You can add or remove network rules from the allowed list and blocked list of an existing network policy using Snowsight or SQL. If\nyou are editing a network policy that uses the ALLOWED_IP_LIST and BLOCKED_IP_LIST parameters instead of a network rule, you\nmust use SQL to modify the network policy.",
        "Sign in to Snowsight.",
        "Select Admin \u00bb Security.",
        "Select the Network Policies tab.",
        "Find the network policy, select the \u2026 button, and then select Edit.",
        "To add a network rule to the allowed list, select Allowed, and then select Select rule. You can add multiple network rules\nto the allowed list by re-selecting Select rule.",
        "To add a network rule to the blocked list, select Blocked, and then select Select rule. You can add multiple network rules\nto the blocked list by re-selecting Select rule.",
        "To remove a network rule from the allowed list or blocked list of the network policy:",
        "Select Allowed or Blocked.",
        "Find the network rule in the list and select X to remove.",
        "Use the ALTER NETWORK POLICY command to add or remove network rules from an existing network policy.",
        "When adding a network rule to the allowed list or blocked list, you can either replace all existing network rules in the list or add the\nnew rule while keeping the existing list. The following examples show each of these options:",
        "Use the SET clause to replace network rules in the blocked list with a new network rule named other_network:",
        "Use the ADD clause to add a single network rule to the allowed list of an existing network policy. Network rules that were previously\nadded to the policy\u2019s allowed list remain in effect.",
        "You can also remove a network rule from an existing list without replacing the entire list. For example, to remove a network rule from\nthe network policy\u2019s blocked list:",
        "A network rule does not restrict inbound network traffic until it has been activated for an account, user, or security integration. For\ninstructions on how to activate at each level, see:",
        "Activate a network policy for your account",
        "Activate network policies for individual users",
        "Activate network policies for security integrations",
        "If you are activating multiple network policies at different levels (for example, both account- and user-level network policies), see\nNetwork policy precedence.",
        "Activating a network policy for an account enforces the policy for all users in the account.",
        "Only security administrators (i.e. users with the SECURITYADMIN role) or higher or a role with the global ATTACH POLICY privilege\ncan activate a network policy for an account.",
        "Once the policy is associated with your account, Snowflake restricts access to your account based on the allowed list and blocked\nlist. Any user who attempts to log in from an network origin restricted by the rules is denied access. In addition, when a network\npolicy is associated with your account, any restricted users who are already logged into Snowflake are prevented from executing further\nqueries.",
        "You can create multiple network policies, however only one network policy can be associated with an account\nat any one time. Associating a network policy with your account automatically removes the currently-associated network policy (if any).",
        "Note that your current IP address or private endpoint identifier must be included in the allowed list in the policy. Otherwise, when you\nactivate the policy, Snowflake returns an error. In addition, your current identifier cannot be included in the blocked list.",
        "If you want to determine whether there is already an account-level network policy before activating a new one, see\nIdentify an activated network policy.",
        "You can activate a network policy for your account using Snowsight or SQL:",
        "Select Admin \u00bb Security.",
        "Select the Network Policies tab.",
        "Find the network policy, select the \u2026 button, and then select Activate.",
        "Select Activate policy.",
        "Execute the ALTER ACCOUNT statement to set the NETWORK_POLICY\nparameter for the account. For example:",
        "To enforce a network policy for a specific user in your Snowflake account, activate the network policy for the user. Only a single network\npolicy can be activated for each user at a time. The ability to activate different network policies for different users allows for granular\ncontrol. Associating a network policy with a user automatically removes the currently-associated network policy (if any).",
        "Note",
        "Only the role with the OWNERSHIP privilege on both the user and the network policy, or a higher role, can activate a network policy\nfor an individual user.",
        "Once the policy is associated with the user, Snowflake restricts access to the user based on the allowed list and blocked\nlist. If the user with an activated user-level network policy attempts to log in from a network location restricted by the rules, the user\nis denied access to Snowflake.",
        "In addition, when a user-level network policy is associated with the user and the user is already logged into Snowflake, if the user\u2019s\nnetwork location does not match the user-level network policy rules, Snowflake prevents the user from executing further queries.",
        "If you want to determine whether there is already a user-level network policy before activating a new one, see\nIdentify an activated network policy.",
        "To activate a network policy for an individual user, execute the ALTER USER command to set the\nNETWORK_POLICY parameter for the user. For example, execute:",
        "Some security integrations support activating a network policy to control network traffic that is governed by that integration. These\nsecurity integrations have a NETWORK_POLICY parameter that activates the network policy for the integration. Currently,\nSCIM and Snowflake OAuth support integration-level network policies.",
        "Note",
        "A network policy that is activated for a security integration does not restrict access to an internal stage.",
        "For example, you could activate a network policy when creating a new Snowflake OAuth security integration. The network policy would restrict\nthe access of requests trying to authenticate.",
        "You can execute the ALTER SECURITY INTEGRATION \u2026 SET NETWORK_POLICY statement to activate a network policy for an existing security\nintegration.",
        "You can identify which network policy is activated at the account, user, or integration level.",
        "Select Admin \u00bb Security.",
        "Select the Network Policies tab.",
        "Sort the Status column to view the network policies.",
        "The Status column shows active and inactive network policies. Select the column value to view more details about the network\npolicy, edit the policy, and delete the network policy. You can activate and deactivate a network policy that is set on your account.",
        "Alternatively, you can call the POLICY_REFERENCES function and specify a network policy. The values in\nthe ref_entity_name and ref_entity_domain columns for an individual row indicate the object on which the network policy\nis set.",
        "Snowflake supports replication and failover/failback for network policies and network rules, including the assignment of the network policy.",
        "For details, refer to Replication of security integrations & network policies across multiple accounts.",
        "Note",
        "New features are not being released for Classic Console. Snowflake recommends using Snowsight or SQL so you can use network\nrules in conjunction with network policies.",
        "Only security administrators (i.e. users with the SECURITYADMIN role) or higher or a role with the global CREATE NETWORK POLICY\nprivilege can create network policies. Ownership of a network policy can be transferred to another role.",
        "Click Account  \u00bb Policies. The Policies page appears.",
        "Click the Create button. The Create Network Policy dialog appears.",
        "In the Name field, enter a name for the network policy.",
        "In the Allowed IP Addresses field, enter one or more IPv4 addresses that are allowed access to this Snowflake account, separated\nby commas.",
        "Note",
        "To block all IP addresses except for a set of specific addresses, you only need to define an allowed IP address list.\nSnowflake automatically blocks all IP addresses not included in the allowed list.",
        "In the Blocked IP Addresses field, optionally enter one or more IPv4 addresses that are denied access to this Snowflake account,\nseparated by commas. Note that this field is not required and is used primarily to deny specific addresses in a range of addresses in\nthe allowed list.",
        "Enter other information for the network policy, as needed, and click Finish.",
        "If you are using the Classic Console, do the following to modify a network policy:",
        "Click Account  \u00bb Policies.",
        "Click on a policy to select it and populate the side panel on the right.",
        "Click the Edit button in the right panel.",
        "Modify the fields as necessary:",
        "To remove an IP address from the Allowed IP Addresses or Blocked IP Addresses list, click the x next to the entry.",
        "To add an IP address to either list, enter one or more comma-separated IPv4 addresses in the appropriate field, and click the Add\nbutton.",
        "Click Save.",
        "If you are using the Classic Console, you can enforce a network policy for all users in your Snowflake account by activating the\nnetwork policy for your account.",
        "Click Account  \u00bb Policies.",
        "Click on a policy to select it and populate the side panel on the right.",
        "Click the Activate button in the right panel.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}