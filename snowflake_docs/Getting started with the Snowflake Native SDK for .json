{
    "url": "https://docs.snowflake.com/en/developer-guide/native-apps/connector-sdk/getting_started",
    "title": "Getting started with the Snowflake Native SDK for Connectors | Snowflake Documentation",
    "paragraphs": [
        "Preview Feature \u2014 Open",
        "Available to accounts in all regions in all cloud providers (including government regions). For details, contact your Snowflake representative.",
        "The Snowflake Native SDK for Connectors is a library that provides universal components that can be used to build a Snowflake native app\nthat ingests the data from an external data source into Snowflake. The provided components define the recommended flow\nof the connector application, allow customization, and provide building blocks for building ingestion logic.",
        "The Snowflake Native SDK for Connectors is distributed as code to be pulled and build locally.\nBelow you can find some information to get you familiarized with the structure of the SDK, how to use it in your project,\nhow to deploy and install an application and how to use it during development.",
        "The Snowflake Native SDK for Connectors consists of multiple parts, which will be described below.",
        "connectors-native-sdk",
        "This directory contains the actual Snowflake Native SDK for Connectors source code and tests.\nBecause of the nature of the native app inside Snowflake source code is not only Java code,\nbut also bundled SQL code with database objects definitions.",
        "The Java code is inside src/main directory as for any regular Java library. The same for the unit tests located inside src/test.\nAdditionally, inside src/ directory you can find intTest and appTest directories.\nThose are respectively integration and application tests. Both of those test types require connection to a Snowflake account.\nThe former ones test the SDK components using standalone database objects, while the latter deploy an actual application and run tests using it.",
        "SQL source files are contained inside src/main/resources directory. They are included inside jar archive when building the Snowflake Native SDK for Connectors.\nTo use them they need to be extracted from the jar and put inside a build target directory that will be copied to Snowflake stage inside application package.",
        "connectors-native-sdk-test",
        "This directory contains helper library designed to enable easier unit testing of the Connector based on the Snowflake Native SDK for Connectors.\nIt provides mock implementations for some of the database objects,\nspecially designed test builders that allow overwriting parts of the code not available for customization and some custom assertions based on the AssertJ library.",
        "Currently, installation and usage of the Snowflake Native SDK for Connectors requires the developer to perform some manual actions.",
        "The Snowflake Native SDK for Connectors library is available via Maven Central",
        "To access provided SQL files they need to be extracted to the target directory for the native app. To achieve this use the following gradle task definition (for now it has to be manually copied into the build.gradle file).",
        "To then run this task:",
        "The extracted SQL files can be then executed during the execution of the setup.sql for the Native App.",
        "The Snowflake Native SDK for Connectors is designed to be used with the Snowflake Native App Framework. This means that deployment and installation is happening the same way\nas it does for any other native app. This mean that first the Application Package needs to be created and all the files need to be uploaded into stage,\nrecommendation is to create stage inside the Application Package. If the above example script was used then all the required files from\nthe Snowflake Native SDK for Connectors should be already present in the target build directory of the Connector.\nThis means that its up to the developer to make sure that the custom code of the Connector and any Streamlit files are also there.\nFor more information check Create an application package.",
        "Once the Application Package is created and files are uploaded to stage, then a version of the application can be created. This step is optional during development,\nbecause Application Instance can be created directly from files in stage instead of using registered version.\nFor more information check Create an application object.",
        "The Snowflake Native SDK for Connectors provides objects and procedures that handle common use cases for each Connector application.\nThis includes things like configuration, lifecycle, ingestion definition, and so on. To review the full list of features, see the SDK reference.\nSome parts of the predefined features can be customized, for more information on that check Stored procedures and handlers customization.",
        "As mentioned before Connectors Native SDK contains different types of tests.\nThis includes unit tests, integration tests and so called application tests.\nThe unit tests use features provided in the aforementioned connectors-native-sdk-test.\nAs for integration and application tests they require connection to Snowflake.\nConnection details can be defined using the .env/snowflake_credentials file.\nApplication tests directory also contains an empty connector application in resource.\nThat application is deployed during the test suite execution",
        "Additional resources:",
        "Snowflake Native SDK for Connectors Java API Reference",
        "Snowflake Native SDK for Connectors Java API TEST Reference",
        "Snowflake Native SDK for Connectors quickstart",
        "For hands-on experience implementing your own connector, try the Tutorial: Native SDK for Connectors Java Template.",
        "Tutorial: Native SDK for Connectors Java Template",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}