{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/reference/python/1.26.0/modin/general_functions",
    "title": "General functions | Snowflake Documentation",
    "paragraphs": [
        "All supported general functions",
        "Data manipulations",
        "melt(frame[,\u00a0id_vars,\u00a0value_vars,\u00a0var_name,\u00a0...])",
        "Unpivot a DataFrame from wide to long format, optionally leaving identifiers set.",
        "crosstab(index,\u00a0columns[,\u00a0values,\u00a0rownames,\u00a0...])",
        "Compute a simple cross tabulation of two (or more) factors.",
        "pivot(data[,\u00a0index,\u00a0columns,\u00a0values])",
        "Return reshaped DataFrame organized by given index / column values.",
        "pivot_table(data[,\u00a0values,\u00a0index,\u00a0columns,\u00a0...])",
        "Create a spreadsheet-style pivot table as a DataFrame.",
        "cut(x,\u00a0bins[,\u00a0right,\u00a0labels,\u00a0retbins,\u00a0...])",
        "Bin values into discrete intervals.",
        "qcut(x,\u00a0q[,\u00a0labels,\u00a0retbins,\u00a0precision,\u00a0...])",
        "Quantile-based discretization function.",
        "concat(objs[,\u00a0axis,\u00a0join,\u00a0ignore_index,\u00a0...])",
        "Concatenate pandas objects along a particular axis.",
        "get_dummies(data[,\u00a0prefix,\u00a0prefix_sep,\u00a0...])",
        "Convert categorical variable into dummy/indicator variables.",
        "merge(left,\u00a0right[,\u00a0how,\u00a0on,\u00a0left_on,\u00a0...])",
        "Merge DataFrame or named Series objects with a database-style join.",
        "merge_asof(left,\u00a0right[,\u00a0on,\u00a0left_on,\u00a0...])",
        "Perform a merge by key distance.",
        "unique(values)",
        "Return unique values based on a hash table.",
        "Top-level missing data",
        "isna(obj)",
        "Detect missing values for an array-like object.",
        "isnull(obj)",
        "Detect missing values for an array-like object.",
        "notna(obj)",
        "Detect non-missing values for an array-like object.",
        "notnull(obj)",
        "Detect non-missing values for an array-like object.",
        "Top-level dealing with numeric data",
        "to_numeric(arg[,\u00a0errors,\u00a0downcast])",
        "Convert argument to a numeric type.",
        "Top-level dealing with datetimelike data",
        "date_range([start,\u00a0end,\u00a0periods,\u00a0freq,\u00a0tz,\u00a0...])",
        "Return a fixed frequency DatetimeIndex.",
        "bdate_range([start,\u00a0end,\u00a0periods,\u00a0freq,\u00a0tz,\u00a0...])",
        "Return a fixed frequency DatetimeIndex with business day as the default.",
        "to_datetime(arg[,\u00a0errors,\u00a0dayfirst,\u00a0...])",
        "Convert argument to datetime.",
        "Was this page helpful?"
    ]
}