{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-python-api/reference/latest/_autosummary/snowflake.core.service.ServiceResource",
    "title": "snowflake.core.service.ServiceResource | Snowflake Documentation",
    "paragraphs": [
        "Bases: SchemaObjectReferenceMixin[ServiceCollection]",
        "Represents a reference to a Snowflake Snowpark Container Service.",
        "With this service reference, you can create, alter, and fetch information about services, as well\nas perform certain actions on them.",
        "Attributes",
        "Methods",
        "Create a service in Snowflake or alter one if it already exists.",
        "service (Service) \u2013 The Service object, together with the Service\u2019s properties:\nname, compute_pool, spec; auto_resume, min_instances, max_instances, status, external_access_integrations,\nquery_warehouse, comment are optional.",
        "Examples",
        "Creating or updating a service in Snowflake:",
        "The delete method is deprecated; use drop instead.",
        "Drop the service.",
        "if_exists (bool, optional) \u2013 Check the existence of this service before dropping it.\nDefault is None, which is equivalent to False.",
        "Examples",
        "Deleting a service using its reference:",
        "Fetch the details of a service.",
        "Examples",
        "Fetching a service using its reference:",
        "Show the containers corresponding to this service.",
        "Examples",
        "Showing the containers of a service using its reference:",
        "Show the endpoints corresponding to this service.",
        "Examples",
        "Showing the endpoints of a service using its reference:",
        "Show the instances corresponding to this service.",
        "Examples",
        "Showing the instances of a service using its reference:",
        "Show the roles corresponding to this service.",
        "Examples",
        "Showing the roles of a service using its reference:",
        "Get the service logs of the service.",
        "instance_id (str) \u2013 Instance ID of the service.",
        "container_name (str) \u2013 Container name of the service.",
        "num_lines (int, optional) \u2013 Number of the most recent log lines to retrieve.",
        "get_service_status() returns the instance_id and container_name as a part of its results.",
        "Examples",
        "Getting the logs of a service using its reference:",
        "Get the status of the service.",
        "timeout (int) \u2013",
        "Number of seconds to wait for the service to reach a steady state (for example, READY)\nbefore returning the status. If the service does not reach steady state within the specified time,\nSnowflake returns the current state.",
        "If not specified or 0, Snowflake returns the current state immediately.",
        "Default: 0 seconds.",
        "",
        "Examples",
        "Getting the status of a service using its reference:",
        "Getting the status of a service using its reference with a timeout:",
        "Show the grants of the service role associated with this service.",
        "role_name (str) \u2013 Name of the service role.",
        "Examples",
        "Showing the grants of the service role associated with a service using the service reference:",
        "Show the grants given to the service role associated with this service.",
        "role_name (str) \u2013 Name of the service role.",
        "Examples",
        "Showing the grants given to the service role associated with a service using the service reference:",
        "Resumes the service.",
        "if_exists (bool, optional) \u2013 Check the existence of this service before resuming it.\nDefault is None, which is equivalent to False.",
        "Examples",
        "Resuming a service using its reference:",
        "Suspend the service.",
        "if_exists (bool, optional) \u2013 Check the existence of this service before suspending it.\nDefault is None, which is equivalent to False.",
        "Examples",
        "Suspending a service using its reference:",
        "Was this page helpful?"
    ]
}