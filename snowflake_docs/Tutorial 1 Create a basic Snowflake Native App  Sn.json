{
    "url": "https://docs.snowflake.com/en/developer-guide/native-apps/tutorials/getting-started-tutorial",
    "title": "Tutorial 1: Create a basic Snowflake Native App | Snowflake Documentation",
    "paragraphs": [
        "Feature \u2014 Generally Available",
        "The Snowflake Native App Framework is generally available on supported cloud platforms. For additional information, see\nSupport for private connectivity, VPS, and government regions.",
        "The Snowflake Native App Framework allows providers to build, sell, and distribute a Snowflake Native App within the\nSnowflake Data Cloud. Providers can create apps that leverage core Snowflake functionality to share data\nand application logic with consumers. The logic of Snowflake Native App can include features such as stored procedures,\nand user-defined functions (UDFs). Providers can share their applications with consumers through listings in the\nSnowflake Marketplace or through private listings.",
        "This tutorial describes how to use the Snowflake Native App Framework to create a basic Snowflake Native App to share data and related business logic\nwith other Snowflake accounts.",
        "Note",
        "The tutorial uses both Snowflake CLI and the Snowsight web interface.",
        "In this tutorial, you learn how to:",
        "Create an application package that contains the data and business logic of your app.",
        "Share data with an application package.",
        "Add business logic to an application package.",
        "Test the app locally.",
        "View and test the app in Snowsight.",
        "Publish your app by creating a private listing.",
        "Install the app from a private listing.",
        "Use Snowflake CLI to perform many of the steps above.",
        "Within the context of the Snowflake Native App Framework, providers are the roles and\norganizations who have data and business logic that they want to share with\nother Snowflake users, who are the consumers. A consumer can be another account\nwithin your organization, a different organization within your company, or a\nSnowflake user in another company.",
        "Within the context of this tutorial, most of the tasks you perform are\nthose typically performed by providers, but these include tasks that may be performed\nby multiple roles within your organization including application developers and database\nadministrators.",
        "In this tutorial, you also perform tasks that mimic the actions performed\nby consumers to install an app.",
        "You must have Snowflake CLI installed on your machine.",
        "You must run all of the SQL commands in the same SQL command session because the session\ncontext is required.",
        "To do this in Snowsight, for example, paste all of your code into the same worksheet as\nyou go along. As you progress from section to section, each section builds on the previous.",
        "You must be able to use the ACCOUNTADMIN role.",
        "In this tutorial, you perform all the steps using the ACCOUNTADMIN role. In general practice,\nhowever, you would use roles with privileges specifically defined for the action you\u2019re performing.\nFor example, you might have separate roles for developers who create UDFs and stored procedures,\nfor database administrators who manage roles and permissions, and for administrators who\nmanage listings\nusing Snowflake Collaboration.",
        "To install your app from a private listing, you must have access to a second Snowflake account.\nYou use this account to mimic how consumers would install an app.",
        "Note",
        "Although the Snowflake Native App Framework supports sharing apps with accounts in different\norganizations, for the purposes of this tutorial, both accounts must be in the same organization.",
        "You must set a current warehouse. See USE WAREHOUSE.",
        "In this section, you create a setup script, a manifest file and a project definition file.\nThe first two of these files are required by the Snowflake Native App Framework.",
        "An SQL script that runs automatically when a consumer installs an app in\ntheir account.",
        "A YAML file that contains basic configuration information about the app.",
        "A YAML file that contains information about the Snowflake objects that you want to create.",
        "You learn more about these files, and their contents, throughout this tutorial. You\nalso create a readme file that is useful when viewing and publishing your app in\nlater sections of this tutorial.",
        "You use Snowflake CLI to initialize a new Snowflake Native App project in your local filesystem.",
        "To do this, execute the following command:",
        "This command creates a folder named tutorial inside the current working directory and\npopulates it with a basic Snowflake Native App project based on a basic template. This is\nthe root directory for all of your application files.",
        "Note",
        "You modify and add files and subfolders to this folder in later sections.",
        "Note",
        "There are other templates available to help you quickly get up-and-running with Native\nApplications. Please consult snow init --help for more information.",
        "Modify or replace the contents of the app/setup_script.sql file as shown in the following\nexample:",
        "This line is a placeholder because the setup script cannot be empty.",
        "Note",
        "This tutorial refers a particular structure and filename for the setup\nscript. However, when building your own app you can choose your\nown name and directory structure for this file.",
        "A readme file provides a description of what your application does. You see the\nreadme when you view your app in Snowsight.",
        "Modify or replace the contents of app/README.md with the following:",
        "The Snowflake Native App Framework requires a manifest file for each app. The manifest file\ncontains metadata and configuration parameters for an app and influences the\nrun-time behavior of your app.",
        "Note",
        "This file must be named manifest.yml. Paths to other files,\nincluding the setup script, are relative to the location of this file.",
        "Modify or replace the contents of the app/manifest.yml with the following:",
        "The setup_script property specifies the location of the setup script\nrelative to the location of the manifest file. The path and file name\nspecified here must be the same as the relative location of the setup\nscript you modified above. The readme property follows the same rules.",
        "Note",
        "The manifest_version, artifacts, and setup_script properties are required.\nThe readme property is optional.",
        "Snowflake CLI uses a project definition file to describe objects that can be deployed to Snowflake.\nThis file must be named snowflake.yml. This file controls the name of the deployed application\npackage and object, as well as which files are uploaded to the project stage.",
        "Note",
        "This file must be named snowflake.yml and it must exist at the\nroot level of your project. Paths to other files, such as the manifest.yml and the\nsetup script are relative to the location of this file.",
        "Modify or replace the contents of the snowflake.yml with the following:",
        "The next section of this tutorial describe how to use each of these properties.",
        "After performing the steps in this section, you should now have a directory structure that\nlooks like the following:",
        "In this section you learned how to create the setup script and manifest files that are required\nby the Snowflake Native App Framework and the project definition file that is required by the Snowflake CLI.",
        "Although the content you added to both the setup script and manifest file is basic, all apps\nmust have these files.",
        "You also added a readme file that is displayed when viewing your app in Snowsight\nor when publishing your app as a listing.",
        "In this section you learn about the contents of the\nproject definition file (snowflake.yml) you created\nin the previous section. You also perform additional setup tasks for your provider account.",
        "At its core, an application package is a Snowflake database that is extended to include additional\ninformation about an app. In that sense, it is a container for an app that includes:",
        "Shared data content",
        "Application files",
        "To create an application package, your role must have the CREATE APPLICATION PACKAGE privilege. To\ngrant this privilege using the Snowflake CLI, run the following command:",
        "where connection_name is the name of the connection you specified in your config.toml file when you\ninstalled the Snowflake CLI.",
        "Note",
        "Although the ACCOUNTADMIN role has this privilege by default, to be able to create an application\npackage, you must ensure that your role has been granted this privilege.",
        "The project definition file (snowflake.yml) defines the names of objects that are created in\nyour Snowflake account:",
        "The application package (hello_snowflake_package)",
        "The application object (hello_snowflake_app) that is created from the application package",
        "The stage that holds application files (stage_content.hello_snowflake_stage)",
        "Note that the name of the stage is specified as a schema-qualified name. This schema is created inside\nthe application package. This named stage is used to store the files required by the\nSnowflake Native App Framework. This stage must include any files you want available to the setup script of your app setup\nscript or at runtime.",
        "There is also a section called artifacts in the project definition file which\nis a list of rules that specify which files are copied to the named stage.",
        "The rule specifies that anything in the app/ subfolder is copied to the root of the stage. This\nmeans the following:",
        "tutorial/app/manifest.yml is uploaded to the root of @hello_snowflake_package.stage_content.hello_snowflake_stage.",
        "tutorial/app/README.md is uploaded to the root of @hello_snowflake_package.stage_content.hello_snowflake_stage.",
        "tutorial/app/setup_script.sql is uploaded to the root of @hello_snowflake_package.stage_content.hello_snowflake_stage.",
        "You are not yet creating the application package or executing any SQL commands that perform\nthese tasks. In a later section, you run the Snowflake CLI command to perform these tasks.",
        "Finally, you set debug: false inside of the app definition. For applications deployed using\nthe Snowflake CLI, debug mode is enabled by default.",
        "In this section you learned that an application package is a container for the resources used by an\napp. You also learned the how to set the fields in the project definition file.",
        "In this section, you add code to the application package and install your first app. To do\nthis, you perform the following tasks:",
        "Add a stored procedure to the setup script.",
        "Install and test the app in stage dev mode.",
        "In this section, you add a stored procedure to the app by adding the code for the\nstored procedure to the setup script on your local file system.",
        "To add a stored procedure to the setup script:",
        "Add the following SQL statements at the end of the setup_script.sql file that you created\nin an earlier section of this tutorial:",
        "When the setup script runs during app installation, these statements create an application\nrole named app_public. Application roles are similar to database roles, but they can\nonly be used within the context of an app. They are used to grant access to objects\nwithin the application object that is created in the consumer account.",
        "This example also creates a schema to contain the stored procedure and grants the USAGE\nprivilege on the schema to the application role. Creating an application role and granting\nprivileges on an object, for example a schema, to the application role is a common pattern\nwithin the setup script.",
        "Add the code for the stored procedure at the end of the setup_script.sql file:",
        "This example creates a stored procedure that outputs the string \u201cHello Snowflake!\u201d.",
        "Add the following statement to the end of the setup_script.sql file:",
        "This example grants the USAGE privilege on the stored procedure to the application role.",
        "In this section you added a stored procedure to the setup script. You also created an\napplication role and granted the USAGE privilege to this role. This allows the setup script\nto create the stored procedure when the app is installed. It also gives the app\npermission to run the stored procedure.",
        "You are now ready to create the application package, the app and all the other entities you\nspecified in the project definition file.",
        "To perform these tasks, run the following Snowflake CLI command:",
        "where connection_name is the name of the connection you specified in your config.toml file\nwhe you installed the Snowflake CLI.",
        "This command performs the following tasks:",
        "Create an application package name hello_snowflake_package with schema stage_content and\nstage hello_snowflake_stage.",
        "Upload all required files to the named stage.",
        "Create or upgrade the app hello_snowflake_app using files from this stage.",
        "If the command runs successfully, it outputs a URL where you can see your app in\nSnowsight. To run the HELLO stored procedure that you added to setup_script.sql\nin a previous section, run the following Snowflake CLI command:",
        "You should see the following output after running this command:",
        "Congratulations! You have created, installed, and tested your first Snowflake Native App using the Snowflake Native App Framework!\nAlthough the app only has basic functionality, the components you used to build the app are the same\nfor more complex apps.",
        "In this section you completed the following:",
        "Added a stored procedure to the setup script. The setup script specifies how your app is\ninstalled in the consumer account. In later sections you add data content and other types of\napplication logic to your app.",
        "Deployed your app for the first time using Snowflake CLI.",
        "Tested your installed app by running a stored procedure.",
        "In later sections you learn about other ways to view and test your app.",
        "In the previous section you created an app that contains a stored procedure that demonstrates\nhow you would add application logic to an app.",
        "In this section you include data content in your app by creating a database within\nthe HELLO_SNOWFLAKE_PACKAGE application package and granting privileges to share this\ndatabase with the app.",
        "In this section you learn how to share data content with an app. Specifically,\nyou share a table in the provider account by granting privileges on the schema and\ntable to the application package.",
        "To create a table and insert the sample data in the application package,\ncreate a folder tutorial/scripts, then a file shared_content.sql inside\nthe folder. Add the following contents to this file:",
        "In this example, <% ctx.entities.hello_snowflake_package.identifier %> is a template that is replaced by the resolved identifier\nof your application package from the snowflake.yml file when you execute a Snowflake CLI command.",
        "Granting these privileges on the objects within the application package makes the shared_data.accounts\ntable available to all objects created from this application package. This sharing\ntakes place due to the privileges GRANT TO SHARE command at the end of the script.",
        "Note",
        "You must grant the USAGE privilege on each schema to an application package for each schema\nyou want to share with a consumer in an app. You must then grant the SELECT privilege\non the objects within the schema that you want to share.",
        "Add an entry to the project definition file to ensure that this script runs when you\nupdate your application package. The final project definition file should be:",
        "Note",
        "Because the script is executed directly from your local machine, it is not necessary (nor recommended)\nto add post-deploy hooks to the artifacts section of your project definition file.",
        "Note",
        "Because post-deploy hooks are executed every time you deploy an app, they must be written in an\nidempotent manner.",
        "In this section you update the setup script to add a view that allows the consumer who installed\nthe app to access the data in the ACCOUNTS table that you created in the previous section.",
        "To add a view to access data content:",
        "To create a schema for the view, add the following to the setup script:",
        "These statements create a versioned schema to contain the view and grant the USAGE privilege on\nthe schema. The Snowflake Native App Framework uses versioned schema to handle different versions of\nstored procedures and functions.",
        "To create the view, add the following to the setup script:",
        "These statements create the view in the code_schema schema and grant the required privilege\non the view to the application role.",
        "This updated setup script is also uploaded to the stage the next time you deploy your app\nusing Snowflake CLI.",
        "In this subsection, you upgrade the app and query the example table using the view within the\ninstalled app.",
        "To test the updated app, follow these steps:",
        "To update the application package and the application object installed in the consumer account,\nrun the following command:",
        "where connection_name is the name of the connection you specified in the config.toml\nfile when you installed the Snowflake CLI.",
        "This uploads all the edited files to the stage, runs the scripts/shared_content.sql script,\nand upgrade the app using those files on the stage.",
        "To verify that the view works correctly, run the following command:",
        "The output of this command should be:",
        "In this section you learned how to include shared data content in your app by\nperforming the following tasks:",
        "Created the ACCOUNTS table within the application package and inserted data into the table.",
        "Granted reference usage on the ACCOUNTS table to the application package.",
        "Created a schema and view that references the ACCOUNTS table in the application package.",
        "Granted usage on the schema to the application role.",
        "Granted select on the view to the application role.",
        "You also updated the setup script to perform the following when the application is installed:",
        "Created a schema and view that the app uses to access the example data.",
        "Granted usage on the schema to the application role.",
        "Granted select on the view to the application role.",
        "In this section, you expand the functionality of your app by adding\nPython code to enhance the application logic. In this section you include Python\ncode as the following:",
        "An inline Python UDF that is a self-contained function in the setup script.",
        "A Python UDF that references a Python file outside the setup script.",
        "Note",
        "Although this section introduces examples using Python, the same techniques are\napplicable to Java and JavaScript.",
        "In this section you add a Python function as a UDF.",
        "To include a Python UDF in your app, add the following code to your setup file.",
        "These commands perform the following tasks when the app is installed:",
        "Create a versioned schema named code_schema.",
        "Grant the usage privilege on the schema to the APP_PUBLIC application role.",
        "Create the ADDONE() UDF in the code_schema schema.",
        "Grant the usage privilege on the function to the APP_PUBLIC application role.",
        "Note that the schema created in the code example above is a versioned schema. User-defined functions\nand stored procedures must be defined in a versioned schema instead of a normal schema. This prevents\napp upgrades from interfering with concurrent code execution.",
        "To add an external python module to your app:",
        "Add the following Python function to your setup script:",
        "Similar to the previous example, these statement create a Python UDF in a schema and grants\nprivileges on the function to the application role. However, this example contains an\nIMPORTS clause that refers to an external Python file that you create and include in\nyour named stage.",
        "In the tutorial folder create a subfolder named python.",
        "In the python subfolder, create a file named hello_python.py.",
        "Add the following to the hello_python.py file:",
        "The function defined in this external file matches the inline function defined\nin the setup script.",
        "Add the following to the existing artifacts section of the project definition file:",
        "In this section, you added a Python UDF to your app. This UDF refers to an external Python\nmodule that can be referenced by your application package.",
        "To install and test an app:",
        "To update the application package and the app, run the following command:",
        "where connection_name is the name of the connection you specified in your config.toml when you\ninstalled the Snowflake CLI.",
        "This command uploads the edited and new files to the stage and upgrades your app using the files\non the stage.",
        "To test the Python stored procedure, run the following command:",
        "To test the referenced Python function, run the following command:",
        "In this section, you added the following new functionality to your app:",
        "A Python function defined as an inline UDF.",
        "A Python function defined as a UDF that references external code.",
        "You also tested each of these examples by installing an updated version of your\napp and running each of the functions.",
        "In this section, you complete your Snowflake Native App by adding a Streamlit user interface.\nStreamlit is an open source Python framework for developing data science and machine learning\napplications. You can include Streamlit apps within a app to add user interaction and\ndata visualization.",
        "To create a Streamlit app, follow these steps:",
        "In the tutorial folder, create a subfolder named streamlit.",
        "In the streamlit folder, create a file named hello_snowflake.py.",
        "Add the following code to this file:",
        "Add the following to the existing artifacts section of the project definition file:",
        "To create the Streamlit object in the app, follow these steps:",
        "Add the following statement at the end of the setup_script.sql file to create the Streamlit object:",
        "This statement creates a STREAMLIT object in the core schema.",
        "Add the following statement at the end of the setup_script.sql file to allow the APP_PUBLIC role to\naccess the Streamlit object:",
        "To update the application package and the app, run the following command:",
        "where connection_name is the name of the connection you specified in the config.toml file\nwhen you installed the Snowflake CLI.",
        "This command uploads the edited and new files to the stage and upgrades your app using those files\non the stage. You can then navigate to the URL this command prints out to see your new Streamlit in\naction; once you are there, click on the tab named HELLO_SNOWFLAKE_STREAMLIT that appears beside\nthe name of your application.",
        "In this section you added a Streamlit app to your Snowflake Native App by doing the following:",
        "Created a python file that uses the Streamlit library to render a user interface.",
        "Created a Streamlit app in your Snowflake Native App that displays shared data.",
        "In previous sections, you have been using a \u201cstage development\u201d mode to push changes.\nThe stage development mode allows you to quickly iterate app development without having to create\nnew versions or patches. However, you must create a version of the app to list your application package\nand share it with other Snowflake users.",
        "In this section, you add a version to your app that includes all of the functionality you have\nadded in this tutorial.",
        "To add a version to the HELLO_SNOWFLAKE_PACKAGE application package, run the following command:",
        "In this command, you modified your application package to add a version based on the\napplication files that you uploaded to the named stage in an earlier section.",
        "Note",
        "The value specified for VERSION is a label, not a numerical value or string.",
        "Note",
        "The patch number for the new version you added is automatically created at 0. As you add\nadditional patches for a version, these are automatically incremented. However, when\nyou create a new version, for example V1_1, the patch number for that version is reset\nto 0.",
        "To verify that the version was added to the application package, run the following command:",
        "This command shows additional information about the version as shown in the following output:",
        "To install the app based on a version, run the following command:",
        "Because the existing app was created using files on the named stage, upgrading the app\nusing a version requires the existing app to be dropped and recreated with this version.\nAnswer yes to the prompt accordingly.",
        "In this section, you modified the application package to include a version for your\napp and re-created the application object using versioned development mode.",
        "In this section, you view your app in Snowsight. In previous sections, you used\nSQL statements to test or find information about your app. However, you can also view information\nabout your app in Snowsight. You can also view your deployed Streamlit app.",
        "To view your app in Snowsight, follow these steps:",
        "Sign in to Snowsight.",
        "Switch to the ACCOUNTADMIN role by doing the following:",
        "In the navigation menu, select your username to open the account menu.",
        "Select the active role. For example, PUBLIC.",
        "The role selector appears.",
        "Select the ACCOUNTADMIN role.",
        "Select Data Products \u00bb Apps.",
        "Select HELLO_SNOWFLAKE_APP.",
        "The Read Me tab displays the content you added to the app/README.md file in an earlier section.",
        "To view your Streamlit app, select HELLO_SNOWFLAKE_STREAMLIT.",
        "The content of the HELLO_SNOWFLAKE_DATA database displays in a Streamlit data frame.",
        "To open the app in a worksheet, select Projects \u00bb Worksheets.",
        "Select HELLO_SNOWFLAKE_APP from the list of worksheets.",
        "If necessary, select the warehouse where you installed the app.",
        "From the Snowflake worksheet you can test your app using SQL commands. For example, you can\nre-run the commands you ran in previous sections to test the features you added to your application:",
        "Note",
        "Any SQL statements that you add to this worksheet are lost when you navigate to a\ndifferent page in Snowsight.",
        "Note",
        "You can also directly view your app\u2019s user interface by using the snow app open\ncommand in Snowflake CLI. This command opens the appropriate URL in your\nsystem-configured web browser.",
        "In this section, you publish your app by creating a private listing\nthat uses the application package as the data content. After creating the listing,\nyou login to another account to install the listing.",
        "Before you can create a listing for your application package, you must\nset the release directive. A release directive specifies which version and patch of your app\nis available to consumers.",
        "In this tutorial you set the default release directive using the version you\nadded in a previous section.",
        "To set the default release directive on the application package, follow these steps:",
        "To view the versions and patches defined for your application package, run the\nfollowing command:",
        "This command displays the versions and patches defined for the application package.",
        "To set the default release directive to version v1_0 and patch 0, run the following\ncommand:",
        "The output of this command is shown in the following example:",
        "In this section, you verified what versions and patches exist in your application package.\nUsing this information, you defined the default release directive for the application package.",
        "Now that you have specified a release directive for your application package, you\ncreate a listing and add the application package as the data content of the listing. This\nallows you to share your app with other Snowflake users and allows them to install\nand use the app in their account.",
        "To create a listing for your app:",
        "Sign in to Snowsight.",
        "In the navigation menu, select Data Products \u00bb Provider Studio.",
        "Select + Listing. The Create Listing window opens.",
        "Enter a name for your listing.",
        "In the Who can discover the listing section, select Only specified consumers\nto privately share the listing with specific accounts.",
        "Click + Select to select the application package for the listing.",
        "Enter a description for your listing.",
        "In the Add consumer accounts section, add the account identifier for the account\nyou are using to test the consumer experience of installing the app from a listing.",
        "In this section you created a private listing containing your application package as the\nshared data content.",
        "In this section you install the app associated with the listing you created\nin the previous section. You install the listing in a different account which mimics\nhow a consumer would install the app in their account.",
        "To install your app from the listing, follow these steps:",
        "Sign in to Snowsight.",
        "In the navigation menu, select Data Products \u00bb Apps.",
        "Select the tile for the listing under Recently shared with you.",
        "Select Get.",
        "Enter a customer-facing name for the app. For this tutorial, use \u201cHello Snowflake App\u201d.",
        "Select the warehouse where you want to install the app.",
        "Select Get.",
        "Select Open to view your listing or Done to finish.",
        "In this section you learned how to publish and install a listing that allows you to share\nyour app with other Snowflake users.",
        "Congratulations! Not only have you finished this tutorial, but you have worked through\ndevelopment and publishing life cycle of an app using the Snowflake Native App Framework.",
        "Along the way, you:",
        "Used Snowsight and Snowflake CLI to build an app using the\nSnowflake Native App Framework.",
        "For more information about Snowsight, refer to\nGetting started with worksheets and\nWork with worksheets in Snowsight.",
        "For more information about Snowflake Native App in Snowflake CLI, refer to\nUsing Snowflake Native App in Snowflake CLI.",
        "Created the manifest and setup script that are required by all apps.",
        "Refer to Create the manifest file for an application package and\nCreate a setup script for details.",
        "Created an application package that works as a container for the application logic and\ndata content of your app.",
        "Refer to Create an application package for details.",
        "Added logic to your app using stored procedures and UDFs written in Python.",
        "Refer to Add application logic to an application package for information\non using stored procedures, UDFs, and external function in the Snowflake Native App Framework.",
        "Refer to Snowpark API, Extending Snowflake with Functions and Procedures\nand Writing external functions for general information on each type of\nprocedure and function.",
        "Added shared data content to your app.",
        "Refer to Share data content in a Snowflake Native App for additional information.",
        "Included a Streamlit app in your app.",
        "Refer to Add a Streamlit app for additional information.",
        "Viewed your app in Snowsight.",
        "Refer to Working with Apps as a Consumer",
        "Created a private listing for your app and installed the app in a\nseparate Snowflake account.",
        "Refer to Sharing an App with Consumers\nfor information on publish a listing containing an application package.",
        "Refer to Installing an App from a Listing\nfor information on how consumers install an app from a listing.",
        "Was this page helpful?"
    ]
}