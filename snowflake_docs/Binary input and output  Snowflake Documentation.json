{
    "url": "https://docs.snowflake.com/en/sql-reference/binary-input-output",
    "title": "Binary input and output | Snowflake Documentation",
    "paragraphs": [
        "Snowflake supports three binary formats or encoding schemes: hex, base64, and UTF-8.",
        "This section describes the supported binary formats.",
        "The \u201chex\u201d format refers to the hexadecimal, or base 16, system. In this format, each byte is represented by two characters\n(digits from 0 to 9 and letters from A to F). When using hex to perform conversion:",
        "From",
        "To",
        "Notes",
        "Binary",
        "String",
        "hex uses uppercase letters.",
        "String",
        "Binary",
        "hex is case-insensitive.",
        "Hex is the default binary format.",
        "The \u201cbase64\u201d format encodes binary data (or string data) as printable ASCII characters (letters,\ndigits, and punctuation marks or mathematical operators).\n(The base64 encoding scheme is defined in RFC 4648.)",
        "Base64-encoded data has the following advantages:",
        "Because base64-encoded data is pure ASCII text, it can be stored in systems that support ASCII character data but\nnot BINARY data. For example, binary data that represents music (digital samples), or UTF data that represents\nMandarin language characters, can be encoded as ASCII text and stored in systems that support only ASCII characters.",
        "Because base64-encoded data doesn\u2019t contain control characters (for example, end-of-transmission characters, tab characters),\nbase64-encoded data can be transmitted and received without risk that control characters could\nbe interpreted as commands rather than as data. Base64-encoded data is compatible with older modems and\nother telecommunications equipment that transmit and receive data one character at a time (without packet headers\nor protocols that indicate which parts of a packet are data and which are header or control information).",
        "Base64-encoded data has the following disadvantages:",
        "Converting data back and forth between binary and printable ASCII representations consumes computation resources.",
        "Base64-encoded data requires approximately 1/3 more storage space than the original data.",
        "The following sections provide technical details on base64 encoding.",
        "Each group of three 8-bit bytes (a total of 24 bits) of binary data is re-arranged into four groups of 6 bits each\n(still 24 bits). Each of the 64 possible combinations of 6 bits is represented by one of the following 64 printable\nASCII characters:",
        "Uppercase letters (A - Z)",
        "Lowercase letters (a - z)",
        "Decimal digits  (0 - 9)",
        "+",
        "/",
        "In addition, the character = is used for padding if the length of the input that isn\u2019t an exact multiple of 3.",
        "Because base64-encoded data doesn\u2019t contain whitespace characters (for example, blanks and line breaks), base64-encoded\ndata can be mixed with whitespace if desired. For example, if the transmitter or receiver has a maximum limit\non line length, the base64-encoded data can be split into individual lines by adding newline characters without\ncorrupting the data. When using base64 to perform conversion:",
        "From",
        "To",
        "Notes",
        "Binary",
        "String",
        "Base64 does not insert any whitespace or line breaks.",
        "String",
        "Binary",
        "Base64 ignores all whitespace and line breaks.",
        "The UTF-8 format refers to the UTF-8 character encoding for Unicode.",
        "UTF-8 is used for text-to-binary encoding. UTF-8 can\u2019t be used for binary-to-text encoding because not all possible BINARY values\ncan be converted to valid UTF-8 strings.",
        "This format is convenient for performing one-to-one conversion between binary and string, for reinterpreting the underlying data\nas one type or the other rather than actually encoding and decoding.",
        "There are two session parameters that determine how binary values are passed into and out of Snowflake:",
        "BINARY_INPUT_FORMAT: Specifies the format of VARCHAR input to functions that convert from VARCHAR to BINARY.\nIt is used for:",
        "Performing conversion to BINARY in the one-argument version of TO_BINARY.",
        "Loading data into Snowflake (if no file format option is specified; see below for details).",
        "The parameter can be set to HEX, BASE64, or UTF-8 (or UTF8).\nThe parameter values are case-insensitive. The default is HEX.",
        "BINARY_OUTPUT_FORMAT: Specifies the format of VARCHAR output from functions that convert from BINARY to VARCHAR.\nIt is used for:",
        "Performing conversion to VARCHAR in the one-argument version of TO_CHAR , TO_VARCHAR.",
        "Unloading data from Snowflake (if no file format option is specified; see below for details).",
        "Displaying binary data in human-readable format (for example, in the Snowflake web interface) when no binary-to-varchar conversion\nwas called explicitly.",
        "The parameter can be set to HEX or BASE64. The parameter values are case-insensitive. The default is HEX.",
        "Note",
        "Because conversion from binary to string can fail with the UTF-8 format, BINARY_OUTPUT_FORMAT can\u2019t be set to UTF-8. To use\nUTF-8 for conversion in this situation, use the two-argument version of TO_CHAR , TO_VARCHAR.",
        "The parameters can be set at the account, user, and session levels. Execute the SHOW PARAMETERS command to\nview the current parameter settings that apply to all operations in the current session.",
        "Separate from the binary input and output session parameters, Snowflake provides the BINARY_FORMAT file format option, which can be\nused to explicitly control binary formatting when loading data into or unloading data from Snowflake tables.",
        "This option can be set to HEX, BASE64, or UTF-8 (values are case-insensitive). The option affects both data\nloading and unloading and, similar to other file format options, can be specified in the following ways:",
        "In a named file format, which can then be referenced in a named stage or directly in a COPY command.",
        "In a named stage, which can then be referenced directly in a COPY command.",
        "Directly in a COPY command.",
        "When used for data loading, BINARY_FORMAT specifies the format of binary values in your staged data files. This option\noverrides any value set for the BINARY_INPUT_FORMAT parameter in the session (see Session parameters for binary values).",
        "If the option is set to HEX or BASE64, data loading can fail if the strings in the staged data file aren\u2019t valid hex or\nbase64. In this case, Snowflake returns an error and then performs the action specified for the ON_ERROR copy option.",
        "When used in data unloading, the BINARY_FORMAT option specifies the format applied to binary values unloaded to the files in the\nspecified stage. This option overrides any value set for the BINARY_OUTPUT_FORMAT parameter in the session\n(see Session parameters for binary values).",
        "If the option is set to UTF-8, data unloading fails if any binary values in the table contain invalid UTF-8. In this case, Snowflake\nreturns an error.",
        "BINARY input/output can be confusing because \u201cwhat you see isn\u2019t necessarily what you get.\u201d",
        "Consider the following example:",
        "The outputs for column v (VARCHAR) and column b appear to be identical. Yet\nthe value for column b was converted to binary. Why does the value in column\nb look unchanged?",
        "The answer is that the argument to TO_BINARY is treated as a sequence of\nhexadecimal digits (even though it is inside quotes and therefore looks\nlike a string). The two characters you see are actually interpreted as a pair of\nhexadecimal digits that represent one byte of binary data, not two bytes of\nstring data. (This wouldn\u2019t have worked if the input \u201cstring\u201d had\ncontained characters other than hexadecimal digits; the result would have been an\nerror message similar to \"String '...' isn't a legal hex-encoded string\".)",
        "Also, when BINARY data is displayed, by default it is displayed as a\nsequence of hexadecimal digits. Thus the data went in as hexadecimal digits\n(not a string) and is displayed as hexadecimal digits, so it appears unchanged.",
        "In fact, if the goal was to store the two-character string AB, then the code\nwas wrong. The proper code would use the function HEX_ENCODE\nto convert the string to a sequence of hexadecimal digits (or use another \u201cencode\u201d function to\nconvert to another format, such as base64) before storing the data.\nExamples of that are below.",
        "One way to enter BINARY data is to encode it as a string of hexadecimal\ncharacters, as shown in the following example.",
        "Start by creating a table with a BINARY column:",
        "If you try to insert an \u201cordinary\u201d string by using the TO_BINARY function\nto try to convert it to a valid BINARY value, it fails:",
        "Here\u2019s the error message:",
        "This time, explicitly convert the input to a string of hexadecimal digits\nbefore inserting it (this will succeed):",
        "Now, retrieve the data:",
        "As you can see, by default the output is shown as hexadecimal. To get back\nthe original string, use the function HEX_DECODE_STRING\n(the complement of the function HEX_ENCODE that was used previously to encode the string).",
        "The following query shows in more detail what\u2019s going on internally:",
        "Before reading this section, consider reading Hexadecimal (\u201cHEX\u201d) format example.\nThe basic concepts are similar, and Hexadecimal (\u201cHEX\u201d) format example explains them in\nmore detail.",
        "Start by creating a table with a BINARY column:",
        "Insert a row:",
        "Retrieve that row:",
        "Start by creating a table with a BINARY column:",
        "Insert a row:",
        "Retrieve that row:",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}