{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/revoke-privilege",
    "title": "REVOKE <privileges> | Snowflake Documentation",
    "paragraphs": [
        "Removes one or more privileges on a securable object from a role or database role. The privileges that can be revoked are object-specific.",
        "The privileges that can be revoked from roles are grouped into the following categories:",
        "Global privileges",
        "Privileges for account objects (resource monitors, virtual warehouses, and databases)",
        "Privileges for schemas",
        "Privileges for schema objects (tables, views, stages, file formats, UDFs, and sequences)",
        "The privileges that can be revoked from database roles are grouped into the following categories:",
        "Privileges for the database that contains the database role.",
        "Privileges for schemas in the database that contains the database role.",
        "Privileges for schema objects (tables, views, stages, file formats, UDFs, and sequences) in the database that contains the database role.",
        "GRANT <privileges> , GRANT OWNERSHIP",
        "REVOKE <privilege> \u2026 FROM SHARE",
        "Account roles:",
        "Database roles:",
        "Where:",
        "For more details about the privileges supported for each object type, see Access control privileges.",
        "Specifies the identifier for the object on which the privileges are revoked.",
        "Specifies the type of object for schema-level objects.",
        "AGGREGATION POLICY",
        "ALERT",
        "AUTHENTICATION POLICY",
        "CORTEX SEARCH SERVICE",
        "DATA METRIC FUNCTION",
        "DYNAMIC TABLE",
        "EVENT TABLE",
        "EXTERNAL TABLE",
        "FILE FORMAT",
        "FUNCTION",
        "GIT REPOSITORY",
        "HYBRID TABLE",
        "IMAGE REPOSITORY",
        "ICEBERG TABLE",
        "MASKING POLICY",
        "MATERIALIZED VIEW",
        "MODEL",
        "NETWORK RULE",
        "NOTEBOOK",
        "PACKAGES POLICY",
        "PASSWORD POLICY",
        "PIPE",
        "PRIVACY POLICY",
        "PROCEDURE",
        "PROJECTION POLICY",
        "ROW ACCESS POLICY",
        "SECRET",
        "SERVICE",
        "SESSION POLICY",
        "SEQUENCE",
        "SNAPSHOT",
        "STAGE",
        "STREAM",
        "STREAMLIT",
        "TABLE",
        "TAG",
        "TASK",
        "VIEW",
        "Plural form of object_type (e.g. TABLES, VIEWS).",
        "Specifies the identifier for the recipient role (i.e. the role from which the privileges are revoked).",
        "Specifies the identifier for the recipient database role (i.e. the role from which the privileges are revoked). If the identifier is not\nfully qualified (in the form of db_name.database_role_name, the command looks for the database role in the current database\nfor the session.",
        "If specified, removes the ability for the recipient role to grant the privileges to another role.",
        "Default: No value",
        "If specified, only removes privileges granted on new (i.e. future) schema objects of a specified type (e.g. tables or views) rather than\nexisting objects. Note that any privileges granted on existing objects are retained.",
        "If specified, determines whether the revoke operation succeeds or fails for the privileges, based on the whether the privileges had been\nre-granted to another role.",
        "RESTRICT: If the privilege being revoked has been re-granted to another role, the REVOKE command fails.",
        "CASCADE: If the privilege being revoked has been re-granted, the REVOKE command recursively revokes these dependent grants.\nIf the same privilege on an object has been granted to the target role by a different grantor (parallel grant), that grant is not\naffected and the target role retains the privilege.",
        "Default: RESTRICT",
        "An active role that meets either of the following criteria, or a\nhigher role, can be used to revoke privileges on an object from other roles:",
        "The role is identified as the grantor of the privilege in the GRANTED_BY column in the SHOW GRANTS output.",
        "If multiple instances of a privilege have been granted on the specified object, only the instances granted by the active grantor role\nare revoked.",
        "The role has the global MANAGE GRANTS privilege.",
        "If multiple instances of a privilege have been granted on the specified object, all instances are revoked.",
        "Note that only the SECURITYADMIN system role and higher have the MANAGE GRANTS privilege by default; however, the privilege can be\ngranted to custom roles.",
        "In managed access schemas (i.e. schemas created using the CREATE SCHEMA \u2026 WITH MANAGED ACCESS syntax), only the schema owner (i.e. the\nrole with the OWNERSHIP privilege on the schema) or a role with the global MANAGE GRANTS privilege, or a higher role, can revoke\nprivileges on objects in the schema.",
        "Database level",
        "The global MANAGE GRANTS privilege is required to revoke privileges on future objects in a database. Only the SECURITYADMIN system role\nand higher have the MANAGE GRANTS privilege; however, the privilege can be granted to custom roles.",
        "Schema level",
        "In managed access schemas (i.e. schemas created using the CREATE SCHEMA \u2026 WITH MANAGED ACCESS syntax),\neither the schema owner (i.e. the role with the OWNERSHIP privilege on the schema) or a role with the\nglobal MANAGE GRANTS privilege can revoke privileges on future objects in the schema.",
        "In standard schemas, the global MANAGE GRANTS privilege is required to revoke privileges on future objects\nin the schema.",
        "Privileges cannot be granted or revoked directly on any class. You can, however, create an instance of a class and\nrevoke instance roles from an\naccount role. Revoke the CREATE <class_name> privilege on the schema to prevent a role from creating an instance of a\nclass.",
        "A privilege can be granted to a role multiple times by different grantors. A REVOKE <privilege> statement only revokes grants for which\nthe active role, or a lower role in a hierarchy, is the grantor. Any additional grants of a specified privilege by other grantors are\nignored.",
        "Also note that a REVOKE <privilege> statement is successful even if no privileges are revoked. A REVOKE <privilege> statement only\nreturns an error if a specified privilege has dependent grants and the CASCADE clause is omitted in the statement.",
        "Multiple privileges can be specified for the same object type in a single GRANT statement (with each privilege separated by commas),\nor the special ALL [ PRIVILEGES ] keyword can be used to grant all applicable privileges to the specified object type. Note,\nhowever, that only privileges held and grantable by the role executing the GRANT command are actually granted to the target role.\nA warning message is returned for any privileges that could not be granted.",
        "You cannot specify this keyword for tags.",
        "Privileges granted to a particular role are automatically inherited by any other roles to which the role is granted, as well as any\nother higher-level roles within the role hierarchy. For more details, see Overview of Access Control.",
        "For databases, the IMPORTED PRIVILEGES privilege only applies to shared databases (i.e. databases created from a share). For more\ndetails, see Consume imported data.",
        "For schemas and objects in schemas, an option is provided to grant privileges on all objects of the same type within the container\n(i.e. database or schema). This is a convenience option; internally, the command is expanded into a series of individual GRANT commands\non each object. Only objects that currently exist within the container are affected.",
        "However, note that, in the Snowflake model, bulk granting of privileges is not a recommended practice. Instead, Snowflake recommends\ncreating a shared role and using the role to create objects that are automatically accessible to all users who have been granted the\nrole.",
        "For stages:",
        "USAGE only applies to external stages.",
        "READ | WRITE only applies to internal stages. In addition, to grant the WRITE privilege on an internal stage, the READ privilege\nmust first be granted on the stage.",
        "For more details about external and internal stages, see CREATE STAGE.",
        "When granting privileges on an individual UDF, you must specify the data types for the arguments, if any, for the UDF in the form of\nudf_name ( [ arg_data_type , ... ] ). This is required because Snowflake uses argument data types to resolve UDFs that\nhave the same name within a schema. For an example, see Examples (in this topic). For more details, see\nUser-defined functions overview.",
        "When granting privileges on an individual stored procedure, you must specify the data types for the arguments, if any, for the\nprocedure in the form of procedure_name ( [ arg_data_type , ... ] ). This is required because Snowflake uses argument\ndata types to resolve stored procedures that have the same name within a schema.",
        "Future grants: Revoking future grants only drops grants of privileges for future objects of a specified type. Any\nprivileges granted on existing objects are retained.",
        "For more information, see managed access schemas.",
        "Revoke the necessary privileges to operate (i.e. suspend or resume) the report_wh warehouse from the analyst role:",
        "Revoke only the grant option for the OPERATE privilege on the report_wh warehouse from the analyst role. The\nrole retains the OPERATE privilege but can no longer grant the OPERATE privilege on the warehouse to other roles:",
        "Revoke the SELECT privilege on all existing tables in the mydb.myschema schema from the analyst role:",
        "Revoke all privileges on two UDFs (with the same name in the current schema) from the analyst role:",
        "Note that the UDFs have different arguments, which is how Snowflake uniquely identifies UDFs with the same name. For more details\nabout UDF naming, see User-defined functions overview.",
        "Revoke all privileges on two stored procedures (with the same name in the current schema) from the analyst role:",
        "Note that the two stored procedures have different arguments, which is how Snowflake uniquely identifies procedures with the same\nname.",
        "Revoke the SELECT and INSERT privileges granted on all future tables created in the mydb.myschema schema from the\nrole1 role:",
        "Revoke the SELECT privilege on all existing tables in the mydb.myschema schema from the mydb.dr1 database role:",
        "Revoke all privileges on two UDFs (with the same name in the current schema) from the mydb.dr1 database role:",
        "Note that the UDFs have different arguments, which is how Snowflake uniquely identifies UDFs with the same name. For more details\nabout UDF naming, see User-defined functions overview.",
        "Revoke all privileges on two stored procedures (with the same name in the current schema) from the mydb.dr1 database role:",
        "Note that the two stored procedures have different arguments, which is how Snowflake uniquely identifies procedures with the same name.",
        "Revoke the SELECT and INSERT privileges granted on all future tables created in the mydb.myschema schema from the\nmydb.dr1 database role:",
        "Was this page helpful?",
        "On this page"
    ]
}