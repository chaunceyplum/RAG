{
    "url": "https://docs.snowflake.com/en/sql-reference/functions/to_decimal",
    "title": "TO_DECIMAL , TO_NUMBER , TO_NUMERIC | Snowflake Documentation",
    "paragraphs": [
        "Conversion functions",
        "Converts an input expression to a fixed-point number. For NULL input, the\noutput is NULL.",
        "These functions are synonymous.",
        "TRY_TO_DECIMAL, TRY_TO_NUMBER, TRY_TO_NUMERIC",
        "Required:",
        "An expression of a numeric, character, or variant type.",
        "Optional:",
        "The SQL format model used to parse the input expr and return. For more\ninformation, see SQL format models.",
        "The maximal number of decimal digits in the resulting number; from 1\nto 38. In Snowflake, precision is not used for determination of the\nnumber of bytes needed to store the number and does not have any effect\non efficiency, so the default is the maximum (38).",
        "The number of fractional decimal digits (from 0 to precision - 1).\n0 indicates no fractional digits (i.e. an integer number). The default scale\nis 0.",
        "The function returns NUMBER(precision, scale).",
        "If the precision is not specified, then it defaults to 38.",
        "If the scale is not specified, then it defaults to 0.",
        "For NULL input, the result is NULL.",
        "For fixed-point numbers:",
        "Numbers with different scales are converted by either adding zeros to the right (if the scale needs to be increased) or by\nreducing the number of fractional digits by rounding (if the scale needs to be decreased).",
        "Note that casts of fixed-point numbers to fixed-point numbers that increase scale might fail.",
        "For floating-point numbers:",
        "Numbers are converted if they are within the representable range, given the scale.",
        "The conversion between binary and decimal fractional numbers is not precise. This might result in loss of precision or\nout-of-range errors.",
        "Values of infinity and NaN (not-a-number) result in conversion errors.",
        "Strings are converted as decimal, integer, fractional, or floating-point numbers.",
        "For fractional input, the precision is deduced as the number of digits after the point.",
        "For floating-point input, omitting the mantissa or exponent is allowed and is interpreted as 0. Thus, E is parsed as 0.",
        "For VARIANT input:",
        "If the variant contains a fixed-point or a floating-point numeric value, an appropriate numeric conversion is performed.",
        "If the variant contains a string, a string conversion is performed.",
        "If the variant contains a Boolean value, the result is 0 or 1 (for false and true, correspondingly).",
        "If the variant contains JSON null value, the output is NULL.",
        "Create a table with a VARCHAR column, then retrieve the string values from the table and pass those values\nto the TO_NUMBER function with different precision and scale values.",
        "The query returns the following output:",
        "Try a query on the same table using the TO_NUMBER function to return a number with the precision of 10\nand the scale of 9.",
        "With the precision argument set to 10, the maximal number of decimal digits in the results is 10.\nBecause both values in the table have two digits before the decimal point and scale is set to 9,\nthe query returns an error because the results would return 11 digits.",
        "Use different format elements with the TO_DECIMAL\nfunction in a query:",
        "The query returns the following output:",
        "The output shows that the TM9 text-minimal format element prints precisely the number of\ndigits in the fractional part based on the specified scale. For more information, see\nText-minimal numeric formats.",
        "Convert a number that uses a comma to separate groups of digits:",
        "The query returns the following output:",
        "Convert a currency value that uses a comma to separate groups of digits:",
        "The query returns the following output:",
        "Use the X format element with the TO_DECIMAL function\nto convert a hexadecimal value to a decimal value:",
        "The query returns the following output:",
        "The number of digits in the format element must be equal to or greater than the number of digits in the\nexpression. For example, try to run the following query:",
        "The query returns an error:",
        "Was this page helpful?",
        "On this page"
    ]
}