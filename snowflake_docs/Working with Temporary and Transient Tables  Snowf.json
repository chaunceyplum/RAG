{
    "url": "https://docs.snowflake.com/en/user-guide/tables-temp-transient.html",
    "title": "Working with Temporary and Transient Tables | Snowflake Documentation",
    "paragraphs": [
        "In addition to permanent tables, which is the default table type when creating tables, Snowflake supports defining tables as either temporary or\ntransient. These types of tables are especially useful for storing data that does not need to be maintained for extended periods of time\n(i.e. transitory data).",
        "Note",
        "You cannot create hybrid tables that are temporary or transient. In turn, you cannot create hybrid tables within transient schemas or databases.",
        "Snowflake supports creating temporary tables for storing non-permanent, transitory data (e.g. ETL data, session-specific data). Temporary tables\nonly exist within the session in which they were created and persist only for the remainder of the session. As such, they are not visible to other\nusers or sessions. Once the session ends, data stored in the table is purged completely from the system and, therefore, is not recoverable, either\nby the user who created the table or Snowflake.",
        "Note",
        "In addition to tables, Snowflake supports creating certain other database objects as temporary (e.g. stages). These objects follow the same\nsemantics (i.e. they are session-based, persisting only for the remainder of the session).",
        "For the duration of the existence of a temporary table, the data stored in the table contributes to the overall storage charges that Snowflake bills\nyour account. To prevent any unexpected storage changes, particularly if you create large temporary tables in sessions that you maintain for periods\nlonger than 24 hours, Snowflake recommends explicitly dropping these tables once they are no longer needed. You can also explicitly exit the session\nin which the table was created to ensure no additional charges are accrued.",
        "For more information, see Comparison of Table Types (in this topic).",
        "Similar to the other table types (transient and permanent), temporary tables belong to a specified database and schema; however, because they are\nsession-based, they aren\u2019t bound by the same uniqueness requirements. This means you can create temporary and non-temporary tables with the same name\nwithin the same schema.",
        "However, note that the temporary table takes precedence in the session over any other table with the same name in the same schema. This can lead to\npotential conflicts and unexpected behavior, particularly when performing DDL on both temporary and non-temporary tables. For example:",
        "You can create a temporary table that has the same name as an existing table in the same schema, effectively hiding the existing table.",
        "You can create a table that has the same name as an existing temporary table in the same schema; however, the newly-created table is hidden by the\ntemporary table.",
        "Subsequently, all queries and other operations performed in the session on the table affect only the temporary table.",
        "Important",
        "This behavior is particularly important to note when dropping a table in a session and then using Time Travel to restore the table. It is also\nimportant to note this behavior when using CREATE OR REPLACE to create a table because this essentially drops a table (if it exists) and creates a\nnew table with the specified definition.",
        "To create a temporary table, simply specify the TEMPORARY keyword (or TEMP abbreviation) in CREATE TABLE.\nYou can also use the TableCollection.create Python API.",
        "Note that creating a temporary table does not require the CREATE TABLE privilege on the schema in which the object is created.",
        "For example:",
        "Note",
        "After creation, temporary tables cannot be converted to any other table type.",
        "Snowflake supports creating transient tables that persist until explicitly dropped and are available to all users with the appropriate privileges.\nTransient tables are similar to permanent tables with the key difference that they do not have a Fail-safe period. As a result, transient tables\nare specifically designed for transitory data that needs to be maintained beyond each session (in contrast to temporary tables), but does not\nneed the same level of data protection and recovery provided by permanent tables.",
        "Similar to permanent tables, transient tables contribute to the overall storage charges that Snowflake bills your account; however, because\ntransient tables do not utilize Fail-safe, there are no Fail-safe costs (i.e. the costs associated with maintaining the data required for\nFail-safe disaster recovery).",
        "For more information, see Comparison of Table Types (in this topic).",
        "When you create a transient table as a clone of a permanent table, Snowflake creates a zero-copy clone.\nThis means when the transient table is created, it utilizes no data storage because it shares all of the existing\nmicro-partitions of the original permanent table.\nWhen rows are added, deleted, or updated in the clone, it results in new micro-partitions that belong exclusively\nto the clone (in this case, the transient table).",
        "When a permanent table is deleted, it enters Fail-safe for a 7-day period. Fail-safe bytes incur\nstorage costs. If a transient table is created as a clone of a permanent table, this\nmight delay the time between when the permanent table is deleted and when all of its bytes enter Fail-safe. If the transient\ntable clone shares any micro-partitions with the permanent table when it is deleted, those shared bytes will only enter\nFail-safe when the transient table is deleted.",
        "Snowflake also supports creating transient databases and schemas. All tables created in a transient schema, as well as all schemas created in\na transient database, are transient by definition.",
        "To create a transient table, schema, or database, simply specify the TRANSIENT keyword when creating the object:",
        "CREATE TABLE",
        "CREATE SCHEMA",
        "CREATE DATABASE",
        "DatabaseCollection.create",
        "SchemaCollection.create",
        "TableCollection.create",
        "For example, to create a transient table:",
        "Note",
        "After creation, transient tables cannot be converted to any other table type.",
        "The following table summarizes the differences between the three table types, particularly with regard to their impact on Time Travel and\nFail-safe:",
        "Type",
        "Persistence",
        "Cloning (source type => target type)",
        "Time\u00a0Travel\u00a0Retention\u00a0Period\u00a0(Days)",
        "Fail-safe\u00a0Period\u00a0(Days)",
        "Temporary",
        "Remainder of session",
        "Temporary => Temporary . . Temporary => Transient",
        "0 or 1 (default is 1)",
        "0",
        "Transient",
        "Until explicitly dropped",
        "Transient => Temporary . . Transient => Transient",
        "0 or 1 (default is 1)",
        "0",
        "Permanent (Standard Edition)",
        "Until explicitly dropped",
        "Permanent => Temporary . . Permanent => Transient . . Permanent => Permanent",
        "0 or 1 (default is 1)",
        "7",
        "Permanent (Enterprise Edition and higher)",
        "Until explicitly dropped",
        "Permanent => Temporary . . Permanent => Transient . . Permanent => Permanent",
        "0 to 90 (default is configurable)",
        "7",
        "The Time Travel retention period for a table can be specified when the table is created or any time afterwards. Within the retention period,\nall Time Travel operations can be performed on data in the table (e.g. queries) and the table itself (e.g. cloning and restoration).",
        "If the Time Travel retention period for a permanent table is set to 0, it will immediately enter the Fail-safe period when it is dropped.",
        "Temporary tables can have a Time Travel retention period of 1 day; however, a temporary table is purged once the session (in which the table\nwas created) ends so the actual retention period is for 24 hours or the remainder of the session, whichever is shorter.",
        "A long-running Time Travel query will delay the purging of temporary and transient tables until the query completes.",
        "The Fail-safe period is not configurable for any table type.",
        "Transient and temporary tables have no Fail-safe period. As a result, no additional data storage charges are incurred beyond the\nTime Travel retention period.",
        "Important",
        "Because transient tables do not have a Fail-safe period, they provide a good option for managing the cost of very large tables used to store\ntransitory data; however, the data in these tables cannot be recovered after the Time Travel retention period passes.",
        "For example, if a system failure occurs in which a transient table is dropped or lost, after 1 day, the data is not recoverable by you or\nSnowflake. As such, we recommend using transient tables only for data that does not need to be protected against failures or data that\ncan be reconstructed outside of Snowflake.",
        "For more information, see Data storage considerations.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}