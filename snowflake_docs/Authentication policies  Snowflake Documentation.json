{
    "url": "https://docs.snowflake.com/en/user-guide/authentication-policies",
    "title": "Authentication policies | Snowflake Documentation",
    "paragraphs": [
        "Authentication policies provide you with control over how a client or user authenticates by allowing you to specify:",
        "Whether users must enroll in multi-factor authentication (MFA).",
        "Which authentication methods require multi-factor authentication.",
        "The allowed authentication methods, such as SAML, passwords,\nOAuth, or Key pair authentication.",
        "The SAML2 security integrations that are available to users during the\nlogin experience. For example, if there are multiple security integrations, you can specify which identity provider (IdP) can be selected\nand used to authenticate.",
        "If you are using authentication policies to control which IdP a user can use to authenticate, you can further refine that control using\nthe ALLOWED_USER_DOMAINS and ALLOWED_EMAIL_PATTERNS properties of the SAML2 security integrations associated with the\nIdPs. For more details, see Using multiple identity providers for federated authentication.",
        "The clients that users can use to connect to Snowflake, such as Snowsight, drivers, or\nSnowSQL (CLI client). The CLIENT_TYPES property of an authentication policy is a best effort method to block user logins based on specific clients. It should not be used as the sole control to establish a security boundary.",
        "You can set authentication policies on the account or users in the account. If you set an authentication policy on the account, then the\nauthentication policy applies to all users in the account. If you set an authentication policy on both an account and a user, then the\nuser-level authentication policy overrides the account-level authentication policy.",
        "Note",
        "If you already have access to the identifier-first login flow, you need to migrate your account from the unsupported\nSAML_IDENTITY_PROVIDER account parameter using the SYSTEM$MIGRATE_SAML_IDP_REGISTRATION function.",
        "The following list describes non-exhaustive use cases for authentication policies:",
        "You want to control whether a user, all users in an account, or specific authentication methods require MFA.",
        "You want to control the user login flows when there are multiple login options.",
        "You want to control the authentication methods, specific client types, and security integrations available for specific users or all\nusers.",
        "You have customers building services on top of Snowflake using Snowflake drivers, but the customers do not want their users accessing\nSnowflake through Snowsight or the Classic Console.",
        "You want to offer multiple identity providers as authentication options for specific users.",
        "The CLIENT_TYPES property of an authentication policy is a best effort method to block user logins based on specific clients. It should not be used as the sole control to establish a security boundary.",
        "Ensure authentication methods and security integrations listed in your authentication policies do not conflict. For example, if you add a\nSAML2 security integration in the list of allowed security integrations, and you only allow OAuth as an allowed authentication method,\nthen you cannot create an authentication policy.",
        "Use an additional non-restrictive authentication policy for administrators in case users are locked out. For an example, see\nPreventing a lockout.",
        "When more than one type of security policy is activated, precedence between the policies occur. For example,\nnetwork policies take precedence over authentication policies, so if the IP address of a request\nmatches an IP address in the blocked list of the network policy, then the authentication policy is not checked, and evaluation stops at the\nnetwork policy.",
        "The following list describes the order in which security policies are evaluated:",
        "Network policies: Allow or deny IP addresses, VPC IDs, and VPCE IDs.",
        "Authentication policies - Allow or deny clients, authentication methods, and security integrations.",
        "Password policies (For local authentication only): Specify password requirements such\nas character length, characters, password age, retries, and lockout time.",
        "Session policies: Require users to re-authenticate after a period of inactivity",
        "If a policy is assigned to both the account and the user authenticating, the user-level policy is enforced.",
        "By default, Snowsight or the Classic Console provide a generic login experience that provides several options for logging in,\nregardless if the options are relevant to users. This means that authentication is attempted regardless of whether the login option is a\nvalid option for the user.",
        "You can alter this behavior to enable a identifier-first login flow for Snowsight or the\nClassic Console. In this flow, Snowflake prompts the user for an email address or username before presenting authentication options.\nSnowflake uses the email address or username to identify the user, and then only displays the login options that are relevant to the user,\nand are allowed by the authentication policy set on the account or user.",
        "For instructions for enabling the identifier-first login flow, see Identifier-first login.",
        "The following table provides example configuration on how the identifier-first login and authentication policies can be combined to control\nthe login experience of the user.",
        "Configuration",
        "Result",
        "The authentication policy\u2019s AUTHENTICATION_METHODS parameter only contains PASSWORD.",
        "Snowflake prompts the user for an email address or username, and password.",
        "The authentication policy\u2019s AUTHENTICATION_METHODS parameter only contains SAML, and there is an active SAML2 security integration.",
        "Snowflake redirects the user to the identity provider\u2019s login page if the email address or username matches only one SAML2 security\nintegration.",
        "The authentication policy\u2019s AUTHENTICATION_METHODS parameter contains both PASSWORD and SAML, and there is an active SAML2 security\nintegration.",
        "Snowflake displays a SAML SSO button if the email address or username matches only one SAML2 security integration, and the option to\nlog in with an email address or username, and password.",
        "The authentication policy\u2019s AUTHENTICATION_METHODS parameter only contains SAML, and there are multiple active SAML2 security\nintegrations.",
        "Snowflake displays multiple SAML SSO buttons if the email address or username matches multiple SAML2 security integrations.",
        "The authentication policy\u2019s AUTHENTICATION_METHODS parameter contains both PASSWORD and SAML, and there are multiple active SAML2\nsecurity integrations.",
        "Snowflake displays multiple SAML SSO buttons if the email address or username matches multiple SAML2 security integrations, and the\noption to log in with an email address or username, and password.",
        "An administrator can use the CREATE AUTHENTICATION POLICY command to create a new authentication policy,\nspecifying which clients can connect to Snowflake, which authentication methods can be used, and which security integrations are\navailable to users. By default, all client types, authentication methods, and security integrations can be used\nto connect to Snowflake. The CLIENT_TYPES property of an authentication policy is a best effort method to block user logins based on specific clients. It should not be used as the sole control to establish a security boundary.",
        "For example, you can use the following commands to create a custom policy_admin role and an authentication policy that only allows\nauthentication using Snowsight or the Classic Console, only allowing an account or user to authenticate using OAuth or a\npassword:",
        "For detailed examples, see Example login configurations.",
        "When you set an authentication policy on an account or user, the restrictions specified in the authentication policy apply to the account or\nuser. You can use the ALTER ACCOUNT or ALTER USER commands to set an authentication\npolicy on an account or user.",
        "In a Snowsight worksheet, use either of the following commands to set an authentication policy on an account or\nuser:",
        "Only a security administrator (a user with the SECURITYADMIN role) or users with a role that has the APPLY\nAUTHENTICATION POLICY privilege can set authentication policies on accounts or users. To grant this privilege to a role so users can set\nan authentication policy on an account or user, execute one of the following commands:",
        "For detailed examples, see Example login configurations.",
        "To improve the security of user logins, you can create an authentication policy that requires users to\nenroll in MFA, and then apply the authentication policy to individual users or the account.",
        "For example, if your users can use SSO or passwords to authenticate, you can harden user logins by creating the following authentication\npolicy and applying it to all users on your account:",
        "Note",
        "If you set the MFA_ENROLLMENT parameter to REQUIRED, then the CLIENT_TYPES parameter must include\nSNOWFLAKE_UI, because Snowsight is the only place users can\nenroll in multi-factor authentication (MFA).",
        "Use the Information Schema table function POLICY_REFERENCES to return a row for each user that is assigned\nto the specified authentication policy and a row for the authentication policy assigned to the Snowflake account.",
        "The following syntax is supported for authentication policies:",
        "Where authentication_policy_name is the fully qualified name of the authentication policy.",
        "For example, execute the following query to return a row for each user that is assigned the authentication policy named\nauthentication_policy_prod_1, which is stored in the database named my_db and the schema named my_schema:",
        "In situations where the authentication policy governing an account is strict, you can create a non-restrictive authentication policy for\nan administrator to use as a recovery option in case of a lockout caused by a security integration. For example, you can include the\nPASSWORD authentication method for the administrator only. The user-level authentication policy overrides the more restrictive\naccount-level policy.",
        "You can then assign this policy to an administrator:",
        "You can replicate authentication policies using failover and replication groups. For details, see\nReplication and security policies.",
        "This section provides examples of how you can use and combine authentication policies and SAML2 security integrations to control login flow\nand security.",
        "The CLIENT_TYPES property of an authentication policy is a best effort method to block user logins based on specific clients. It should not be used as the sole control to establish a security boundary.",
        "Create an authentication policy named restrict_client_type_policy that only allows access through Snowsight or the\nClassic Console:",
        "Set the authentication policy on a user:",
        "Create a SAML2 security integration that allows users to login through SAML using Okta as an IdP:",
        "Create a security integration that allows users to login through SAML using Microsoft Entra ID as an IdP:",
        "Create an authentication policy associated with the example_okta_integration and example_entra_integration integrations:",
        "Set the authentication policy on an account:",
        "Snowflake supports the following authentication policy privileges to determine whether users can create, set, and own authentication\npolicies.",
        "The USAGE privilege on the parent database and schema are required to perform operations on any object in a schema.",
        "Privilege",
        "Usage",
        "CREATE",
        "Enables creating a new authentication policy in a schema.",
        "APPLY AUTHENTICATION POLICY",
        "Enables applying an authentication policy at the account or user level.",
        "OWNERSHIP",
        "Grants full control over the authentication policy. Required to alter most properties of an authentication policy.",
        "For details about authentication policy privileges and commands, see the following reference documentation:",
        "Command",
        "Privilege",
        "Description",
        "CREATE AUTHENTICATION POLICY",
        "CREATE AUTHENTICATION POLICY on SCHEMA",
        "Creates a new authentication policy.",
        "ALTER AUTHENTICATION POLICY",
        "OWNERSHIP on AUTHENTICATION POLICY",
        "Modifies an existing authentication policy.",
        "DROP AUTHENTICATION POLICY",
        "OWNERSHIP on AUTHENTICATION POLICY",
        "Removes an existing authentication policy from the system.",
        "DESCRIBE AUTHENTICATION POLICY",
        "OWNERSHIP on AUTHENTICATION POLICY",
        "Describes the properties of an existing authentication policy.",
        "SHOW AUTHENTICATION POLICIES",
        "OWNERSHIP on AUTHENTICATION POLICY or USAGE on SCHEMA",
        "Lists all of the authentication policies in the system.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}