{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-security-integration-api-auth",
    "title": "ALTER SECURITY INTEGRATION (External API Authentication) | Snowflake Documentation",
    "paragraphs": [
        "Modifies the properties of an existing security integration created for External API Authentication.",
        "For information about modifying other types of security integrations (e.g. Snowflake OAuth), see ALTER SECURITY INTEGRATION.",
        "CREATE SECURITY INTEGRATION (External API Authentication) , DESCRIBE INTEGRATION , DROP INTEGRATION , SHOW INTEGRATIONS",
        "String that specifies the identifier (i.e. name) for the integration.",
        "Specifies one or more properties/parameters to set for the integration (separated by blank spaces, commas, or new lines):",
        "Specifies whether this security integration is enabled or disabled.",
        "Allows the integration to run based on the parameters specified in the integration definition.",
        "Suspends the integration for maintenance. Any integration between Snowflake and a third-party service fails to work.",
        "Specifies the URL for authenticating to the external service. For example, to connect to the ServiceNow instance, the URL should be in\nthe following format:",
        "Where instance_name is the name of your ServiceNow instance.",
        "Specifies the token endpoint used by the client to obtain an access token by presenting its authorization grant or refresh token.\nThe token endpoint is used with every authorization grant except for the implicit grant type (since an access token is issued directly).",
        "Specifies that POST is used as the authentication method to the external service.",
        "Specifies the client ID for the OAuth application in the external service.",
        "Specifies the client secret for the OAuth application in the ServiceNow instance. The connector uses this to request an access token\nfrom the ServiceNow instance.",
        "Specifies the type of OAuth flow. One of the following:",
        "'CLIENT_CREDENTIALS' when the integration will use client credentials.",
        "'AUTHORIZATION_CODE' when the integration will use an authorization code.",
        "'JWT_BEARER' when the integration will",
        "Specifies the default lifetime of the OAuth access token (in seconds) issued by an OAuth server.",
        "The value set in this property is used if the access token lifetime is not returned as part of OAuth token response. When both\nvalues are available, the smaller value will be used to refresh the access token.",
        "Specifies the value to determine the validity of the refresh token obtained from the OAuth server.",
        "Specifies a comma-separated list of scopes, with single quotes surrounding each scope, to use when making a request from the OAuth by a\nrole with USAGE on the integration during the OAuth client credentials flow.",
        "This list must be a subset of the scopes defined in the OAUTH_ALLOWED_SCOPES property of the security integration. If the\nOAUTH_SCOPES property values are not specified, the secret inherits all of the scopes that are specified in the security\nintegration.",
        "For the ServiceNow connector, the only possible scope value is 'useraccount'.",
        "Default: Empty list (i.e. []).",
        "Adds a comment or overwrites an existing comment for the integration.",
        "Default: No value",
        "Specifies the tag name and the tag string value.",
        "The tag value is always a string, and the maximum number of characters for the tag value is 256.",
        "For information about specifying tags in a statement, see Tag quotas for objects and columns.",
        "A role used to execute this SQL command must have the following\nprivileges at a minimum:",
        "Privilege",
        "Object",
        "Notes",
        "OWNERSHIP",
        "Integration",
        "OWNERSHIP is a special privilege on an object that is automatically granted to the role that created the object, but can also be transferred using the GRANT OWNERSHIP command to a different role by the owning role (or any role with the MANAGE GRANTS privilege).",
        "For instructions on creating a custom role with a specified set of privileges, see Creating custom roles.",
        "For general information about roles and privilege grants for performing SQL actions on\nsecurable objects, see Overview of Access Control.",
        "Regarding metadata:",
        "Attention",
        "Customers should ensure that no personal data (other than for a User object), sensitive data, export-controlled data, or other regulated data is entered as metadata when using the Snowflake service. For more information, see Metadata fields in Snowflake.",
        "The following example initiates operation of a suspended integration:",
        "Was this page helpful?",
        "On this page"
    ]
}