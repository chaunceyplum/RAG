{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-security-integration-oauth-snowflake",
    "title": "ALTER SECURITY INTEGRATION (Snowflake OAuth) | Snowflake Documentation",
    "paragraphs": [
        "Modifies the properties of an existing security integration created for a Snowflake OAuth client. For information about modifying other\ntypes of security integrations (e.g. External OAuth), see ALTER SECURITY INTEGRATION.",
        "CREATE SECURITY INTEGRATION (Snowflake OAuth) , DROP INTEGRATION , SHOW INTEGRATIONS , DESCRIBE INTEGRATION",
        "Snowflake OAuth for partner applications",
        "Snowflake OAuth for custom clients",
        "Use these parameters when OAUTH_CLIENT = <partner_application> in the security integration. For example, these parameters are valid\nfor OAUTH_CLIENT = TABLEAU_SERVER.",
        "Identifier for the integration to alter. If the identifier contains spaces or special characters, the entire string must be enclosed in\ndouble quotes. Identifiers enclosed in double quotes are also case-sensitive.",
        "Specifies one or more properties/parameters to set for the integration (separated by blank spaces, commas, or new lines):",
        "Specifies whether to initiate operation of the integration or suspend it.",
        "TRUE allows the integration to run based on the parameters specified in the pipe definition.",
        "FALSE suspends the integration for maintenance. Any integration between Snowflake and a third-party service fails to work.",
        "Specifies the client URI. After a user is authenticated, the web browser is redirected to this URI.",
        "This parameter is required when OAUTH_CLIENT = LOOKER. For details, see the example in the\nLooker documentation.",
        "Boolean that specifies whether to allow the client to exchange a refresh token for an access token when the current access token has\nexpired. If set to FALSE, a refresh token is not issued. User consent is revoked, and the user must confirm authorization again.",
        "Default: TRUE",
        "Integer that specifies how long refresh tokens should be valid (in seconds). This can be used to expire the refresh token periodically.",
        "Note that if your organization would like the minimum or maximum values lowered or raised, respectively, ask your account administrator\nto send a request to Snowflake Support.",
        "86400 (1 day) to 7776000 (90 days)",
        "7776000",
        "OAUTH_USE_SECONDARY_ROLES = IMPLICIT | NONE",
        "Default secondary roles set in the user properties are activated by default in the session being opened.",
        "Default secondary roles are not supported in the session being opened.",
        "Default: NONE",
        "Comma-separated list of Snowflake roles that a user cannot explicitly consent to using after authenticating\n(e.g. 'custom_role1', 'custom_role2').",
        "By default, Snowflake prevents the ACCOUNTADMIN, ORGADMIN, and SECURITYADMIN roles from authenticating. To allow these privileged roles to\nauthenticate, use the ALTER ACCOUNT command to set the OAUTH_ADD_PRIVILEGED_ROLES_TO_BLOCKED_LIST\naccount parameter to FALSE.",
        "Specifies the tag name and the tag string value.",
        "The tag value is always a string, and the maximum number of characters for the tag value is 256.",
        "For information about specifying tags in a statement, see Tag quotas for objects and columns.",
        "String (literal) that specifies a comment for the integration.",
        "Use these parameters when OAUTH_CLIENT = CUSTOM in the security integration.",
        "Identifier for the integration to alter. If the identifier contains spaces or special characters, the entire string must be enclosed in\ndouble quotes. Identifiers enclosed in double quotes are also case-sensitive.",
        "Specifies one or more properties/parameters to set for the integration (separated by blank spaces, commas, or new lines):",
        "ENABLED =  TRUE | FALSE \nSpecifies whether to initiate operation of the integration or suspend it.",
        "TRUE allows the integration to run based on the parameters specified in the pipe definition.",
        "FALSE suspends the integration for maintenance. Any integration between Snowflake and a third-party service fails to work.",
        "Specifies the client URI. After a user is authenticated, the web browser is redirected to this URI. The URI must be protected by TLS\n(Transport Layer Security) unless the optional OAUTH_ALLOW_NON_TLS_REDIRECT_URI parameter is set to TRUE.",
        "Do not include query parameters sent with the redirect URI in the request to the authorization endpoint. For example, if the value of the redirect_uri query parameter in the request\nto the authorization endpoint is https://www.example.com/connect?authType=snowflake, make sure the OAUTH_REDIRECT_URI parameter is\nset to https://www.example.com/connect.",
        "If TRUE, allows setting OAUTH_REDIRECT_URI to a URI not protected by TLS. We highly recommend use of TLS to\nprevent man-in-the-middle OAuth redirects for use in phishing attacks.",
        "Default: FALSE",
        "Boolean that specifies whether Proof Key for Code Exchange (PKCE) should be required for the integration.",
        "Default: FALSE",
        "OAUTH_USE_SECONDARY_ROLES = IMPLICIT | NONE",
        "Default secondary roles set in the user properties are activated by default in the session being opened.",
        "Default secondary roles are not supported in the session being opened.",
        "Default: NONE",
        "Comma-separated list of Snowflake roles that a user does not need to explicitly consent to using after authenticating, e.g.\n'custom_role1', 'custom_role2'. Note that the ACCOUNTADMIN, ORGADMIN, and SECURITYADMIN roles cannot be included in this list.",
        "Note",
        "This parameter is supported for confidential clients only.",
        "Comma-separated list of Snowflake roles that a user cannot explicitly consent to using after authenticating\n(e.g. 'custom_role1', 'custom_role2').",
        "Note that the ACCOUNTADMIN, ORGADMIN, and SECURITYADMIN roles are included in this list by default; however, if these roles should be removed\nfor your account, ask your account administrator to send a request to Snowflake Support.",
        "Boolean that specifies whether to allow the client to exchange a refresh token for an access token when the current access token has\nexpired. If set to FALSE, a refresh token is not issued. User consent is revoked, and the user must confirm authorization again.",
        "Default: TRUE",
        "Integer that specifies how long refresh tokens should be valid (in seconds). This can be used to expire the refresh token periodically.",
        "When a refresh token expires, the application will need to direct the user through the authorization flow again to obtain a new refresh\ntoken.",
        "The supported minimum, maximum, and default values are as follows:",
        "Application",
        "Minimum",
        "Maximum",
        "Default",
        "Tableau Desktop",
        "60 (1 minute)",
        "36000 (10 hours)",
        "36000 (10 hours)",
        "Tableau Cloud",
        "60 (1 minute)",
        "7776000 (90 days)",
        "7776000 (90 days)",
        "Custom client",
        "86400 (1 day)",
        "7776000 (90 days)",
        "7776000 (90 days)",
        "If you have a business need to lower the minimum value or raise the maximum value, ask your account administrator to send a request to\nSnowflake Support.",
        "Specifies an existing network policy. This network policy controls network traffic that is\nattempting to exchange an authorization code for an access or refresh token or to use a refresh token to obtain a new\naccess token.",
        "If there are also network policies set for the account or user, see Network policy precedence.",
        "Specifies an RSA public key.",
        "Specifies a second RSA public key. Used for key rotation.",
        "Specifies the tag name and the tag string value.",
        "The tag value is always a string, and the maximum number of characters for the tag value is 256.",
        "For information about specifying tags in a statement, see Tag quotas for objects and columns.",
        "String (literal) that specifies a comment for the integration.",
        "Specifies one or more properties/parameters to unset for the security integration, which resets them back to their defaults:",
        "ENABLED",
        "NETWORK_POLICY",
        "OAUTH_CLIENT_RSA_PUBLIC_KEY",
        "OAUTH_CLIENT_RSA_PUBLIC_KEY_2",
        "TAG tag_name [ , tag_name ... ]",
        "COMMENT",
        "Regarding metadata:",
        "Attention",
        "Customers should ensure that no personal data (other than for a User object), sensitive data, export-controlled data, or other regulated data is entered as metadata when using the Snowflake service. For more information, see Metadata fields in Snowflake.",
        "The following example initiates operation of a suspended integration:",
        "Was this page helpful?",
        "On this page"
    ]
}