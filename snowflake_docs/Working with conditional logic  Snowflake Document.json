{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-scripting/branch",
    "title": "Working with conditional logic | Snowflake Documentation",
    "paragraphs": [
        "Snowflake Scripting supports the following branching constructs for conditional logic:",
        "IF-THEN-ELSEIF-ELSE",
        "CASE",
        "In Snowflake Scripting, you can execute a set of statements if a condition is met by using an\nIF statement.",
        "The syntax for the IF statement is:",
        "In an IF statement:",
        "If you need to specify additional conditions, add an ELSEIF clause for each condition.",
        "To specify the statements to execute when none of the conditions evaluate to TRUE, add an ELSE clause.",
        "The ELSEIF and ELSE clauses are optional.",
        "The following is a simple example of an IF statement:",
        "Note: If you are using SnowSQL, the Classic Console, or the\nexecute_stream or execute_string method in Python Connector\ncode, use this example instead (see Using Snowflake Scripting in SnowSQL, the Classic Console, and Python Connector):",
        "For the full syntax and details about IF statements, see IF (Snowflake Scripting).",
        "A CASE statement behaves similarly to an IF statement but provides a simpler way to specify multiple conditions.",
        "Snowflake Scripting supports two forms of the CASE statement:",
        "Simple CASE statements",
        "Searched CASE statements",
        "The next sections explain how to use these different forms.",
        "Note",
        "Snowflake supports other uses of the keyword CASE outside of Snowflake Scripting (e.g. the\nconditional expression CASE).",
        "In a simple CASE statement, you define different branches (WHEN clauses) for different possible values of a given expression.",
        "The syntax for the simple CASE statement is:",
        "Snowflake executes the first branch for which value_n_of_expression matches the value of expression_to_match.",
        "For example, suppose that you want to execute different statements, based on the value of the expression_to_evaluate variable.\nFor each possible value of this variable (e.g. value a, value b, etc.), you can define a WHEN clause that\nspecifies the statement(s) to execute:",
        "Note: If you are using SnowSQL, the Classic Console, or the\nexecute_stream or execute_string method in Python Connector\ncode, use this example instead (see Using Snowflake Scripting in SnowSQL, the Classic Console, and Python Connector):",
        "For the full syntax and details about CASE statements, see CASE (Snowflake Scripting).",
        "In the searched CASE statement, you specify different conditions for each branch (WHEN clause). Snowflake\nexecutes the first branch for which the expression evaluates to TRUE.",
        "The syntax for the searched CASE statement is:",
        "For example, when you execute the following CASE statement, the returned value is a is x because that branch is the first\nbranch in which the expression evaluates to TRUE:",
        "Note: If you are using SnowSQL, the Classic Console, or the\nexecute_stream or execute_string method in Python Connector\ncode, use this example instead (see Using Snowflake Scripting in SnowSQL, the Classic Console, and Python Connector):",
        "For the full syntax and details about CASE statements, see CASE (Snowflake Scripting).",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}