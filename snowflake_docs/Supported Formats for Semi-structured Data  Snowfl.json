{
    "url": "https://docs.snowflake.com/en/user-guide/semistructured-data-formats",
    "title": "Supported Formats for Semi-structured Data | Snowflake Documentation",
    "paragraphs": [
        "This topic describes the supported formats for semi-structured data.",
        "Snowflake natively supports the semi-structured data formats below. Specifically, Snowflake provides options in COPY commands to\nload and unload data files in these formats.",
        "JSON (JavaScript Object Notation) is a lightweight, plain-text, data-interchange format based on a subset of the JavaScript Programming Language.",
        "JSON data can be produced by any application. Some common examples include:",
        "JavaScript applications using native methods to generate JSON.",
        "Non-JavaScript applications using libraries (usually with extensions) to generate JSON data.",
        "Ad hoc JavaScript generators.",
        "Concatenation of JSON documents (which may or may not be line-separated).",
        "Because there is no formal specification, there are significant differences between various implementations. These differences makes import of JSON-like data sets impossible if the JSON parser is strict in\nits language definition. To make import of JSON data sets as problem-free as possible, Snowflake follows the rule \u201cbe liberal in what you accept\u201d. The intent is to accept the widest possible range of JSON\nand JSON-like inputs that permit unambiguous interpretation.",
        "This topic describes the syntax for JSON documents accepted by Snowflake.",
        "For more information about JSON, see json.org.",
        "JSON data is a hierarchical collection of name/value pairs grouped into objects and arrays:",
        "Colons : separate names and values in name/value pairs.",
        "Curly braces {} denote objects.",
        "Square brackets [] denote arrays.",
        "Commas , separate entities in objects and arrays.",
        "JSON name/value pairs consist of a field name (in double quotes), followed by a colon, then a value.",
        "For example:",
        "A value in a name/value pair can be:",
        "A number (integer or floating point)",
        "A string (in double quotes)",
        "A Boolean (true or false)",
        "An array (in square brackets)",
        "An object (in curly braces)",
        "Null",
        "JSON objects are written inside curly braces. An object can contain multiple name/values pairs, separated by commas. For example:",
        "JSON arrays are written inside square brackets. An array can contain multiple objects, separated by commas. For example:",
        "FILE NAME: json_sample_data1",
        "Contains an array with 3 simple employee records (objects):",
        "FILE NAME: json_sample_data2",
        "Contains an array with 3 employee records (objects) and their associated dependent data (children, the children\u2019s names and ages, cities where the employee has lived, and the years that the employee has\nlived in those cities):",
        "Avro is an open-source data serialization and RPC framework originally developed for use with Apache Hadoop. It utilizes schemas defined in JSON to produce serialized data in a compact binary format. The\nserialized data can be sent to any destination (i.e. application or program) and can be easily deserialized at the destination because the schema is included in the data.",
        "An Avro schema consists of a JSON string, object, or array that defines the type of schema and the data attributes (field names, data types, etc.) for the schema type. The attributes differ depending on\nthe schema type. Complex data types such as arrays and maps are supported.",
        "Snowflake reads Avro data into a single VARIANT column. You can query the data in a VARIANT column just as you would JSON data, using similar commands and functions.",
        "For more information, see avro.apache.org.",
        "ORC (Optimized Row Columnar) is a binary format used to store Hive data. ORC was designed for efficient compression and improved\nperformance for reading, writing, and processing data over earlier Hive file formats. For more information about ORC, see https://orc.apache.org/.",
        "Snowflake reads ORC data into a single VARIANT column. You can query the data in a VARIANT column just as you would JSON data, using similar commands and functions.",
        "Alternatively, you can extract columns from a staged ORC file into separate table columns using a CREATE TABLE AS SELECT statement.",
        "Note",
        "Map data is deserialized into an array of objects, e.g.:",
        "Union data is deserialized into a single object, e.g.:",
        "Parquet is a compressed, efficient columnar data representation designed for projects in the Hadoop ecosystem. The file format supports complex nested data structures and uses Dremel record shredding and assembly algorithms. Parquet files can\u2019t be opened in a text editor.\nFor more information, see parquet.apache.org/docs/.",
        "Note",
        "Snowflake supports Parquet files produced using the Parquet writer V2 for Apache Iceberg\u2122 tables or when you use\na vectorized scanner.",
        "Depending on your loading use case, Snowflake either reads Parquet data into a single VARIANT column or directly into table columns\n(such as when you load data from Iceberg-compatible Parquet files).",
        "You can query the data in a VARIANT column just as you would JSON data, using similar commands and functions.\nAlternatively, you can extract select columns from a staged Parquet file into separate table columns using a CREATE TABLE AS SELECT statement.",
        "Preview Feature \u2014 Open",
        "Enabled for all accounts.",
        "XML (eXtensible Markup Language) is a markup language that defines a set of rules for encoding documents. It was originally based on SGML, another markup language developed for standardizing the structure\nand elements that comprise a document.",
        "Since its introduction, XML has grown beyond an initial focus on documents to encompass a wide range of uses, including representation of arbitrary data structures and serving as the base language for\ncommunication protocols. Because of its extensibility, versatility, and usability, it has become one of the most commonly-used standards for data interchange on the Web.",
        "An XML document consists primarily of the following constructs:",
        "Tags (identified by angle brackets, < and >)",
        "Elements",
        "Elements typically consist of a \u201cstart\u201d tag and matching \u201cend\u201d tag, with the text between the tags constituting the content for the element. An element can also consist of an \u201cempty-element\u201d tag with no\n\u201cend\u201d tag. \u201cstart\u201d and \u201cempty-element\u201d tags may contain attributes, which help define the characteristics or metadata for the element.",
        "Was this page helpful?",
        "On this page"
    ]
}