{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-table-column",
    "title": "ALTER TABLE \u2026 ALTER COLUMN | Snowflake Documentation",
    "paragraphs": [
        "This topic describes how to modify one or more column properties for a table using an ALTER COLUMN clause in a\nALTER TABLE statement.",
        "The following table describes the supported/unsupported actions for modifying column properties:",
        "Action",
        "Supported",
        "Unsupported",
        "Notes",
        "Default Values",
        "\u2714",
        "Not allowed if the column and default were defined by an ALTER TABLE command. For details, see the Usage Notes below.",
        "\u2714",
        "Use only for columns that have a sequence already.",
        "\u2714",
        "\u2714",
        "Nullability",
        "\u2714",
        "Data Types",
        "\u2714",
        "\u2714",
        "\u2714",
        "\u2714",
        "\u2714",
        "\u2714",
        "Only allowed if the new precision is sufficient to hold all values currently in the column. In addition, decreasing the precision can impact Time Travel (see Usage Notes for details).",
        "\u2714",
        "Comments",
        "\u2714",
        "Masking Policy",
        "\u2714",
        "Projection Policy",
        "\u2714",
        "Object Tagging",
        "\u2714",
        "A column can support up to 20 tags, and the maximum number of characters for a tag string value is 256.",
        "ALTER TABLE , CREATE TABLE , DROP TABLE , SHOW TABLES , DESCRIBE TABLE",
        "A single ALTER TABLE statement can be used to modify multiple columns in a table. Each change is specified as a clause consisting of the column\nand column property to modify, separated by commas:",
        "Use either the ALTER or MODIFY keyword to initiate the list of clauses (i.e. columns/properties to modify) in the statement.",
        "Parentheses can be used for grouping the clauses, but are not required.",
        "The COLUMN keyword can be specified in each clause, but is not required.",
        "The clauses can be specified in any order.",
        "When setting a column to NOT NULL, if the column contains NULL values, an error is returned and no changes are applied to the column.",
        "Columns that use semi-structured data types (ARRAY, OBJECT, and VARIANT) cannot be set to NOT NULL, except when the table is empty. Setting these columns to NOT NULL when the table contains rows is not supported and results in an error.",
        "To change the default sequence for a column, the column must already have a default sequence. You cannot use the command\nALTER TABLE ... SET DEFAULT <seq_name> to add a sequence to a column that does not already have a sequence.",
        "If you alter a table to add a column with a DEFAULT value, then you cannot drop the default value for that column.\nFor example, in the following sequence of statements, the last ALTER TABLE ... ALTER COLUMN statement causes an error:",
        "This restriction prevents inconsistency between values in rows inserted before the column was added and\nrows inserted after the column was added. If the default were dropped, then the column would contain:",
        "A NULL value for rows inserted before the column was added.",
        "The default value for rows inserted after the column was added.",
        "Dropping the default column value from any clone of the table is also prohibited.",
        "When setting the TYPE for a column, the specified type (i.e. type) must be\nNUMBER or a text data type (VARCHAR,\nSTRING, TEXT, etc.).",
        "For the NUMBER data type, TYPE can be used to:",
        "Increase the precision of the specified number column.",
        "Decrease the precision of the specified number column if the new precision is sufficient to hold\nall data values currently in the column.",
        "For text data types, TYPE can be used only to increase the length of the column.",
        "If the precision of a column is decreased below the maximum precision of any column data retained in Time Travel, you cannot restore the\ntable without first increasing the precision.",
        "For masking policies:",
        "The USING clause and the FORCE keyword are both optional; neither are required to set a masking policy on a column. The\nUSING clause and the FORCE keyword can be used separately or together. For details, see:",
        "Apply a conditional masking policy on a column",
        "Replace a masking policy on a column",
        "A single masking policy that uses conditional columns can be applied to multiple tables provided that the column structure of the table\nmatches the columns specified in the policy.",
        "When modifying one or more table columns with a masking policy or the table itself with a row access policy, use the\nPOLICY_CONTEXT function to simulate a query on the column(s) protected by a masking policy and the\ntable protected by a row access policy.",
        "Regarding metadata (for example, the COMMENT field):",
        "Attention",
        "Customers should ensure that no personal data (other than for a User object), sensitive data, export-controlled data, or other regulated data is entered as metadata when using the Snowflake service. For more information, see Metadata fields in Snowflake.",
        "Example setup:",
        "Make the following changes to t1:",
        "Change NOT NULL column c1 to NULL.",
        "Drop the default for column c2 and change the default sequence for column c3.",
        "Increase the length of column c4 and drop the default for the column.",
        "Add a comment for column c5.",
        "Same as previous example, but with the following changes to illustrate the versatility/flexibility of the command:",
        "All actions executed in a single ALTER COLUMN clause.",
        "The order of the columns within the clause is different.",
        "SET DATA TYPE shortened to simply TYPE.",
        "This example produces the same results.",
        "Apply a Column-level Security masking policy to a table column:",
        "Unset a Column-level Security masking policy from a table column:",
        "Was this page helpful?",
        "On this page"
    ]
}