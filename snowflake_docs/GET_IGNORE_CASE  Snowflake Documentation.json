{
    "url": "https://docs.snowflake.com/en/sql-reference/functions/get_ignore_case",
    "title": "GET_IGNORE_CASE | Snowflake Documentation",
    "paragraphs": [
        "Semi-structured and structured data functions (Extraction)",
        "Extracts a field value from an object; returns NULL if either of the arguments is NULL.",
        "Note",
        "This function is similar to GET but applies case-insensitive matching to field names.",
        "GET",
        "OBJECT (or VARIANT containing an OBJECT)",
        "MAP",
        "An expression that evaluates to a VARIANT that contains either an ARRAY or an OBJECT.",
        "An expression that evaluates to an OBJECT that contains key-value pairs.",
        "An expression that evaluates to a VARCHAR. This specifies the key in a key-value pair for which you want to retrieve the value.",
        "field_name must not be an empty string.",
        "If object is a structured OBJECT, you must specify a constant for\nfield_name.",
        "If object does not contain the specified key:",
        "If object is a semi-structured OBJECT, the function returns NULL.",
        "If object is a structured OBJECT, an error occurs.",
        "An expression that evaluates to a MAP.",
        "The key in a key-value pair for which you want to retrieve the value.",
        "If map does not contain the specified key, the function returns NULL.",
        "The returned value is the specified element of the ARRAY, or the value that corresponds to the specified key of a key-value\npair in the OBJECT.",
        "If the input object is a semi-structured OBJECT, ARRAY, or VARIANT, the function returns a VARIANT. The data type is VARIANT\nbecause:",
        "In an ARRAY, each element is of type VARIANT.",
        "In an OBJECT, the value in each key-value pair is of type VARIANT.",
        "If the input object is a structured OBJECT, structured ARRAY, or MAP,\nthe function returns a value of the type specified for the object.",
        "For example, if the type of the input object is ARRAY(NUMBER), the function returns a NUMBER.",
        "This function returns the first exact match it finds. If the function only finds ambiguous (case-insensitive) matches, it returns the value for one of the matches; however, no guarantee can be made on which ambiguous field name is matched first.",
        "GET_IGNORE_CASE is a binary function that can be called in the following ways:",
        "object is an OBJECT value and field_name is a string value, which can be a constant or an expression.",
        "This variation of GET_IGNORE_CASE extracts the value of the field with the provided name from the object value.",
        "v is a VARIANT value and field_name is a string value, which can be a constant or an expression.",
        "Works similarly to GET_IGNORE_CASE with object, but additionally checks that v contains an object value (and returns NULL if v does not contain an object).",
        "Extract a field value from an object. The function returns the value for the exact match:",
        "Extract a field value from an object. The function cannot find an exact match and so returns one of the ambiguous matches:",
        "For more detailed examples, see Querying Semi-structured Data.",
        "Was this page helpful?",
        "On this page"
    ]
}