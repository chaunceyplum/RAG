{
    "url": "https://docs.snowflake.com/en/release-notes/2022-08",
    "title": "August 2022 | Snowflake Documentation",
    "paragraphs": [
        "The following new features, behavior changes, and updates (enhancements, fixes, etc.) have been introduced this month. If you have any\nquestions about these additions, please contact\nSnowflake Support.",
        "Important",
        "Each release may include updates that require the web interface to be refreshed.",
        "As a general practice, to ensure these updates do not impact your usage, we recommend refreshing the web interface after each Snowflake\nrelease has been deployed.",
        "With this release, we are pleased to introduce a preview of support for the new GEOMETRY data type. The GEOMETRY data type represents\nfeatures in a planar (Euclidean, Cartesian) coordinate system. This feature is available to all Snowflake accounts.",
        "This release provides functions for constructing, formatting, measuring, and computing relationships between GEOMETRY objects. Using these\nfunctions, you can construct GEOMETRY objects from data in standard formats, including WKT, WKB, and GeoJSON.",
        "For more information, see Geospatial data types.",
        "Preview features are intended for evaluation and testing purposes. These features are not recommended for use in production.",
        "With this release, we are pleased to announce general availability for Snowpark stored procedures written in Java on Amazon Web Services\n(AWS) and Microsoft Azure. Stored procedures for Java are available for preview on Google Cloud Platform (GCP).",
        "In your stored procedure, you can use the Snowpark API for Java to host your data pipelines in Snowflake. For example, you can write stored\nprocedures in cases where you need to execute your Snowpark code without running a client application (e.g. from a task).",
        "For more information, see Writing stored procedures in Java.",
        "With this release, we are pleased to announce general availability for Snowpark stored procedures written in Scala on Amazon Web Services\n(AWS) and Microsoft Azure. Stored procedures for Scala are available for preview on Google Cloud Platform (GCP).",
        "In your stored procedure, you can use the Snowpark API for Scala to host your data pipelines in Snowflake. For example, you can write stored\nprocedures in cases where you need to execute your Snowpark code without running a client application (e.g. from a task).",
        "For more information, see Writing stored procedures in Scala.",
        "With this release, we are pleased to announce an open preview of Account Replication.\nThis feature introduces two new Snowflake objects, replication group and failover group.\nA replication group allows customers to\nspecify which account objects to replicate, to which regions or cloud platforms, at customizable scheduled intervals. A failover group\nenables the replication and failover of the account objects in a group. The objects in a group are replicated with point-in-time consistency\nfrom a source account to one or more target accounts.",
        "Account objects can include warehouses, users, and roles, along with databases and shares (see\nReplicated Objects for the full list of objects that can be included in a\nreplication or failover group). Account objects can be grouped in one or multiple groups.",
        "In the case of failover, account replication enables the failover of your entire account to a different region or cloud platform. Each\nreplication and failover group has its own replication schedule, allowing you to set the frequency for replication at different intervals\nfor different groups of objects. In the case of failover groups, it also enables failover of groups individually. You can choose to failover\nall failover groups, or only select failover groups.",
        "In this release, Snowflake provides two new arguments for the INFER_SCHEMA function:",
        "Specifies a list of one or more file names (separated by commas) in a set of staged files that contain semi-structured data.",
        "Specifies whether column names detected from stage files are treated as case sensitive. By default, the value is FALSE which\nmeans that Snowflake preserves the case of alphabetic characters when retrieving column names. If you specify the value as TRUE,\ncolumn names are treated as case-insensitive and all column names are retrieved as uppercase letters.",
        "In a future release, the output of the INFER_SCHEMA function will include a new ORDER_ID column that indicates the column order in the\nstaged files. For more information, see the Behavior Change Log.",
        "With this release, Snowflakes supports creating new external tables with the column definitions derived from a set of staged files\ncontaining semi-structured data. Include the USING TEMPLATE keywords in your CREATE EXTERNAL TABLE statements.\nPreviously, this capability was limited to tables.",
        "For example:",
        "The following function(s) were introduced in recent releases:",
        "Function Category",
        "New Function",
        "Description",
        "Geospatial (Transformation)",
        "ST_DIFFERENCE",
        "Given two input GEOGRAPHY objects, returns a GEOGRAPHY object that represents the points in\nthe first object that are not in the second object (i.e. the difference between the two\nobjects).",
        "Geospatial (Transformation)",
        "ST_INTERSECTION",
        "Given two input GEOGRAPHY objects, returns a GEOGRAPHY object that represents the set of\npoints that are common to both input objects (i.e. the intersection of the two objects).",
        "Geospatial (Transformation)",
        "ST_SYMDIFFERENCE",
        "Given two input GEOGRAPHY objects, returns a GEOGRAPHY object that represents the set of\npoints from both input objects that are not part of the intersection of the objects (i.e.\nthe symmetric difference of the two objects).",
        "Geospatial (Transformation)",
        "ST_UNION",
        "Given two input GEOGRAPHY objects, returns a GEOGRAPHY object that represents the combined\nset of all points from both objects (i.e. the union of the two objects).",
        "Geospatial (Accessor)",
        "ST_ENDPOINT",
        "Returns the last Point in a LineString.",
        "Geospatial (Accessor)",
        "ST_POINTN",
        "Returns the Point at a specified index in a LineString.",
        "Geospatial (Accessor)",
        "ST_STARTPOINT",
        "Returns the first Point in a LineString.",
        "A Directed Acyclic Graph (DAG) of tasks consists of a single root task and a set of child tasks, organized by their dependencies. All tasks\nin a DAG except for the root task and its direct children can have multiple predecessor tasks. A task runs only after all of its predecessor\ntasks have run successfully to completion.",
        "With this release, you can specify multiple predecessor tasks when creating a new task (using CREATE TASK \u2026 AFTER) or later (using ALTER\nTASK \u2026 ADD AFTER). The existing SQL command syntax now supports a comma-separated list of tasks.",
        "The following example creates serverless task a4 and specifies tasks a1, a2, and a3 as predecessor tasks. The task executes\na trivial query:",
        "The following example modifies existing task b4 and specifies tasks b1, b2, and b3 as predecessor tasks:",
        "Previously, users were limited to specifying a single predecessor task when creating tasks or modifying tasks.",
        "With this release, we are pleased to announce the general availability of the ORGADMIN role in Snowflake. Organization administrators with\nthe ORGADMIN role can:",
        "View all Snowflake accounts and regions under an organization",
        "Create new Snowflake accounts under an organization",
        "Rename Snowflake accounts in an organization",
        "Access the ORGANIZATION_USAGE schema, which provides usage and billing data for all Snowflake accounts that belong to an organization",
        "For organizations with multiple accounts, the ORGADMIN role is available in the first account that was created, unless you requested that it\nbe added to a different account.  You can verify whether the ORGADMIN is available by finding it in the list of roles in the web interface.",
        "The account administrator (i.e. a user with the ACCOUNTADMIN role) can grant the ORGADMIN role to themselves or to any other user by\nexecuting the following command:",
        "For more information, see Introduction to organizations.",
        "Win this release, we are pleased to announce the general availability of the following views in the\nORGANIZATION_USAGE schema in the SNOWFLAKE shared database. You can use these views to break down\ncosts at the object level across all the accounts in your organization:",
        "Storage:",
        "DATABASE_STORAGE_USAGE_HISTORY",
        "STAGE_STORAGE_USAGE_HISTORY",
        "Data transfer:",
        "DATA_TRANSFER_HISTORY",
        "Serverless features:",
        "AUTOMATIC_CLUSTERING_HISTORY",
        "MATERIALIZED_VIEW_REFRESH_HISTORY",
        "PIPE_USAGE_HISTORY",
        "REPLICATION_USAGE_HISTORY",
        "SEARCH_OPTIMIZATION_HISTORY",
        "With this release, an organization administrator can use the ALTER ACCOUNT command to rename an account without\nneeding to contact SnowflakeSupport. The following example renames an account called original_acctname to new_acctname:",
        "By default, Snowflake continues to allow you to access the account using the old URL with the previous name, while also supporting a new URL\nthat contains the new account name. You have the option of dropping the old URL to require access using the new URL. For details, see\nManaging accounts in your organization.",
        "In this release, Snowflake adds the ability to view access of objects shared using Snowflake Secure Data Sharing by users in consumer\naccounts. With this update, Snowflake records the object accessed in the share in the base_objects_accessed column of the\nACCESS_HISTORY view in Account Usage.",
        "For example, if the provider shares a table and a view built from the table to the consumer account, and there is a query on the shared\nview, Snowflake records the shared view access in the base_objects_accessed column. This record, which includes the columnName\nand objectName values, allows the consumer to know which object was accessed in their account and also protects the provider because the\nunderlying table (via the objectId and columnId) is not revealed to the consumer.",
        "With this release, Snowflake enhances the versatility of masking and row access policies by allowing the\nIS_ROLE_IN_SESSION context function to support mapping table lookups. Policy administrators can now write\npolicy conditions to call mapping table lookups using this function to determine if a user\u2019s active primary or secondary roles in a session\ninherit the privileges granted to the role specified in the context function argument.With this enhancement, Snowflake encourages customers\nto use the IS_ROLE_IN_SESSION context function in the policy conditions that require checking enabled roles in the role hierarchy of the\ncurrent role.",
        "For more information, see Understanding Column-level Security and Understanding row access policies.",
        "In this release, Snowflake provides a new, interim view in the shared SNOWFLAKE database named:",
        "SNOWFLAKE.BCR_ROLLOUT.BCR_2022_07_DDM_ROLLOUT",
        "The view helps identify where the conditions of a masking policy do not match the length, scale, or precision of a column or when the policy\nconditions return a NULL value for a NOT NULL column. The view returns records beginning on July 15, 2022.",
        "This view is provided to help determine how the 2022_07 behavior change bundle will affect queries on columns that are protected by a\nmasking policy and to provide enough time to begin the process of updating masking policy conditions.",
        "For details, see Mitigating masking policy return value updates.",
        "Was this page helpful?",
        "On this page",
        "Related info",
        "For more details about the individual releases in which these changes were introduced, see:",
        "Releases"
    ]
}