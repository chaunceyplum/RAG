{
    "url": "https://docs.snowflake.com/en/user-guide/admin-user-management",
    "title": "User management | Snowflake Documentation",
    "paragraphs": [
        "User administrators can create and manage Snowflake users through SQL or the web interface:",
        "Using SQL, administrators can perform all user-related tasks, including changing login credentials and defaults for users.",
        "Snowsight supports most user-related tasks.",
        "Classic Console doesn\u2019t support all user-related tasks, but provides a wizard for creating users and performing most common\nactivities, such as resetting a user\u2019s password.",
        "The following roles or privileges are required to manage users in your account:",
        "The USERADMIN system role can create users using SQL (CREATE USER).",
        "If you prefer to use a custom role for this purpose, grant the CREATE USER privilege on the account to this role.",
        "Only the role with the OWNERSHIP privilege on a user can modify most user properties using SQL\n(ALTER USER).",
        "A password policy specifies the requirements that must be met to create and reset a password to authenticate to Snowflake.",
        "Snowflake provides two options for password policies:",
        "A built-in password policy to facilitate the initial user provisioning process.",
        "A schema-level password policy object that can be set at the level of the Snowflake account, an individual user, or both depending on\nthe use cases and needs of the user administrator.",
        "For details on best practices and each of the password policy options, see:",
        "Best practices for password policies and passwords",
        "Snowflake-provided password policy",
        "Custom password policy for the account and users",
        "Snowflake recommends the following best practices regarding passwords and password policies:",
        "The password policy object is enforced once the password policy is set on an account or user.",
        "Set these properties to values that meet your internal security needs. For details, see Step 4: Create a password policy\n(in this topic):",
        "PASSWORD_HISTORY to ensure users cannot reuse passwords too frequently and to help prevent brute force attacks to determine the\npassword for a user.",
        "PASSWORD_MIN_AGE_DAYS to require the user to use the new password. A value of 0 is not recommended because the user can change the\npassword to exhaust the password history and reuse the original password value too soon.",
        "To require the user to change their password to meet the password policy on their initial or next login to Snowflake, set the\nMUST_CHANGE_PASSWORD property on the user to TRUE using an ALTER USER command.",
        "For details, see Step 6: Require a password change (in this topic).",
        "Define an account-level password policy to require strong passwords.",
        "A strong password has at least 8 characters and includes a combination of uppercase and lowercase letters, special characters\n(e.g. ! and *), and numbers.",
        "Use Multi-factor authentication (MFA) for additional security.",
        "You can set a password for the user to access Snowflake in a SCIM API request. SCIM administrators and user administrators should choose\nto manage the user password to access Snowflake in either your identity provider or using a password policy in Snowflake.",
        "Currently, users provisioned to Snowflake with SCIM are required to have their password meet the\ndefault Snowflake password policy. This requirement can be bypassed if you choose to use this\npassword policy feature.",
        "To bypass the default password policy requirement, follow the instructions in the Using Password Policies section (in this topic).",
        "To monitor passwords:",
        "Query the Snowflake Account Usage USERS view to determine whether the HAS_PASSWORD\ncolumn value returns TRUE for a given user.",
        "Query the Snowflake Account Usage LOGIN_HISTORY view and evaluate the\nFIRST_AUTHENTICATION_FACTOR column. If a user does not require a password to access Snowflake, execute an\nALTER USER command to set the password property to NULL.",
        "A password can be any case-sensitive string up to 256 characters, including blank spaces and special (i.e. non-alphanumeric) characters,\nsuch as exclamation points (!), percent signs (%), and asterisks (*).",
        "During the initial user creation, it is possible to set a weak password for the user that does not meet the minimum requirements\ndescribed below (e.g. 'test12345'). This feature allows administrators the option to use generic passwords for the user during the\ncreation process. If this pathway is chosen, Snowflake strongly recommends setting the MUST_CHANGE_PASSWORD property to\nTRUE to require users to change their password on their next login, including the initial login, to Snowflake.",
        "Additionally, Snowflake allows creating users without an initial password to support business processes in which new users are not allowed\nto log into the system. If this occurs, the user\u2019s PASSWORD property value will be NULL. However, as a general rule,\nSnowflake expects that users are created with initial passwords.",
        "In the context of resetting an existing password (e.g. change 'test12345' to 'q@-*DaC2yjZoq3Re4JYX'), Snowflake\nenforces the following password policy as a minimum requirement while using the ALTER USER command and the\nweb interface:",
        "Must be at least 8 characters long.",
        "Must contain at least 1 digit.",
        "Must contain at least 1 uppercase letter and 1 lowercase letter.",
        "Snowflake strongly recommends the following guidelines for creating the strongest passwords possible:",
        "Create a unique password for Snowflake (i.e. do not reuse passwords from other systems or accounts).",
        "Use more than 8 characters.",
        "Include multiple, random mixed-case letters, numbers, and special characters, including blank spaces.",
        "Do not use easily-guessed common passwords, names, numbers, or dates.",
        "Finally, to configure the highest level of security for user login, Snowflake recommends that users\nenroll in MFA.",
        "The custom password policy is a schema-level object that specifies the requirements that must be met to create and reset a password to\nauthenticate to Snowflake, including the number of attempts to enter the password successfully and the number of minutes before a password\ncan be retried (i.e. the \u201clockout\u201d time).",
        "The password policy requirements for a password include upper or lowercase letters, special characters, numbers, and password length to\nmeet security requirements for users and clients to authenticate to Snowflake. Password policies that require strong passwords help to meet\nsecurity guidelines and regulations.",
        "Snowflake supports setting a password policy for your Snowflake account and for individual users. Only one password policy\ncan be set at any given time for your Snowflake account or a user. If a password policy exists for the Snowflake account and another\npassword policy is set for a user in the same Snowflake account, the user-level password policy takes precedence over the account-level\npassword policy.",
        "The password policy applies to new passwords that are set in your Snowflake account. To ensure that users with existing passwords meet the\npassword policy requirements, require users to change their password during their next login to Snowflake as shown in\nStep 6: Require a password change (in this topic).",
        "Note",
        "Most password policy property changes take effect the next time a user changes their password. For example, if you change the\nPASSWORD_MAX_LENGTH property from 10 to 16 to require the user to use a longer password then the user must\ncomply with the password policy change whenever they change their password. You can set the user property MUST_CHANGE_PASSWORD\nto TRUE with an ALTER USER statement to require the user to change their password on their next login\nto Snowflake.",
        "However, some password policy property changes take effect during the next login because Snowflake does not force the user to change\ntheir password in their current session:",
        "PASSWORD_MAX_AGE_DAYS = integer",
        "PASSWORD_MAX_RETRIES = integer",
        "PASSWORD_LOCKOUT_TIME_MINS = integer",
        "Any changes to these properties do not affect the current session. For example, a change to the value of the\nPASSWORD_MAX_AGE_DAYS property does not cause the user\u2019s current password to expire. However, during the next login to\nSnowflake, the user must change their password.",
        "Future grants of privileges on password policies are not supported.",
        "As a workaround, grant the APPLY PASSWORD POLICY privilege to a custom role to allow that role to apply password policies on the user or\nthe Snowflake account.",
        "The password policy can be managed with SQL using either SnowSQL or a\nsupported driver or connector, or in Worksheets using the Classic Console or\nSnowsight.",
        "Resetting or changing a password:",
        "Classic Console, SnowSQL, and supported connectors and drivers:",
        "When executing an ALTER USER command or using the Classic Console to reset or change a password,\nSnowflake evaluates the password policy to ensure that the newly created password matches the password policy requirements.",
        "Tracking password policy usage:",
        "Query the Account Usage PASSWORD_POLICIES view to return a row for each\npassword policy in your Snowflake account.",
        "Use the Information Schema table function POLICY_REFERENCES to return a row for each user that is\nassigned to the specified password policy and a row for the password policy assigned to the Snowflake account.",
        "Currently, only the following syntax is supported for password policies:",
        "Where password_policy_name is the fully qualified name of the password policy.",
        "For example, execute the following query to return a row for each user that is assigned the password policy named\npassword_policy_prod_1, which is stored in the database named my_db and the schema named my_schema:",
        "The following steps are a representative guide to define and set a password policy in Snowflake.",
        "These steps assume a centralized management approach in which a custom role named policy_admin owns the password policy (i.e. has the\nOWNERSHIP privilege on the password policy) and is responsible for setting the password policy on an account or user\n(i.e. has the global APPLY PASSWORD POLICY privilege, as shown in step 2).",
        "Note",
        "To set a policy on an account, the policy_admin custom role must also have the USAGE privilege on the database and schema that\ncontain the password policy.",
        "For more information, see: Access control privileges",
        "Create a custom role that allows creating and managing password policies. Throughout this topic, the example custom role is named\npolicy_admin, although the role could have any appropriate name.",
        "If the custom role already exists, continue to the next step.",
        "Otherwise, create the policy_admin custom role.",
        "If the policy_admin custom role does not already have the following privileges, grant these privileges as shown below:",
        "USAGE on the database and schema that will contain the password policy.",
        "CREATE PASSWORD POLICY on the schema that will store the password policy.",
        "APPLY PASSWORD POLICY on the account.",
        "If you decide to set a password policy on a user, grant the APPLY PASSWORD POLICY privilege on the user. For example, if the username is\nJSMITH, execute the following command.",
        "For more information, see Summary of DDL commands, operations, and privileges.",
        "Grant the policy_admin custom role to the users responsible for managing password policies.",
        "For more information, see Configuring access control",
        "Using the policy_admin custom role, create a password policy named password_policy_prod_1. For more information, see\nCREATE PASSWORD POLICY.",
        "Note",
        "The property PASSWORD_MAX_AGE_DAYS is set to the largest value, 999. Choose a value that aligns with your internal\nguidelines. For details, see CREATE PASSWORD POLICY.",
        "Set the policy on an account with the ALTER ACCOUNT command:",
        "If you decide to create an additional password policy for one or more users, set the user-level password policy on a user with an\nALTER USER command:",
        "Important",
        "To replace a password policy that is already set for an account or user, unset the password policy first and then set the new password\npolicy for the account or user. For example:",
        "Set the MUST_CHANGE_PASSWORD property to TRUE for individual users using an ALTER USER statement to\nrequire the users to change their password to meet the password policy on their next login to Snowflake.",
        "A password policy and its references (i.e. assignments to a user or the account) can be replicated from the source account to the target\naccount using database replication and account replication. For details, refer to:",
        "Account replication.",
        "Database replication.",
        "Snowflake provides the following set of privileges and DDL to manage password policies:",
        "Snowflake provides the following DDL commands to manage password policy objects:",
        "CREATE PASSWORD POLICY",
        "ALTER PASSWORD POLICY",
        "DROP PASSWORD POLICY",
        "SHOW PASSWORD POLICIES",
        "DESCRIBE PASSWORD POLICY",
        "The USAGE privilege on the parent database and schema are required to perform operations on any object in a schema.",
        "Privilege",
        "Usage",
        "CREATE PASSWORD POLICY",
        "Enables creating a new password policy.",
        "APPLY PASSWORD POLICY",
        "Enables applying a password policy at the account or user level.",
        "OWNERSHIP",
        "Grants full control over the password policy. Required to alter most properties of a password policy.",
        "The following table summarizes the relationship between the password policy DDL operations and their necessary privileges.",
        "The USAGE privilege on the parent database and schema are required to perform operations on any object in a schema.",
        "Operation",
        "Privilege required",
        "Create password policy",
        "A role with the CREATE PASSWORD POLICY privilege on the schema to store the password policy.",
        "Alter password policy",
        "A role with the OWNERSHIP privilege on the password policy.",
        "Drop password policy",
        "A role with the OWNERSHIP privilege on the password policy.",
        "Describe password policy",
        "A role with the OWNERSHIP privilege on the password policy or . the APPLY PASSWORD POLICY privilege on the account.",
        "Show password policies",
        "A role with the OWNERSHIP privilege on the password policy or . the APPLY PASSWORD POLICY privilege on the account.",
        "Set & unset password policy",
        "A role with the APPLY PASSWORD POLICY privilege on the account or the user.",
        "Snowflake uses roles to control the objects (virtual warehouses, databases, tables, etc.) that users can access:",
        "Snowflake provides a set of predefined roles, as well as a framework for defining a hierarchy of custom roles.",
        "All Snowflake users are automatically assigned the predefined PUBLIC role, which enables login to Snowflake and basic object access.",
        "In addition to the PUBLIC role, each user can be assigned additional roles, with one of these roles designated as their default role. A user\u2019s default role determines the role used in the Snowflake\nsessions initiated by the user; however, this is only a default. Users can change roles within a session at any time.",
        "Roles can be assigned at user creation or afterwards.",
        "Attention",
        "When deciding the additional roles to assign to a user, as well as designating their default role, consider the following for the predefined ACCOUNTADMIN role (required for performing account-level\nadministrative tasks):",
        "Snowflake recommends strictly controlling the assignment of ACCOUNTADMIN, but recommends assigning it to at least two users.",
        "ACCOUNTADMIN should never be designated as a user\u2019s default role. Instead, designate a lower-level administrative or custom role as their default.",
        "For more details and best practices related to the ACCOUNTADMIN role, see Access control considerations. For more general information about roles, see\nOverview of Access Control.",
        "You can create a user by using the following interfaces.",
        "Note",
        "The web interface, whether you use Classic Console or Snowsight, requires that you specify a password when you create a\nuser. The CREATE USER command and UserCollection.create\nPython API do not.",
        "For more information about passwords in Snowflake, see Password Policies (in this topic)",
        "Sign in to Snowsight.",
        "Select Admin \u00bb Users & Roles.",
        "Select + User.",
        "In the User Name field, enter a unique identifier for the user. The user uses this identifier to sign in to Snowflake unless you\nspecify a login name.",
        "Optionally specify an email address for the user in the Email field.",
        "In the Password and Confirm Password fields, enter the password for the user.",
        "Optionally add a comment explaining why you created the user.",
        "Leave the Force user to change password on first time login checkbox selected to force the user to change their password when they\nsign in.",
        "Optionally select Advanced User Options to specify additional details about the user:",
        "Login Name to use instead of the User Name when signing in to Snowflake.",
        "Display Name that appears after signing in.",
        "First Name and Last Name to complete the user profile.",
        "Default Role, Default Warehouse, and Default Namespace.",
        "Select Create User.",
        "Select Account  \u00bb Users.",
        "Select Create.",
        "In the User Name field, enter a unique identifier for the user.",
        "Note",
        "User name is the unique identifier for the user in Snowflake. It is not the user\u2019s login name (i.e. the name the user enters when logging into Snowflake). Snowflake allows users to have different user names and login names, if desired. You specify a login name for the user on the next screen.",
        "In the Password and Confirm Password fields, enter the password for the user.",
        "Leave the Force Password Change checkbox selected to force the user to change their password on their next login; otherwise, clear the checkbox.",
        "Select Next. The Advanced screen opens.",
        "Optionally enter the Login Name, Display Name, and personal information for the user.",
        "Note",
        "Users require a login name to log into Snowflake; if you don\u2019t explicitly provide a login name, Snowflake uses their user name as the login name.",
        "Select Next. The Preferences screen opens.",
        "Optionally enter defaults for the user:",
        "Virtual warehouse",
        "Namespace in the form of db_name or db_name.schema_name",
        "Role",
        "Select Finish. Snowflake displays a success message.",
        "Use the CREATE USER command to create a user.",
        "Important",
        "When creating a user, if you assign a default role to the user, you must then explicitly grant this role to the user. For example:",
        "Note that the GRANT ROLE command allows you to assign multiple roles to a single user. The web interface does not currently support the same capability.",
        "Use the UserCollection.create\nPython API to create a user.",
        "Important",
        "When creating a user, if you assign a default role to the user, you must then explicitly grant this role to the user. For example:",
        "Administrators can change a user\u2019s password through the following interfaces.",
        "Sign in to Snowsight.",
        "Select Admin \u00bb Users & Roles.",
        "Locate the user whose password you want to change and select  \u00bb Reset Password.",
        "Enter a new password for the user and confirm the password.",
        "Select Update.",
        "Note",
        "Users can only change their own password through Classic Console. For more information, see Changing Your Password / Switching Your (Session) Role / Logging Out.",
        "Select Account  \u00bb Users.",
        "Click a user row to select it, then select Reset Password. The Reset Password dialog opens.",
        "Enter the new password for the user, and confirm the password.",
        "Leave the Force Password Change checkbox selected to force the user to change their password on their next login; otherwise, clear the checkbox.",
        "Select Finish.",
        "Use the ALTER USER command to input a user\u2019s password. For example:",
        "Alternatively, use the ALTER USER \u2026 RESET PASSWORD syntax to generate a URL to share with the user. The URL opens a web page on which the user can enter the new password. For example:",
        "Note",
        "The generated URL is valid for one use only and expires after 4 hours.",
        "Executing the ALTER USER \u2026 RESET PASSWORD statement does not invalidate the current password. The user can continue to use the old password until the new password is set.",
        "The UserResource.create_or_alter\nmethod in the Snowflake Python APIs currently does not support changing the password for an existing user. You can only set the password\nusing this method when creating a new user.",
        "An account administrator (i.e. a user with the ACCOUNTADMIN role) can reset their own password using the procedure described in\nResetting the Password for a User.",
        "If an account administrator is locked out of their account, a different user with the ACCOUNTADMIN role\ncan reset the password for the locked-out administrator. In the event that the administrator is locked out and there is no other\nadministrator to change the password, contact Snowflake Support to reset the password.",
        "Users change their Snowflake password in the web interface by clicking the dropdown menu in the upper right (next to the login name) \u00bb Change Password. The Select a New Password dialog opens. The dialog accepts the current and new password.",
        "You can optionally disable the ability for users in your account to change their own password. Account administrators can continue to change user passwords using the web interface under Account  \u00bb Users, or through SQL using the ALTER USER command.",
        "To request this change, please contact Snowflake Support.",
        "Disabling a user prevents the user from logging into Snowflake. You can disable a user through the following interfaces.",
        "Sign in to Snowsight.",
        "Select Admin \u00bb Users & Roles.",
        "Locate the user that you want to disable and select  \u00bb Disable User.",
        "In the confirmation dialog that opens, select Disable.",
        "To enable a user, follow the same steps, but select Enable User.",
        "Click on Account  \u00bb Users.",
        "Click on a user row to select it, then click the Disable User button. A confirmation dialog opens.",
        "Click Yes to disable the user.",
        "To enable a user, follow the same steps, but select Enable User.",
        "Use the ALTER USER command to disable or enable a user. For example:",
        "Disable a user:",
        "Enable a user:",
        "Use the UserResource.create_or_alter\nPython API to disable or enable a user. For example:",
        "Disable a user:",
        "Enable a user:",
        "If a user login fails after five consecutive attempts, the user is locked out of their account for a period of time (currently 15 minutes).\nAfter the period of time elapses, the system automatically clears the lock and the user can attempt to log in again.",
        "To unlock the user before the time has elapsed, you can reset the timer using the ALTER USER command or the\nUserResource.create_or_alter Python API.",
        "The following example resets the timer to 0, which immediately unlocks user janesmith:",
        "Tip",
        "If a single role has the OWNERSHIP privilege on all Snowflake users, we recommend granting the role to multiple users. That way, if a member of the role is locked out, another member can unlock that user.",
        "To show the session parameters for a user, use the following SQL syntax:",
        "To alter the session parameters for a user, use the following syntax:",
        "For example, allow a user to remain connected to Snowflake indefinitely without timing out:",
        "To reset a session parameter for a user to the default value, use the following syntax:",
        "You can modify all other user properties using the ALTER USER command or the\nUserResource.create_or_alter Python API.\nYou can modify many of the same user properties using Snowsight.",
        "For example:",
        "Change the last name for user janesmith to Jones:",
        "Sign in to Snowsight.",
        "Select Admin \u00bb Users & Roles.",
        "Locate the user that you want to edit and select  \u00bb Edit.",
        "For the Last Name field, enter Jones.",
        "Select Save User.",
        "Set or change the default warehouse, namespace, primary role, and secondary roles for user janesmith:",
        "Note",
        "You cannot set default secondary roles for a user using Snowsight.",
        "Sign in to Snowsight.",
        "Select Admin \u00bb Users & Roles.",
        "Locate the user that you want to edit and select  \u00bb Edit.",
        "Open the Advanced User Options and enter values in the relevant fields.",
        "Select Save User.",
        "You can view information about users using the following interfaces.",
        "Use the DESCRIBE USER or SHOW USERS command to view information about one or more users.",
        "For example:",
        "Use the UserResource.fetch\nPython API to get information about a user.",
        "For example:",
        "Use the UserCollection.iter\nPython API to list users in an account.",
        "For example:",
        "Sign in to Snowsight.",
        "Select Admin \u00bb Users & Roles.",
        "Locate the user for which you want to view more details.",
        "You can review the display name, status, last login time, owning role, and whether or not the user has multi-factor authentication (MFA)\nset up. If the user has a comment, you can hover over the .",
        "Optionally select the user to see more details, such as their default settings, roles that have privileges granted on the user, and\nthe roles granted to the user.",
        "Dropping a user removes the user credentials from Snowflake.",
        "Important",
        "When you drop a user, the folders, worksheets, and dashboards owned by that user become inaccessible and do not transfer to another user\nunless sharing is enabled.",
        "Share recipients with View, View + Run, and Edit permissions\nwill retain their assigned permissions and can still access the shared folders, worksheets, and dashboards. However, only users with Edit\npermissions can modify or delete the shared folders, worksheets, and dashboards. If you don\u2019t give Edit permissions to at least one other\nuser before you drop the owner, that owner\u2019s folders, worksheets, and dashboards cannot be deleted.",
        "If a dropped user\u2019s worksheets do not have sharing enabled, an administrator can recover up to 500 worksheets owned by the user.",
        "Caution",
        "Any worksheets in the Classic Console will be permanently deleted, and dashboards will be inaccessible if they were not previously shared\nwith another user.",
        "Objects created by the user, such as tables or views, are not dropped because they are owned by the user\u2019s active role when the objects\nwere created. Another user assigned the same role or a higher role in the role hierarchy can manage the objects or transfer ownership to another role.",
        "Sign in to Snowsight.",
        "Select Admin \u00bb Users & Roles.",
        "Locate the user that you want to disable and select  \u00bb Drop.",
        "In the confirmation dialog that opens, select Drop User.",
        "Select Account  \u00bb Users.",
        "Click a user row to select it, then select Drop. A confirmation dialog opens.",
        "Select Yes to drop the user.",
        "Use the DROP USER command to drop a user.",
        "Use the UserResource.drop\nPython API to drop a user.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}