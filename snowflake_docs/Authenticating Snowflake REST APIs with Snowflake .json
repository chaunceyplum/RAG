{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-rest-api/authentication",
    "title": "Authenticating Snowflake REST APIs with Snowflake | Snowflake Documentation",
    "paragraphs": [
        "Feature \u2014 Generally Available",
        "Not available in government regions.",
        "This topic describes how to authenticate to the server when using the Snowflake REST APIs.",
        "When you send a request, the request must include authentication information using either of the following:",
        "Using key pair authentication",
        "Using OAuth",
        "When using key pair authentication, you need to complete the following tasks:",
        "Set up key pair authentication",
        "Generate a JWT token",
        "To use key pair authentication, follow these steps:",
        "Set up key pair authentication.",
        "As part of this process, you must:",
        "Generate a public-private key pair. The generated private key should be in a file (e.g. named rsa_key.p8).",
        "Assign the public key to your Snowflake user. After you assign the key to the user, run the\nDESCRIBE USER command. In the output, the RSA_PUBLIC_KEY_FP property should be set to the fingerprint of the public key assigned to the user.",
        "For instructions on how to generate the key pair and assign a key to a user,\nsee Key-pair authentication and key-pair rotation.",
        "Use SnowSQL to verify that you can use the generated private key to\nconnect to Snowflake:",
        "If you generated an encrypted private key, SnowSQL prompts you for the passphrase that you created when you generated the key.",
        "To generate a JWT token in your application code, use the following steps:",
        "Generate the fingerprint (a SHA-256 hash) of the public key for the user. Prefix the fingerprint with SHA256:.",
        "For example:",
        "SHA256:hash",
        "You can also execute the SQL DESCRIBE USER command to get the value from\nthe RSA_PUBLIC_KEY_FP property.",
        "Generate a JSON Web Token (JWT) with the following fields in the payload:",
        "Field",
        "Description",
        "Example",
        "iss",
        "Issuer of the JWT. Set it to the following value:",
        "account_identifier.user.SHA256:public_key_fingerprint",
        "where:",
        "account_identifier is your Snowflake account identifier.",
        "If you are using the account locator, exclude any region information from\nthe account locator.",
        "user is your Snowflake user name.",
        "SHA256:public_key_fingerprint is the fingerprint that you generated in the previous step.",
        "Note",
        "The account_identifier and user values must use all uppercase characters.",
        "MYORGANIZATION-MYACCOUNT.MYUSER.SHA256:public_key_fingerprint",
        "sub",
        "Subject for the JWT. Set it to the following value:",
        "account_identifier.user",
        "MYORGANIZATION-MYACCOUNT.MYUSER",
        "iat",
        "Issue time for the JWT in UTC. Set the value to the current time value as either seconds or milliseconds.",
        "1615370644 (seconds) .\n1615370644000 (milliseconds)",
        "exp",
        "Expiration time for the JWT in UTC.  You can specify the value as either seconds or milliseconds.",
        "Note",
        "The JWT is valid for at most one hour after the token is issued, even if you specify a longer expiration time.",
        "1615374184 (seconds) .\n1615374184000 (milliseconds)",
        "In each API request that you send, set the following headers:",
        "Authorization: Bearer JWT",
        "where JWT is the token that you generated.",
        "X-Snowflake-Authorization-Token-Type: KEYPAIR_JWT",
        "To use OAuth, follow these steps:",
        "Set up OAuth for authentication.",
        "See Introduction to OAuth for details on how to set up OAuth and get an OAuth token.",
        "Use SnowSQL to verify that you can use a generated OAuth token to connect to Snowflake:",
        "For Linux and MacOS systems",
        "For Windows systems",
        "In each API request you send, set the following headers:",
        "Authorization: Bearer oauth_token",
        "where oauth_token is the generated OAuth token.",
        "X-Snowflake-Authorization-Token-Type: OAUTH",
        "Was this page helpful?",
        "On this page"
    ]
}