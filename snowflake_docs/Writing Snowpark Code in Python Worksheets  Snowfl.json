{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/python/python-worksheets",
    "title": "Writing Snowpark Code in Python Worksheets | Snowflake Documentation",
    "paragraphs": [
        "Write Snowpark code in Python worksheets to process data using Snowpark Python in Snowsight.\nBy writing code in Python worksheets, you can perform your development and testing in Snowflake without needing to install dependent libraries.",
        "To develop with Python worksheets, do the following:",
        "Prepare roles and packages in Snowflake.",
        "Set up your worksheet for development.",
        "Write Snowpark code in your Python worksheet.",
        "Run your Python worksheet.",
        "For example, you might write code in a Python worksheet that extracts data from stages or database objects in Snowflake, transforms the\ndata, and stores the transformed data in Snowflake. You could then\ndeploy that code as a stored procedure and build a\ndata pipeline, all without leaving Snowflake.",
        "Python worksheets let you use Snowpark Python in Snowsight to perform data manipulations and transformations. You can use\nthird-party packages listed in the Snowflake Anaconda channel or import your own Python files\nfrom stages to use in scripts.",
        "After running a Python worksheet, review the results and output returned by your script. The results display as a string, variant, or a\ntable, depending on your code. See Running Python Worksheets.",
        "Note",
        "Because Python worksheets run inside Snowflake rather than in your local development environment, you cannot use session.add_import\nto add a file that your Python code depends on, or session.add_packages or session.add_requirements to add packages that you need\nto use in your Python code. Instead, you add those files to a stage and reference them in your code.\nSee Staging files using Snowsight.",
        "Python worksheets have the following limitations:",
        "Log levels lower than WARN do not appear in the Output for a Python worksheet by default. To log lower level messages to the output,\nuse a logging library such as the logging module to set the level of messages logged.",
        "No support for breakpoints or running only portions of the Python code in a worksheet.",
        "No support for images or webpages. Images or webpages generated by Python code cannot be displayed in Python worksheets.",
        "Python worksheets use Python 3.11 by default, but you can choose another supported version in Packages.",
        "If you require support for any of these options, consider using your local development environment instead.\nSee Setting Up Your Development Environment for Snowpark Python.",
        "To use Python worksheets, you must do the following:",
        "Review and accept the Anaconda Terms of Service in Snowsight. See Review and accept the Anaconda Terms of Service.",
        "(Optional) Add Python files and packages that are not included with Anaconda that you want\nto use in a Python worksheet to a named stage. See Add a Python File from a Stage to a Worksheet.",
        "Choose a warehouse to use for Python worksheets. Snowflake recommends using an X-Small warehouse for development.\nIf you\u2019re running a very large Snowpark workload, use a Snowpark-optimized warehouse.\nSee Warehouse size for additional details about warehouse sizes.",
        "Before you start using the packages provided by Anaconda inside Snowflake, you must acknowledge\nthe External Offerings Terms.",
        "Note",
        "You must use the ORGADMIN role to accept the terms. You only need to accept the\nExternal Offerings Terms once for your Snowflake account. If you do not have\naccess to the ORGADMIN role, see Enabling the ORGADMIN role in an account.",
        "Sign in to Snowsight.",
        "Select Admin \u00bb Billing & Terms.",
        "In the Anaconda section, select Enable.",
        "In the Anaconda Packages dialog, click the link to review the External Offerings Terms page.",
        "If you agree to the terms, select Acknowledge & Continue.",
        "If you encounter an error when attempting to accept the External Offerings Terms,\nit may be due to missing information in your user profile, such as a first name, last name, or email address. If you have administrator\nprivileges, see Add user details to your user profile to update your profile using Snowsight. Otherwise, contact an\nadministrator to update your account.",
        "Snowflake includes the Snowpark packages from the Snowflake Anaconda channel\nin Python worksheets.",
        "If you want to use Python files or packages other than those included in Anaconda in your Python worksheet, you must upload the files\nto a named stage in Snowflake and then add them to the list of installed packages for your Python worksheet.",
        "To use a Python package in your worksheet, do the following:",
        "Sign in to Snowsight.",
        "Open Projects \u00bb Worksheets.",
        "Select + \u00bb Python Worksheet.",
        "Select a database and schema.",
        "Select Packages \u00bb Stage Packages.",
        "Enter the path to the package in the stage:",
        "If the selected database and schema for the worksheet contain the stage where the package is located, you can reference the stage using\nan unqualified name. For example, @YourStage/path/to/example_package.py.",
        "To reference a stage in a different database and schema, fully qualify the name of the stage. For example,\n@Database.Schema.Stage/path/to/other_package.py.",
        "Select Import to add your package to the list of installed packages.",
        "In your code, use import statements to use the package in your Python worksheet.\nFor example, after importing packages from the example_package.py and other_package.py files,\nwrite the following code to import a function called function from the example_package, and import the\npackage other_package for use in your code:",
        "Note",
        "Packages that you add to a worksheet are available only to that worksheet. If you want to use the same package in a different Python\nworksheet, use this procedure to add the package to that worksheet.",
        "For more details, see Making dependencies available to your code.",
        "To open a worksheet and configure your development environment, do the following:",
        "Sign in to Snowsight.",
        "Open Projects \u00bb Worksheets.",
        "Select + \u00bb Python Worksheet.",
        "Select a database and schema.",
        "Select a warehouse to use to run the worksheet. If you have a default warehouse for your user, it is pre-selected.",
        "Python worksheets require a running warehouse to load Python packages and run Python code.",
        "(Optional) Select Packages to install Python libraries.",
        "The snowflake-snowpark-python package is required and always installed for Python worksheets.",
        "Search for packages listed in the Snowflake Anaconda channel,\nsuch as numpy, pandas, requests, and urllib3. Select a package to install it for use in your worksheet, and optionally change\nthe default package version in the list of Installed Packages.",
        "Add your own packages and Python files by selecting Stage Packages and specifying the file path of the stage and package,\nthen selecting Import. See Add a Python File from a Stage to a Worksheet.",
        "Packages installed by you appear under Installed Packages.",
        "If you installed Python libraries for your worksheet, add import statements to your code to use the installed libraries.",
        "For example, if you install the package scikit-learn for your Python worksheet, add an import statement for that package\nat the beginning of your code",
        "Run the sample Python code to validate your configuration.",
        "Error messages or the return value from your code appears in the Results section. To view log messages, select Output.\nSee Running Python Worksheets.",
        "After you follow the steps to start developing with Python worksheets, you can replace the\nsample code with your own.",
        "Write your Snowpark Python code inside the handler function:",
        "The default handler function is main, but you can change it in the Settings for the worksheet.\nThe active handler is highlighted in the worksheet.",
        "Use the session object provided in the boilerplate code to access data in Snowflake with the Snowpark API libraries.\nFor example, you can create a DataFrame for a table or execute a SQL\nstatement. See the Snowpark Developer Guide for Python.",
        "As you type, you see autocomplete for Python methods, defined variables, and more. You do not see autocomplete for\nsome third-party packages or files imported from a stage. Python worksheets also include syntax highlighting and guidance for\nmethod parameters. You can configure linting and line wrapping in the Settings for the worksheet.",
        "When you write your Python code, consider which type of data is returned by the return statement in your code and adjust how the\nworksheet returns results. By default, a Python worksheet has a return type of Table() because the placeholder code returns a DataFrame.",
        "Depending on what your Python code returns, you might want to change the worksheet settings to display the output differently:",
        "If your handler function returns a DataFrame, use the default return type of Table().",
        "If your handler function returns a list of Row objects, such as with the collect method, change the return type\nto Variant.",
        "If your handler function returns a string, such as return \"Hello Python\", or a value that you want to cast as a string,\nchange the return type to String.",
        "If your handler function returns an integer, such as with the count method, use a return type of Variant or String.",
        "For details about the return type of some DataFrame methods, see Performing an Action to Evaluate a DataFrame.",
        "To update the worksheet settings to return results of a different type, do the following:",
        "Sign in to Snowsight.",
        "Open Projects \u00bb Worksheets.",
        "Open the Python worksheet for which you want to display the results as a table.",
        "Select a warehouse to use to run the worksheet. If you have a default warehouse for your user, it is pre-selected. Make sure your warehouse is running.",
        "Select Settings and for the Return type, select the type returned by the handler function.",
        "Run your Python worksheet.",
        "Review the results in the Results panel.",
        "With a Python worksheet, you can test a Python function that takes a single argument (a Snowpark Session object) by designating that\nfunction as the handler for the worksheet. Every function defined in a Python worksheet needs to pass in the session: snowpark.Session\nargument.",
        "To test a function that passes in additional arguments, do the following:",
        "Add the arguments to your function.",
        "Define a separate, single-argument function that passes in a Snowpark Session. In this function, call the multi-argument function,\npassing in values for the additional arguments, then return the value of the function.",
        "For example, to write Snowpark Python code that filters a table of packages by the package language column, you can write the following\ncode:",
        "In this example, the main function is the multi-argument function and the test_language function is the single-argument\nfunction used to validate that your code runs with the passed argument values.",
        "Set the single-argument function as the handler function to run the worksheet and validate that your code runs with the argument values.",
        "In this example, change the handler to the test_language function and then select Run. You can change the handler in the\nworksheet Settings, or select the Show actions lightbulb next to the handler function and select\nSet function \u201ctest_language\u201d as handler.",
        "When you deploy your Python worksheet as a stored procedure,\nyou can choose the main handler function and review the arguments and the mapped types for your stored procedure.",
        "After you write your Python worksheet, select Run to run your Python worksheet.\nRunning your worksheet executes all of the code in your Python worksheet. Partial or incremental execution of code is not supported.",
        "Note",
        "If you use a package listed in the Snowflake Anaconda channel\nand have not yet accepted the Anaconda terms, you might see an error about missing packages. See Using third-party packages from Anaconda.",
        "You can review standard output (stdout) or standard error (stderr) messages for your Python code in the Output panel for a\nPython worksheet.",
        "You can see the output from the following types of functions in the Output panel:",
        "Functions that write to the console, such as print().",
        "Functions that print a DataFrame, such as the show method of the DataFrame class in Snowpark Python.",
        "Note",
        "Output appears after all Python processes finish running, rather than appearing in a stream as the code runs.",
        "Log output is written to a temporary stage and is only captured if the following are true:",
        "You select a database and schema for the worksheet.",
        "The selected database was not created from a share.",
        "You run the worksheet using a role that has USAGE privileges on the selected database and schema.",
        "When a Python worksheet runs in Snowsight, an anonymous stored procedure runs the code and generates queries\nthat execute the Snowpark commands in the code.",
        "You can use the Query History page in Snowsight to review the queries that ran.\nSee Review Query History in Snowsight.",
        "For example, after running a worksheet, you can review the queries that ran by doing the following:",
        "Review the Results of the worksheet.",
        "In the Query Details for the worksheet, select  \u00bb Copy Query ID",
        "Select Projects \u00bb Worksheets to return to the list of worksheets.",
        "Select Monitoring \u00bb Query History.",
        "On the Query History page, display only the queries from your Python worksheet:",
        "Select Filters, and enable the Query ID option.",
        "Enter the Query ID of your Python worksheet.",
        "Select Apply Filters.",
        "Review the queries run for the worksheet.",
        "When you write Python worksheets, you can perform data transformation and manipulation tasks,\nincluding reading data from a named stage.",
        "Example: Write a Simple Snowpark Program",
        "Example: Transform Data in a Python Worksheet",
        "Example: Read Files from a Stage with Python Worksheets",
        "You can review additional examples in Working with DataFrames in Snowpark Python.",
        "In this example, write a Snowpark Python program that generates a small range of numbers and writes the range to a\ntable that your code creates, or overwrites if it already exists, in Snowflake. To run this code example, you must have the\nCREATE TABLE privilege on the database schema to which you want to add the table.",
        "Sign in to Snowsight.",
        "Open Projects \u00bb Worksheets.",
        "Select + \u00bb Python Worksheet.",
        "Select a database and schema that you want to add the table to.",
        "Select a warehouse to use to run the worksheet. If you have a default warehouse for your user, it is pre-selected. Make sure your warehouse is running.",
        "Write the Snowpark Python code as part of the main function:",
        "Select Settings and for the Return type, select String for the type returned by the handler function.",
        "Run the code.",
        "In this example, write Python code that aggregates the entries in the TASK_HISTORY view in the ACCOUNT_USAGE schema of the SNOWFLAKE\ndatabase by scheduled time and state and saves the aggregated output to a table, aggregate_task_history.",
        "Note",
        "Because this example queries account usage data, you must use a role with:",
        "Access to query the views in the ACCOUNT_USAGE schema. See Enabling other roles to use schemas in the SNOWFLAKE database.",
        "The CREATE TABLE privilege on the database schema to which you want to add the table.",
        "Sign in to Snowsight.",
        "Open Projects \u00bb Worksheets.",
        "Select + \u00bb Python Worksheet.",
        "Select a database and schema that you want to add the table to.",
        "Select a warehouse to use to run the worksheet. If you have a default warehouse for your user, it is pre-selected. Make sure your warehouse is running.",
        "Write the Snowpark Python code as part of the main function:",
        "Select Settings and for the Return type, select String for the type returned by the handler function.",
        "Run the code.",
        "After you run your code in a Python worksheet, you can open a SQL worksheet and query the table. See Querying data using worksheets.",
        "Snowpark Python lets you read files from a stage and write the contents to a table or save them as a view in Snowflake.\nIn this example, the Python code reads the contents of a compressed CSV-formatted file containing employee data,\ndata_0_0_0.csv.gz from the db1.public.files named stage and writes the contents to a table called employees.",
        "Note",
        "To run this code example, you must use a role that has:",
        "The USAGE privilege on the stage, database, and schema used in the code.",
        "The CREATE TABLE privilege on the database schema to which you want to add the table.",
        "Sign in to Snowsight.",
        "Open Projects \u00bb Worksheets.",
        "Select + \u00bb Python Worksheet.",
        "Select a database and schema that you want to add the table to.",
        "Select a warehouse to use to run the worksheet. If you have a default warehouse for your user, it is pre-selected.\nMake sure your warehouse is running.",
        "Write the Snowpark Python code as part of the main function:",
        "Select Settings and for the Return type, select String for the type returned by the handler function.",
        "Run the code.",
        "After you run your code in a Python worksheet, you can open a SQL worksheet and query the table. See Querying data using worksheets.",
        "For more details about working with files in a stage using Snowpark, see Working with DataFrames in Snowpark Python.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}