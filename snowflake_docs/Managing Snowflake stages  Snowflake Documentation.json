{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-cli/stages/manage-stages",
    "title": "Managing Snowflake stages | Snowflake Documentation",
    "paragraphs": [
        "Feature \u2014 Generally Available",
        "Not available in government regions.",
        "The snow stage commands let you perform additional stage-specific tasks:",
        "Create a named stage if it does not already exist.",
        "Copy all files from source to target directory.",
        "List the contents of a stage.",
        "Execute SQL files from a stage.",
        "Remove a file from a stage.",
        "The snow stage create command creates a named stage if it does not already exist.",
        "For example, to create a stage called new_stage, enter the following command:",
        "The following example shows what happens if you try to create a stage, packages, that already exists.",
        "The snow stage copy command copies a file from the local machine to a stage or from a stage to a local machine.",
        "One of <source_path> or <destination_path> must be a local path, while the other must a path to the Snowflake stage. Note the following:",
        "The stage path must start with @, as shown in the following examples.",
        "When copying a single file, the <destination_path> must identify a directory, not a file. If the specified directory does not exist, the command creates it.",
        "By default, when copying a local directory to a stage, the local directory must contain only files. You can use the --recursive option to upload sub-directories in the local directory. You can use glob patterns with the --recursive option.",
        "When copying a directory from a stage to a local filesystem, the command currently flattens its internal tree structure. To illustrate, assume your local directory contains the following:",
        "After copying the directory from the stage, the local filesystem directory contains the following:",
        "Note",
        "If you want to maintain the file structure from the source directory, you can include the --recursive option.",
        "To copy files from the local machine to a stage, enter a commands similar to the following:",
        "You can use the snow stage list-files command to verify the command copied the files successfully:",
        "The following example copies files from a stage to a directory on the local machine:",
        "You can list the directory contents to verify the command copied the files correctly:",
        "Note that the local directory must exist.",
        "You can copy from a user stage (@~):",
        "You can specify multiple files matching a regular expression by using a glob pattern for the source_path argument. You must enclose the glob pattern in single or double quotes.",
        "The following example copies all .txt files in a directory to a stage.",
        "The snow stage list-files command lists the stage contents.",
        "For example, to list the packages in a stage, enter the following command:",
        "The snow stage execute command executes SQL or Python files from a stage.",
        "For .sql files, the it performs an EXECUTE IMMEDIATE FROM command on .sql files from a stage.",
        "For .py files, it executes a session-scoped Snowpark Python procedure.",
        "Snowflake CLI executes the procedure in Snowflake to guarantee a consistent execution environment. If your Python scripts require additional requirements, you should specify them in a requirements.txt file that resides in the same directory as the files on the stage. The snow stage execute command only supports packages from the Snowflake Anaconda channel.",
        "By default, the command looks for the requirements.txt file in the following precedence:",
        "Stage path specified in the command\u2019s stage_path parameter.",
        "Parent directories of the specified stage path hierarchy, until it reaches the stage.",
        "If you don\u2019t specify a requirements.txt file, the command assumes no additional packages are necessary.",
        "For example, if you run snow stage execute @my_stage/ml/app1/scripts, the command looks for the file as follows:",
        "my_stage/ml/app1/scripts/requirements.txt",
        "my_stage/ml/app1/requirements.txt",
        "my_stage/ml/requirements.txt",
        "my_stage/ml/requirements.txt",
        "The following examples illustrate ways to execute different sets of .sql files from a stage:",
        "Specify only a stage name to execute all .sql files in the stage:",
        "Specify a user stage (@~) to execute the script.sql files in the user stage:",
        "Specify a glob-like pattern to execute all .sql files in the dir directory:",
        "Specify a glob-like pattern to execute only .sql files in the dir directory that begin with \u201cscript\u201d, followed by one character:",
        "Specify a direct file path with the --silent option:",
        "The snow stage remove command removes a file from a stage.",
        "For example, to remove a file from a stage, enter a command similar to the following:",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}