{
    "url": "https://docs.snowflake.com/en/developer-guide/odbc/odbc-using",
    "title": "Using the ODBC Driver | Snowflake Documentation",
    "paragraphs": [
        "This topic provides information about how to use the ODBC driver.",
        "If a C/C++ application is built with the Snowflake ODBC driver library and loads a non-pthread-compatible\nlibrary, the application could crash due to unsafe concurrent access to shared memory. To prevent this,\ncompile the application with the option which ensures that only pthread-compatible libraries are loaded\nwith the application.",
        "For gcc/g++, the option is \u201c-pthread\u201d.",
        "If a C/C++ application is built with the Snowflake ODBC driver library and loads a non-pthread-compatible\nlibrary, the application could crash due to unsafe concurrent access to shared memory. To prevent this,\ncompile the application with the option which ensures that only pthread-compatible libraries are loaded\nwith the application.",
        "For clang/clang++, the option is \u201c-pthread\u201d.",
        "Note",
        "Executing multiple statements in a single query requires that a valid warehouse is available in a session.",
        "In ODBC, you can send a batch of SQL statements (separated by semicolons) to execute in a single request. The following example sends a batch of three SELECT statements:",
        "For more information about sending SQL statement batches, see\nBatches of SQL statements.",
        "To send a batch of statements with the Snowflake ODBC Driver, you must specify the number of statements in the batch. The Snowflake database requires the exact number of statements in order to guard against SQL injection attacks.",
        "For more information about these types of attacks, see SQL injection.",
        "The next section explains how to specify the number of statements in a batch.",
        "By default, the Snowflake database expects the driver to prepare and send a single statement for execution.",
        "You can override this by specifying the number of statements in a batch for a given request or by enabling multiple statements for\nthe current session or account:",
        "To specify the number for a given request, call\nSqlSetStmtAttr to set the SQL_SF_STMT_ATTR_MULTI_STATEMENT_COUNT attribute to the number of statements in the batch.",
        "If you want to use the setting for the current session or account (rather than specify the number for the request), set\nSQL_SF_STMT_ATTR_MULTI_STATEMENT_COUNT to -1.",
        "For more information, see the SqlSetStmtAttr documentation.",
        "To enable multiple statements for the current session or account, alter the session or account, and set the Snowflake\nMULTI_STATEMENT_COUNT parameter to 0.",
        "Use:",
        "or:",
        "By default, MULTI_STATEMENT_COUNT is set to 1, which indicates that only one SQL statement can be executed.",
        "Note: Setting the MULTI_STATEMENT_COUNT parameter at the account level also affects other Snowflake connectors and\ndrivers that use the account (e.g. the Snowflake JDBC Driver).",
        "The ODBC Driver supports the ability to prepare a batch of SQL statements (e.g. by calling the SQLPrepare function). Note\nthe following:",
        "If the statements have parameters, calling the SQLNumParams function returns the total number of parameters in all the statements in the batch.",
        "For more informaiton about parameters and the SQLNumParams function, see Statement Parameters and SQLNumParams Function.",
        "Column information about the result set (e.g. data returned by SQLNumResultCols, SQLDescribeCol, SQLColAttribute, and\nSQLColAttributes) is available when you call SQLExecute or SQLExecDirect.",
        "Although some column information is available when you call SQLPrepare, the information might not be completely accurate, and\nsubsequent calls to SQLExecute or SQLExecDirect might provide more accurate information.",
        "GET and PUT commands are not supported in batches of SQL statements. When you send a batch of SQL statements with GET and PUT\ncomments to be executed, the GET and PUT commands are ignored, and no errors are reported.",
        "In your application code, you can insert multiple rows in a single batch by binding\nparameters in an INSERT statement to array variables.",
        "As an example, the following code inserts rows into a table that contains an INTEGER column and a VARCHAR column. The example\nbinds arrays to the parameters in the INSERT statement.",
        "When you use this technique to insert a large number of values, the driver can improve performance by streaming the data (without\ncreating files on the local machine) to a temporary stage for ingestion. The driver automatically does this when the number of\nvalues exceeds a threshold.",
        "In addition, the current database and schema for the session must be set. If these are not set, the CREATE TEMPORARY STAGE command\nexecuted by the driver can fail with the following error:",
        "Note",
        "For alternative ways to load data into the Snowflake database (including bulk loading using the COPY command), see\nLoad data into Snowflake.",
        "Was this page helpful?",
        "On this page"
    ]
}