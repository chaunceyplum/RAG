{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-python-api/snowflake-python-managing-accounts",
    "title": "Managing Snowflake accounts and managed accounts with Python | Snowflake Documentation",
    "paragraphs": [
        "Feature \u2014 Generally Available",
        "Not available in government regions.",
        "You can use Python to manage accounts and managed accounts in Snowflake.",
        "The examples in this topic assume that you\u2019ve added code to connect with Snowflake and to create a Root object from which to use the\nSnowflake Python APIs.",
        "For example, the following code uses connection parameters defined in a configuration file to create a connection to Snowflake:",
        "Using the resulting Session object, the code creates a Root object to use the API\u2019s types and methods. For more information,\nsee Connect to Snowflake with the Snowflake Python APIs.",
        "Minimum API version required",
        "0.13.0",
        "You can manage accounts in your Snowflake organization. For an overview of accounts in Snowflake, see\nManaging accounts in your organization.",
        "The Snowflake Python APIs represents accounts with two separate types:",
        "Account: Exposes an account\u2019s properties such as its name identifier, the login name and password of its initial administrative\nuser, and its Snowflake edition.",
        "AccountResource: Exposes methods you can use to drop and restore a corresponding Account object.",
        "To create an account, first create an Account object, and then create an AccountCollection object from the API Root\nobject. Using AccountCollection.create, add the new account to Snowflake.",
        "Code in the following example creates an Account object that represents an account named my_account1 with the specified\naccount properties:",
        "You can list accounts using the AccountCollection.iter method, which returns a PagedIter iterator of Account\nobjects.",
        "Code in the following example lists accounts whose name starts with my and prints the name of each:",
        "Code in the following example sets the optional parameter history=True to list a history of accounts including dropped accounts that\nhave not yet been deleted.",
        "You can perform common account operations\u2014such as dropping and undropping an account\u2014with an AccountResource object.",
        "To demonstrate operations you can do with an account resource, code in the following example does the following:",
        "Gets the my_account1 account resource object.",
        "Drops the account with the specified grace period, which is the number of days during which the account can be restored (\u201cundropped\u201d).",
        "Undrops the account.",
        "Minimum API version required",
        "0.13.0",
        "You can manage Snowflake managed accounts, which are currently used by data providers to create reader accounts for their consumers. For\nmore information, see Manage reader accounts.",
        "The Snowflake Python APIs represents managed accounts with two separate types:",
        "ManagedAccount: Exposes a managed account\u2019s properties such as its name identifier, the login name and password of its initial\nadministrative user, and its account type.",
        "ManagedAccountResource: Exposes methods you can use to drop a corresponding ManagedAccount object.",
        "To create a managed account, first create a ManagedAccount object, and then create a ManagedAccountCollection object from\nthe API Root object. Using ManagedAccountCollection.create, add the new managed account to Snowflake.",
        "Code in the following example creates a ManagedAccount object that represents a managed account named reader_acct1 with the\nspecified account properties:",
        "You can list managed accounts using the ManagedAccountCollection.iter method, which returns a PagedIter iterator of\nManagedAccount objects.",
        "Code in the following example lists managed accounts whose name starts with reader and prints the name of each:",
        "You can drop a managed account with a ManagedAccountResource object.",
        "Code in the following example gets the reader_acct1 managed account resource object and then drops the account.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}