{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-pipe",
    "title": "CREATE PIPE | Snowflake Documentation",
    "paragraphs": [
        "Creates a new pipe in the system for defining the COPY INTO <table> statement used by\nSnowpipe to load data from an ingestion queue into tables.",
        "ALTER PIPE, DROP PIPE , SHOW PIPES , DESCRIBE PIPE",
        "Identifier for the pipe; must be unique for the schema in which the pipe is created.",
        "The identifier must start with an alphabetic character and cannot contain spaces or special characters unless the entire identifier\nstring is enclosed in double quotes (e.g. \"My object\"). Identifiers enclosed in double quotes are also case-sensitive.",
        "For more details, see Identifier requirements.",
        "COPY INTO <table> statement used to load data from queued files into a Snowflake table. This statement serves\nas the text/definition for the pipe and is displayed in the SHOW PIPES output.",
        "Note",
        "We currently do not recommend using the following functions in the copy_statement for Snowpipe:",
        "CURRENT_DATE",
        "CURRENT_TIME",
        "CURRENT_TIMESTAMP",
        "GETDATE",
        "LOCALTIME",
        "LOCALTIMESTAMP",
        "SYSDATE",
        "SYSTIMESTAMP",
        "It is a known issue that the time values inserted using these functions can be a few hours earlier than the LOAD_TIME values returned\nby the COPY_HISTORY function or the\nCOPY_HISTORY view.",
        "It is recommended to query  METADATA$START_SCAN_TIME instead, which provides a more accurate representation of record loading.",
        "Specifies whether to automatically load data files from the specified external stage and optional path when event notifications are\nreceived from a configured message service:",
        "TRUE enables automatic data loading.",
        "Snowpipe supports loading from external stages (Amazon S3, Google Cloud Storage, or Microsoft Azure).",
        "FALSE disables automatic data loading. You must make calls to the Snowpipe REST API endpoints to load data files.",
        "Snowpipe supports loading from internal stages (i.e. Snowflake named stages or table stages, but not user stages) or\nexternal stage (Amazon S3, Google Cloud Storage, or Microsoft Azure).",
        "Required only when configuring Snowpipe to send error notifications to a cloud messaging service.",
        "Specifies the name of the notification integration used to communicate with the messaging service. For more information, see\nSnowpipe error notifications.",
        "Required only when configuring AUTO_INGEST for Amazon S3 stages using SNS.",
        "Specifies the Amazon Resource Name (ARN) for the SNS topic for your S3 bucket. The CREATE PIPE statement subscribes the\nAmazon Simple Queue Service (SQS) queue to the specified SNS topic. The pipe copies files to the ingest queue triggered by event\nnotifications via the SNS topic. For more information, see Automating Snowpipe for Amazon S3.",
        "Required only when configuring AUTO_INGEST for Google Cloud Storage or Microsoft Azure stages.",
        "Specifies the existing notification integration used to access the storage queue. For more information, see:",
        "Automating Snowpipe for Google Cloud Storage",
        "Automating Snowpipe for Microsoft Azure Blob Storage",
        "The integration name must be typed in all uppercase.",
        "Specifies a comment for the pipe.",
        "Default: No value",
        "This SQL command requires the following minimum permissions:",
        "Privilege",
        "Object",
        "Notes",
        "CREATE PIPE",
        "Schema",
        "USAGE",
        "Stage in the pipe definition",
        "External stages only",
        "READ",
        "Stage in the pipe definition",
        "Internal stages only",
        "SELECT, INSERT",
        "Table in the pipe definition",
        "SQL operations on schema objects also require the USAGE privilege on the database and schema that contain the object.",
        "All COPY INTO <table> copy options are supported except for the following:",
        "FILES = ( 'file_name1' [ , 'file_name2', ... ] )",
        "ON_ERROR = ABORT_STATEMENT",
        "SIZE_LIMIT = num",
        "PURGE = TRUE | FALSE (i.e. automatic purging while loading)",
        "FORCE = TRUE | FALSE",
        "Note that you can manually remove files from an internal (i.e. Snowflake) stage (after they\u2019ve been loaded) using the\nREMOVE command.",
        "RETURN_FAILED_ONLY = TRUE | FALSE",
        "VALIDATION_MODE = RETURN_n_ROWS | RETURN_ERRORS | RETURN_ALL_ERRORS",
        "The PATTERN = 'regex_pattern' copy option filters the set of files to load using a regular expression. Pattern matching\nbehaves as follows depending on the AUTO_INGEST parameter value:",
        "AUTO_INGEST = TRUE: The regular expression filters the list of files in the stage and optional path (i.e. cloud storage location)\nin the COPY INTO <table> statement.",
        ":AUTO_INGEST = FALSE: The regular expression filters the list of files submitted in calls to the Snowpipe REST API\ninsertFiles endpoint.",
        "Note that Snowpipe trims any path segments in the stage definition from the storage location and applies the regular expression to any\nremaining path segments and filenames. To view the stage definition, execute the DESCRIBE STAGE command for the\nstage. The URL property consists of the bucket or container name and zero or more path segments. For example, if the FROM location in\na COPY INTO <table> statement is @s/path1/path2/ and the URL value for stage @s is s3://mybucket/path1/, then Snowpipe\ntrims /path1/ from the storage location in the FROM clause and applies the regular expression to path2/ plus the filenames in\nthe path.",
        "Important",
        "Snowflake recommends that you enable cloud event filtering for Snowpipe to reduce costs, event noise, and latency. Only use\nthe PATTERN option when your cloud provider\u2019s event filtering feature is not sufficient. For more information about configuring\nevent filtering for each cloud provider, see the following pages:",
        "Amazon S3: Configuring event notifications using object key name filtering",
        "Microsoft Azure Event Grid: Understand event filtering for Event Grid subscriptions",
        "Google Cloud Pub/Sub: Filtering messages",
        "Using a query as the source for the COPY statement for column reordering, column omission, and casts (i.e. transforming data during\na load) is supported. For usage examples, see Transforming data during a load. Note that only simple SELECT statements are\nsupported. Filtering using a WHERE clause is not supported.",
        "Pipe definitions are not dynamic (i.e. a pipe is not automatically updated if the underlying stage or table changes, such as renaming\nor dropping the stage/table). Instead, you must create a new pipe and submit this pipe name in future Snowpipe REST API calls.",
        "Regarding metadata:",
        "Attention",
        "Customers should ensure that no personal data (other than for a User object), sensitive data, export-controlled data, or other regulated data is entered as metadata when using the Snowflake service. For more information, see Metadata fields in Snowflake.",
        "CREATE OR REPLACE <object> statements are atomic. That is, when an object is replaced, the old object is deleted and the new object is created in a single transaction.",
        "Important",
        "If you recreate a pipe (using the CREATE OR REPLACE PIPE syntax), see Recreating pipes for related\nconsiderations and best practices.",
        "Create a pipe in the current schema that loads all the data from files staged in the mystage stage into mytable:",
        "Same as the previous example, but with a data transformation. Only load data from the 4th and 5th columns in the staged files, in\nreverse order:",
        "Create a pipe that loads all the data into columns in the target table that match corresponding columns represented in the data. Column names are case-insensitive.",
        "In addition, load metadata from the METADATA$START_SCAN_TIME and METADATA$FILENAME metadata columns to the columns named c1 and c2.",
        "Create a pipe in the current schema for automatic loading of data using event notifications received from a messaging service:",
        "Amazon S3",
        "Google Cloud Storage",
        "Microsoft Azure",
        "Was this page helpful?",
        "On this page"
    ]
}