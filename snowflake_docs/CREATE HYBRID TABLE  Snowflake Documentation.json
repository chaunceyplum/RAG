{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-hybrid-table",
    "title": "CREATE HYBRID TABLE | Snowflake Documentation",
    "paragraphs": [
        "Creates a new hybrid table in the current/specified schema or replaces an existing table. A table can have multiple columns,\nwith each column definition consisting of a name, data type, and optionally whether the column:",
        "Requires a NOT NULL value.",
        "Has a default value or is an identity column.",
        "Has any inline constraints.",
        "Note",
        "When you create a hybrid table, you must define a primary key constraint on one or more columns.",
        "You can also use the following CREATE TABLE variants to create hybrid tables:",
        "CREATE HYBRID TABLE \u2026 AS SELECT (CTAS) (creates a populated table; also referred to as CTAS)",
        "CREATE HYBRID TABLE \u2026 LIKE (creates an empty copy of an existing hybrid table)",
        "For the full CREATE TABLE syntax used for standard Snowflake tables, see CREATE TABLE.",
        "CREATE INDEX DROP INDEX, SHOW INDEXES, ALTER TABLE , DROP TABLE , SHOW TABLES",
        "Where:",
        "For inline and out-of-line constraint details, see CREATE | ALTER TABLE \u2026 CONSTRAINT.",
        "Specifies the identifier (i.e. name) for the table; must be unique for the schema in which the table is created.",
        "In addition, the identifier must start with an alphabetic character and cannot contain spaces or special characters unless the\nentire identifier string is enclosed in double quotes (for example, \"My object\"). Identifiers enclosed in double quotes are also\ncase-sensitive.",
        "For more information, see Identifier requirements.",
        "Specifies the column identifier (i.e. name). All the requirements for table identifiers also apply to column identifiers.",
        "For more details, see Identifier requirements and Reserved & limited keywords.",
        "Note",
        "In addition to the standard reserved keywords, the following keywords cannot be used as column identifiers because they are reserved for ANSI-standard context functions:",
        "CURRENT_DATE",
        "CURRENT_ROLE",
        "CURRENT_TIME",
        "CURRENT_TIMESTAMP",
        "CURRENT_USER",
        "For the list of reserved keywords, see Reserved & limited keywords.",
        "Specifies the data type for the column.",
        "For details about the data types that can be specified for table columns, see SQL data types reference.",
        "Specifies the required primary key constraint for the table, either within a column definition (inline) or separately (out-of-line).\nSee also Constraints for hybrid tables.",
        "For complete syntax details, see CREATE | ALTER TABLE \u2026 CONSTRAINT. For general information about constraints, see\nConstraints.",
        "Specifies whether a default value is automatically inserted in the column if a value is not explicitly specified via an INSERT or\nCREATE HYBRID TABLE AS SELECT statement:",
        "Column default value is defined by the specified expression which can be any of the following:",
        "Constant value.",
        "Simple expression.",
        "Sequence reference (seq_name.NEXTVAL).",
        "A simple expression is an expression that returns a scalar value; however, the expression cannot contain\nreferences to:",
        "Subqueries.",
        "Aggregates.",
        "Window functions.",
        "External functions.",
        "When AUTOINCREMENT is used, the default value for the column starts with a specified number and each successive\nvalue is automatically generated. Values generated by an AUTOINCREMENT column are guaranteed to be unique. The\ndifference between any pair of the generated values is guaranteed to be a multiple of the increment amount.",
        "The optional ORDER and NOORDER parameters specify whether or not the generated values provide ordering\nguarantees as specified in Sequence Semantics. NOORDER is the default option for AUTOINCREMENT\ncolumns on hybrid tables. NOORDER typically provides significantly better performance for point writes.",
        "These parameters can only be used for columns with numeric data types (NUMBER, INT, FLOAT, etc.)",
        "AUTOINCREMENT and IDENTITY are synonymous. If either is specified for a column, Snowflake utilizes a\nsequence to generate the values for the column. For more information about sequences, see\nUsing Sequences.",
        "The default value for both start and step/increment is 1.",
        "Default: No value (the column has no default value)",
        "Note",
        "DEFAULT and AUTOINCREMENT are mutually exclusive; only one can be specified for a column.",
        "For performance-sensitive workloads, NOORDER is the recommended option for AUTOINCREMENT columns.",
        "Defines an inline or out-of-line constraint for the specified column(s) in the table. Unique and foreign key constraints\nare optional for hybrid table columns. See also Constraints for hybrid tables.",
        "For complete syntax details, see CREATE | ALTER TABLE \u2026 CONSTRAINT. For general information about constraints, see\nConstraints.",
        "Specifies a secondary index on one or more columns in the table. (When you define constraints on hybrid table columns,\nindexes are automatically created on those columns.)",
        "Indexes cannot be defined on semi-structured columns (VARIANT, OBJECT, ARRAY)\nbecause of space constraints associated with the underlying storage engines for the key of each record.",
        "Indexes cannot be defined on geospatial columns (GEOGRAPHY, GEOMETRY) or\nvector data types (VECTOR).",
        "Indexes can be defined when the table is created, or with the CREATE INDEX command. For more information about creating indexes for\nhybrid tables, see CREATE INDEX.",
        "Specifies one or more included columns for a secondary index. Using included columns with a secondary index is\nparticularly useful when queries frequently contain a set of columns in the projection list but not in\nthe list of predicates. See Create a secondary index with an INCLUDE column.",
        "INCLUDE columns cannot be semi-structured columns (VARIANT, OBJECT, ARRAY) or geospatial columns (GEOGRAPHY, GEOMETRY).",
        "INCLUDE columns can be specified only when a table is created with a secondary index.",
        "Specifies a comment at the column, constraint, or table level. For details, see Comments on constraints.",
        "Default: No value",
        "To recreate or replace a hybrid table, call the GET_DDL function to see the definition of the\nhybrid table before running a CREATE OR REPLACE HYBRID TABLE command.",
        "You cannot create hybrid tables that are temporary or transient. In turn, you cannot\ncreate hybrid tables within transient schemas or databases.",
        "A schema cannot contain tables and/or views with the same name. When creating a table:",
        "If a view with the same name already exists in the schema, an error is returned and the table is not created.",
        "If a table with the same name already exists in the schema, an error is returned and the table is not created, unless the\noptional OR REPLACE keyword is included in the command.",
        "Important",
        "Using OR REPLACE is the equivalent of using DROP TABLE on the existing table and then\ncreating a new table with the same name.",
        "Note that the drop and create actions occur in a single atomic operation. This means that any queries concurrent with the\nCREATE OR REPLACE TABLE operation use either the old or new table version.",
        "Recreating or swapping a table drops its change data.",
        "Similar to reserved keywords, ANSI-reserved function names\n(CURRENT_DATE, CURRENT_TIMESTAMP, etc.) cannot be used as\ncolumn names.",
        "Regarding metadata:",
        "Attention",
        "Customers should ensure that no personal data (other than for a User object), sensitive data, export-controlled data, or other regulated data is entered as metadata when using the Snowflake service. For more information, see Metadata fields in Snowflake.",
        "A hybrid table must be created with a primary key constraint.",
        "Multi-column (or composite) primary keys are supported. To define a multi-column primary key, use the\nsyntax shown in the following example, where the constraint is defined \u201cout of line\u201d and refers to\nmultiple columns that were previously defined for the table:",
        "Primary key, unique, and foreign key constraints are enforced on hybrid tables. For information about limitations on\nthese constraints, see Unsupported features and limitations for hybrid tables.",
        "Primary key, unique, and foreign key constraints all build their own underlying indexes. These indexes result in additional data being\nstored. Secondary (or covering) indexes can also be defined explicitly when the table is created, using the outoflineIndex syntax.",
        "Creates a new hybrid table that contains the results of a query:",
        "Note",
        "When using CTAS to create a hybrid table, define the table schema explicitly, including column definitions, the primary key,\nindexes, and other constraints. Do not rely on inferring the schema from a SELECT statement.",
        "The number of column names specified must match the number of SELECT list items in the query.",
        "To create the table with rows in a specific order, use an ORDER BY clause at the end of the query.",
        "For information about loading hybrid tables, see Loading data.",
        "Creates a new hybrid table with the same column definitions as an existing hybrid table, but without copying data from the\nexisting table.",
        "Column names, types, defaults, and constraints are copied to the new table:",
        "Note",
        "CREATE HYBRID TABLE \u2026 LIKE only supports another hybrid table as the source table type.",
        "CREATE HYBRID TABLE \u2026 LIKE for a table with an auto-increment sequence accessed through a data share is\nnot supported.",
        "Create a hybrid table in the current database with customer_id as the primary key, a unique constraint on email,\nand a secondary index on full_name:",
        "Insert a row into this table:",
        "The primary key must be unique. For example, if you try to insert the same primary key from the previous example a second time,\nthe command fails with the following error:",
        "The email address must also follow the inline UNIQUE constraint. For example, if you attempt to insert two records with the\nsame email address, the statement fails with the following error:",
        "View table properties and metadata. Note the value of the is_hybrid column:",
        "View details for all hybrid tables:",
        "Display information about the columns in the table:",
        "Select data from the table:",
        "For example, create the employee table with a covering index:",
        "Insert the following rows:",
        "The following queries will use the covering index:",
        "Both queries benefit from the covering index by avoiding lookups to the base table.\nHowever, note that using included columns in indexes may cause an increase in storage\nconsumption because additional columns will be stored in the secondary index.",
        "Create a hybrid table that includes a comment within the column definition for the primary key.",
        "Note that if you put this comment in the CONSTRAINT clause, the comment will not be visible in the DESCRIBE TABLE output. You can query\nthe TABLE_CONSTRAINTS view to see complete information about constraints.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}