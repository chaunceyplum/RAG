{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-cli/command-reference/snowpark-commands/build",
    "title": "snow snowpark build | Snowflake Documentation",
    "paragraphs": [
        "Feature \u2014 Generally Available",
        "Not available in government regions.",
        "Builds artifacts required for the Snowpark project. The artifacts can be used by deploy command. For each directory in artifacts a .zip file is created. All non-anaconda dependencies are packaged in dependencies.zip file.",
        "None",
        "Does not lookup packages on Snowflake Anaconda channel. Default: False.",
        "Allows shared (.so) libraries, when using packages installed through PIP. Default: False.",
        "Base URL of the Python Package Index to use for package lookup. This should point to  a repository compliant with PEP 503 (the simple repository API) or a local directory laid out in the same format.",
        "Skip comparing versions of dependencies between requirements and Anaconda. Default: False.",
        "Path where Snowflake project resides. Defaults to current working directory.",
        "String in format of key=value. Overrides variables from env section used for templates. Default: [].",
        "Name of the connection, as defined in your config.toml file. Default: default.",
        "Host address for the connection. Overrides the value specified for the connection.",
        "Port for the connection. Overrides the value specified for the connection.",
        "Name assigned to your Snowflake account. Overrides the value specified for the connection.",
        "Username to connect to Snowflake. Overrides the value specified for the connection.",
        "Snowflake password. Overrides the value specified for the connection.",
        "Snowflake authenticator. Overrides the value specified for the connection.",
        "Snowflake private key file path. Overrides the value specified for the connection.",
        "Path to file with an OAuth token that should be used when connecting to Snowflake.",
        "Database to use. Overrides the value specified for the connection.",
        "Database schema to use. Overrides the value specified for the connection.",
        "Role to use. Overrides the value specified for the connection.",
        "Warehouse to use. Overrides the value specified for the connection.",
        "Uses connection defined with command line parameters, instead of one defined in config. Default: False.",
        "Token to use for multi-factor authentication (MFA).",
        "Run Python connector diagnostic test. Default: False.",
        "Diagnostic report path. Default: <temporary_directory>.",
        "Diagnostic report path to optional allowlist.",
        "Specifies the output format. Default: TABLE.",
        "Displays log entries for log levels info and higher. Default: False.",
        "Displays log entries for log levels debug and higher; debug logs contain additional information. Default: False.",
        "Turns off intermediate output to console. Default: False.",
        "Displays the help text for this command.",
        "The app.zip contains everything needed to run the functions and procedures in the project, apart from packages available through Snowflake Anaconda channel, which you can call directly from Snowflake.-",
        "The command parses requirements.txt for packages available on Conda channel. This process creates the requirements.snowflake.txt file that contains project dependencies available on the Conda channel, which is later used by the snow snowpark deploy command.",
        "By default, the command looks for the snowflake.yml file in the current directory. Alternatively, you can specify a different path with the --project option.",
        "This command automatically downloads dependencies and adds them to a file called app.zip, together with project source code (specified by the src field in the snowflake.yml file.",
        "To use different Python Package Index than PyPi, specify one using the --index-url option.",
        "You can use --skip-version-check option to skip version requirements between project dependencies and the  Anaconda Channel.",
        "You can use the --ignore-anaconda option to include all the required dependencies in the app.zip file, even those available in Snowflake Anaconda channel. The dependencies aren\u2019t downloaded from Anaconda, but from PyPi.",
        "The --allow-shared-libraries option checks whether any of the packages downloaded from PyPi are using native dependencies, which can cause problems as Snowpark currently supports only native dependencies for packages taken from Conda channel",
        "Build a project located in the current directory:",
        "Build a project located in a different directory:",
        "Build a project in a directory with no snowflake.yml project definition:",
        "Build a project with native libraries:",
        "Build a project and include all dependencies:",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}