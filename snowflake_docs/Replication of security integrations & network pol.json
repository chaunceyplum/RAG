{
    "url": "https://docs.snowflake.com/en/user-guide/account-replication-security-integrations",
    "title": "Replication of security integrations & network policies across multiple accounts | Snowflake Documentation",
    "paragraphs": [
        "Business Critical Feature",
        "Account object replication and failover/failback require Business Critical Edition (or higher). To inquire about upgrading, please\ncontact Snowflake Support.",
        "This topic provides information on how to replicate security integrations, along with using failover/failback with\neach of these objects, and assumes familiarity with replication and failover/failback with other account-level objects\n(e.g. users, roles, warehouses).",
        "For details, see Introduction to replication and failover across multiple accounts.",
        "These objects and services are supported across regions and across\ncloud platforms.",
        "Snowflake supports replicating network policies and security integrations for federated SSO (i.e. SAML2), OAuth, and SCIM along with\nenabling failover/failback for each network policy and integration.",
        "The general approach to test replication and failover/failback with each network policy and security integration is as follows:",
        "Identify the source account and target account for replication, and identify the connection URL.",
        "Complete steps in the source account.",
        "Complete steps in the target account.",
        "Test failover/failback.",
        "Note that because network policies and security integrations have different use cases, the exact steps for the source account and target\naccount with respect to each object differ slightly.",
        "For details, see:",
        "Replicating SAML2 security integrations",
        "Replicating SCIM security integrations",
        "Replicating OAuth security integrations",
        "Replicating network policies",
        "Replicating integrations and objects for the Snowflake Connector for ServiceNow",
        "Replicating a SAML2 security integration links the source account and the target account to the identity provider by specifying the\nconnection URL in the SAML2 security integration definition.",
        "It is important to update the identity provider to specify the connection URL and that users exist in the source account. Without these\nupdates, user verification cannot occur, which will result in the inability of the user to access the target account.",
        "For SAML SSO to Snowflake, replicating a SAML2 security integration that specifies the connection URL is only supported on the current\nprimary connection and not supported on the secondary connection. Note that for failover, the result is promoting a secondary connection\nto serve as the primary connection. After failover, SAML SSO works on the new primary connection.",
        "If SAML SSO is needed for both primary and secondary connections, then create and manage SAML2 security integrations independently on\nboth Snowflake accounts.",
        "For this procedure, assume the following:",
        "Source account: https://example-northamericawest.snowflakecomputing.com/",
        "Target account: https://example-northamericaeast.snowflakecomputing.com/",
        "Connection URL: https://example-global.snowflakecomputing.com",
        "A secondary connection does not exist in the target account.",
        "This procedure is a representative example to do the following:",
        "Replicate a SAML2 security integration from the source account to the target account.",
        "Test failover.",
        "Promote the secondary connection in the source account to serve as the primary connection.",
        "Source account steps (includes IdP steps):",
        "If the source account is already configured for Database Failover/Failback and Client Redirect,\nskip to the next step.",
        "Otherwise, enable failover using an ALTER CONNECTION command:",
        "Using Okta as a representative example for the identity provider, create a\nSnowflake application in Okta that specifies the connection URL. Update\nthe Okta fields as follows:",
        "Label: Snowflake",
        "Subdomain: example-global",
        "Browser plugin auto-submit: Check the box to enable automatic login when a user lands on the login page.",
        "In the source account, update the SAML2 security integration to specify the connection URL for the saml2_snowflake_issuer_url\nand saml2_snowflake_acs_url security integration properties.",
        "In Okta, assign the Snowflake application to users. For details, see\nAssign an app integration to a user.",
        "Verify that SSO to the source account works for users that are specified in the Snowflake application in Okta and users in the source\naccount.",
        "Note that SSO should work for both IdP-initiated and Snowflake-initiated SSO flows. For details, see\nSupported SSO workflows.",
        "In the source account, if a failover group does not already exist, create a failover group to\ninclude security integrations. Note that this example is representative and includes other account objects that might or might not be\nnecessary to replicate.",
        "If a failover group already exists, alter the failover group to include integrations.",
        "Target Account Steps:",
        "Prior to replication, verify the number of users and security integrations that are present in the target\naccount by executing the SHOW USERS and SHOW INTEGRATIONS commands, respectively.",
        "Create a secondary connection. For details, see CREATE CONNECTION.",
        "Create a secondary failover group in the target account. For details, see CREATE FAILOVER GROUP.",
        "When creating a secondary failover group, an initial refresh is automatically executed.",
        "To manually refresh a secondary failover group in the target account, execute the following statement. For details, see\nALTER FAILOVER GROUP command.",
        "If the refresh operation was successful, the target account should include new users that were added to the source account and not\npreviously present in the target account. Similarly, the target account should include the SAML2 security integration that specifies\nthe connection URL.",
        "Verify the refresh operation was successful by executing the following commands:",
        "SHOW INTEGRATIONS (should include 1 new integration)",
        "SHOW USERS (should include the number of new users added)",
        "DESCRIBE INTEGRATION (for the integration myidp)",
        "Promote the secondary connection in the target account to serve as the primary connection. After executing the following command, users\ncan use SAML SSO to authenticate to the new target account.",
        "Replicating a SCIM security integration allows the target account to incorporate SCIM updates that are made to the source account\n(e.g. adding new users, adding new roles) after refreshing the target account.",
        "After replicating the SCIM security integration, both Snowflake accounts have the ability to receive SCIM updates from the identity\nprovider. However, Snowflake allows specifying only one account as the primary (i.e. source) account and it is the primary account that\nreceives SCIM updates from the identity provider.",
        "You can optionally designate a different account as the primary account to receive SCIM updates after replicating the SCIM integration.\nNote that the target account can receive SCIM updates from the source account only after refreshing the target account.",
        "For this procedure, assume the following:",
        "Source account: https://example-northamericawest.snowflakecomputing.com/",
        "Target account: https://example-northamericaeast.snowflakecomputing.com/",
        "Connection URL: https://example-global.snowflakecomputing.com",
        "A secondary connection exists in the target account (i.e. only refresh operations are needed).",
        "This procedure is a representative example to do the following:",
        "Replicate a SCIM security integration from the source account to the target account.",
        "Add a new user in Okta, push the new user to the source account, and replicate the new user to the target account.",
        "Refresh the failover group.",
        "Promote the secondary connection in the target account to serve as the primary connection.",
        "Source account steps:",
        "Execute SHOW CONNECTIONS to verify that the connection in the source account is the primary connection. If it\nis not the primary connection, use the ALTER CONNECTION command to promote the connection in the source\naccount to serve as the primary connection.",
        "If an Okta SCIM security integration is already configured in the source account, skip to the next step.",
        "Otherwise, configure an Okta SCIM security integration in the source account.",
        "Be sure to update the Okta SCIM application for Snowflake. For details, see Okta configuration.",
        "In Okta, create a new user in the Okta application for Snowflake.",
        "Verify the user is pushed to Snowflake by executing a SHOW USERS command in Snowflake.",
        "If the failover group already specifies security integrations, skip to the next step. This would be true if you have already\nconfigured the failover group for the purposes of\nSAML SSO in the target account (in this topic).",
        "Otherwise, modify the existing failover group using an ALTER FAILOVER GROUP command to specify security integrations.",
        "At this point, you can optionally refresh the secondary failover group as shown in the\ntarget account steps for SCIM to ensure the new user in the source account is in the target\naccount.",
        "Choosing to refresh the secondary failover group now allows for an easy check to make sure that the change to the source account, adding\na new user in this sequence, is visible in the target account.",
        "However, if you need or prefer to do additional work in the identity provider, such as modifying other users or updating role\nassignments, you can continue doing that work now and then refresh the secondary failover group in one operation later.",
        "Target account steps:",
        "Prior to replication, verify the number of users and security integrations that are present in the target\naccount by executing the SHOW USERS and SHOW INTEGRATIONS commands, respectively.",
        "Refresh the secondary failover group to update the target account to include the new user\n(and any other changes that were made in Okta and the source account).",
        "Verify that the new user is added to the target account by executing a SHOW USERS command.",
        "Optionally, promote the secondary failover group and the secondary connection in the target account to primary. This will promote the\ntarget account to serve as the new source account.",
        "Failover group:",
        "Connection:",
        "Replicating OAuth security integrations includes both Snowflake OAuth security integrations and External OAuth security integrations.",
        "Note the following:",
        "After replication and configuring failover/failback, a user connecting to either the source account or target account via an OAuth client\ndoes not need to re-authenticate to the target account.",
        "After replication and configuring failover/failback, a user connecting to either the source account or target account via an OAuth client\nmight need to re-authenticate to the target account.",
        "Re-authentication is likely to be necessary if the OAuth authorization server is not configured to issue a refresh token. Therefore,\nensure that the OAuth authorization server issues refresh tokens so that the OAuth client can connect to the source and target Snowflake\naccounts.",
        "For this procedure, assume the following:",
        "Source account: https://example-northamericawest.snowflakecomputing.com/",
        "Target account: https://example-northamericaeast.snowflakecomputing.com/",
        "Connection URL: https://example-global.snowflakecomputing.com",
        "A secondary connection exists in the target account (i.e. only refresh operations are needed).",
        "The Snowflake OAuth or External OAuth security integrations already exist in the source account.",
        "This procedure is a representative example to do the following:",
        "Replicate an OAuth security integration.",
        "Refresh the failover group.",
        "Promote the secondary connection in the target account to serve as the primary connection.",
        "Source account steps:",
        "If the failover group already specifies security integrations, skip to the next step. This would be true if you have already\nconfigured the failover group for the purposes of\nSAML SSO in the target account (in this topic) or\nSCIM (also in this topic).",
        "Otherwise, modify the existing failover group using an ALTER FAILOVER GROUP command to specify security integrations.",
        "Target account steps:",
        "Refresh the secondary failover group to update the target account to include the OAuth security integration objects.",
        "Verify connecting to each Snowflake account using the OAuth client of your choice.",
        "Optionally, promote the secondary failover group and the secondary connection in the target account to primary. This will promote the\ntarget account to serve as the new source account.",
        "Failover group:",
        "Connection:",
        "If you completed the previous step, reverify that you can connect to each Snowflake account using the OAuth client of your choice.",
        "Replicating a network policy from the source account to the target account allows administrators to restrict access to the target account\nbased on the network identifier of the origin of an incoming request.",
        "Replicating a network policy replicates the network policy object and any network policy references/assignments. For example, if a\nnetwork policy references a network rule in the source account, and both objects exist in the target account, then the network policy uses\nthe same network rule in the target account. Similarly, if a network policy is assigned to a user and the user exists in both the source and\ntarget accounts, replicating the network policy assigns the network policy to the user in the target account.",
        "Replicating network policy references and assignments assumes referenced objects and objects to which the network policy is assigned are\nalso replicated. If you do not replicate the supporting object types properly, Snowflake fails the refresh operation in the target account.",
        "If a referenced object or object to which the network policy is assigned does not already exist in the target account, include its object\ntype in the same replication or failover group as the network policy. The following examples demonstrate the required settings if the\nsupporting objects do not already exist in the target account.",
        "The replication or failover group must include network policies and databases. Network rules are schema-level objects\nand are replicated with the database in which they are contained. For example:",
        "The replication or failover group must include network policies and account parameters. If the network policy uses\nnetwork rules, you must also include databases. For example:",
        "The replication or failover group must include network policies and users. If the network policy uses network rules, you\nmust also include databases. For example:",
        "Network policy replication applies to network policies that are specified in Snowflake OAuth and SCIM\nsecurity integrations, provided that the replication or failover group includes\nintegrations, security integrations and network policies. If the network policy uses network rules, you must also\ninclude databases.",
        "For this example, assume the following:",
        "Source account: https://example-northamericawest.snowflakecomputing.com/",
        "Target account: https://example-northamericaeast.snowflakecomputing.com/",
        "Connection URL: https://example-global.snowflakecomputing.com",
        "A secondary connection exists in the target account (i.e. only refresh operations are needed).",
        "Network policies exist in the source account.",
        "The Snowflake OAuth and/or SCIM security integration already exists in the source account and the integration specifies a network policy.",
        "This procedural example does the following:",
        "Replicates network policies along with the network rules that is uses to restrict network traffic.",
        "Replicates a security integration to which the network policy is assigned.",
        "Refreshes the failover group.",
        "Verifies the network policy activation.",
        "Promotes the secondary connection in the source account to serve as the primary connection.",
        "Source account steps:",
        "Verify that network policies exist in the source Snowflake account by executing a SHOW NETWORK POLICIES\ncommand.",
        "Verify the Snowflake OAuth and/or SCIM security integrations include a network policy by executing a\nSHOW INTEGRATIONS command to identify the security integration and then execute a\nDESCRIBE INTEGRATION command on the Snowflake OAuth security integration.",
        "Update the failover group to include network policies and account parameters using an ALTER FAILOVER GROUP command.",
        "Target account steps:",
        "Refresh the secondary failover group to update the target account to include the network policy objects and the Snowflake OAuth\nsecurity integration that specifies the network policy.",
        "Verify the network policy object exists by executing a SHOW NETWORK POLICIES command, and verify the Snowflake OAuth security\nintegration specifies the replicated network policy by executing a DESCRIBE SECURITY INTEGRATION command on the security integration.",
        "Verify the network policy activation as shown in Identify an activated network policy.",
        "Verify connecting to each Snowflake account using the Snowflake OAuth client of your choice.",
        "Optionally promote the secondary failover group and the secondary connection in the target account to primary. This will promote the\ntarget account to serve as the new source account.",
        "Failover group:",
        "Connection:",
        "If you completed the previous step, reverify that you can connect to each Snowflake account using the Snowflake OAuth client of your\nchoice.",
        "The Snowflake Connector for ServiceNow allows Snowflake to ingest data from ServiceNow. The connector requires the following objects in\nyour Snowflake account:",
        "Secret.",
        "Security integration of type = api_authentication.",
        "API integration.",
        "Database to store the ingested data.",
        "Warehouse for the connector to use.",
        "Account roles to manage the access to these objects.",
        "You create these objects prior to installing the connector and you can replicate these objects to the target account. After replicating\nthese objects, you can install the connector in the target account. The connector must be installed in the target account because the\ninstallation depends on a share that Snowflake provides. You need to create a database from the share during the connector installation and\nyou cannot replicate a database that is created from a share.",
        "Depending on how you want to manage the replication of account objects, you can have one or more replication or failover groups. A single\nreplication group centralizes the replication management of the objects and avoids scenarios where some objects are replicated and other\nobjects are not replicated. Otherwise, you must coordinate the replication operation carefully to ensure that all objects are replicated to\nthe target account.",
        "For example, you can have a replication group for databases. This replication group (e.g. rg1) specifies the database that contains the\nsecret and the database to store the ServiceNow data. The other replication group (e.g. rg2) specifies the user, role, and integration\nobjects and the grants of these roles to users. In this scenario, if you replicate the integrations first and then decide to refresh the\ntarget account to include the secret database, users, and roles, the replication refresh operation is successful.",
        "However, if you replicate the users and roles and the database that contains the secret in a group before you replicate the integration,\nthen a placeholder secret is used until the security integration is replicated; the placeholder secret prevents a dangling reference. Once\nthe security integration is replicated, the placeholder secret is replaced with the real secret.",
        "This procedure is a representative example to do the following:",
        "Replicate the integrations and the databases containing the secret and ingested data.",
        "Refresh the failover group.",
        "Promote the secondary connection in the source account to serve as the primary connection.",
        "Install and use the connector after replication.",
        "For this procedure, assume the following:",
        "Source account: https://example-northamericawest.snowflakecomputing.com/",
        "Target account: https://example-northamericaeast.snowflakecomputing.com/",
        "Connection URL: https://example-global.snowflakecomputing.com",
        "A secondary connection exists in the target account (i.e. only refresh operations are needed).",
        "Other security integrations for authentication and network policies to restrict access are already replicated.",
        "Source account steps:",
        "Verify that the objects for the connector exist in the source Snowflake account by executing SHOW commands on each of these object types.",
        "Note that secretsdb is the name of the database that contains the secret and destdb is the name of the database that contains\nthe ingested data from ServiceNow.",
        "Update the failover group to include API integrations and the databases containing the secret and ingested data using an ALTER FAILOVER\nGROUP command.",
        "Target account steps:",
        "Refresh the secondary failover group to replicate the integrations and databases to the target account.",
        "Verify the replicated objects exist using the following SHOW commands.",
        "Verify connecting to each Snowflake account using the method of your choice (e.g. browser, SnowSQL).",
        "Optionally promote the secondary failover group and the secondary connection in the target account to primary. This will promote the\ntarget account to serve as the new source account.",
        "Failover group:",
        "Connection:",
        "If you completed the previous step, reverify that you can connect to each Snowflake account.",
        "At this point, the target account contains the replicated objects and users can login. However, there are additional steps in the target\naccount to use the connector.",
        "Update the remote service associated with the API integration in the cloud platform that hosts your Snowflake account.",
        "For details, refer to Updating the remote service for API integrations.",
        "Install the connector manually or with Snowsight. For details, refer to:",
        "Install the connector manually",
        "Install the connector with Snowsight",
        "Access the ServiceNow Data in Snowflake.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}