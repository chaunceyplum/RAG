{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-function-spcs",
    "title": "CREATE FUNCTION (Snowpark Container Services) | Snowflake Documentation",
    "paragraphs": [
        "Creates a service function.",
        "This command supports the following variants:",
        "CREATE OR ALTER FUNCTION (Snowpark Container Services): Creates a service function if it doesn\u2019t exist or alters an existing service function.",
        "Service functions,  CREATE EXTERNAL FUNCTION,\nDESC FUNCTION, DROP FUNCTION, ALTER FUNCTION,\nCREATE OR ALTER <object>",
        "Preview Feature \u2014 Open",
        "Available to all accounts.",
        "Creates a new service function if it doesn\u2019t already exist, or transforms an existing service function into the service function\ndefined in the statement. A CREATE OR ALTER FUNCTION (Snowpark Container Services) statement follows the syntax rules of a CREATE\nFUNCTION (Snowpark Container Services) statement and has the same limitations as an ALTER FUNCTION (Snowpark Container Services)\nstatement.",
        "Supported function alterations include changes to the following:",
        "CONTEXT_HEADERS",
        "ENDPOINT",
        "MAX_BATCH_ROWS",
        "SERVICE",
        "For more information, see CREATE OR ALTER FUNCTION (Snowpark Container Services) usage notes.",
        "Specifies the identifier (name) and any input arguments for the function.",
        "The identifier does not need to be unique for the schema in which the function is created because functions are\nidentified and resolved by the combination of the name and argument types.",
        "The identifier must start with an alphabetic character and cannot contain spaces or special characters unless the entire\nidentifier string is enclosed in double quotes (for example, \u201cMy object\u201d). Identifiers enclosed in double quotes are also\ncase-sensitive. See Identifier requirements.",
        "Specifies the arguments/inputs for the service function. These should correspond to the arguments that the\nservice expects.",
        "If there are no arguments, then include the parentheses without any argument name(s) and data type(s).",
        "Specifies the data type of the result returned by the function.",
        "Specifies the name of the Snowpark Container Services service.",
        "Specifies the name of the endpoint as defined in the service specification.",
        "Specifies the HTTP path to the service code that is executed when the function is called.",
        "Specifies whether the function can return NULL values or must return only NON-NULL values. The default is NULL (that is, the function can\nreturn NULL).",
        "Specifies the behavior of the function when called with null inputs. In contrast to system-defined functions, which always return null when any\ninput is null, functions can handle null inputs, returning non-null values even when an input is null:",
        "CALLED ON NULL INPUT will always call the function with null inputs. It\u2019s up to the function to handle such values appropriately.",
        "RETURNS NULL ON NULL INPUT (or its synonym STRICT) will not call the function if any input is null. Instead, a null value\nwill always be returned for that row. Note that the function might still return null for non-null inputs.",
        "Default: CALLED ON NULL INPUT",
        "Specifies the behavior of the function when returning results:",
        "VOLATILE: function might return different values for different rows, even for the same input (for example, due to non-determinism and\nstatefulness).",
        "IMMUTABLE: function assumes that the function, when called with the same inputs, will always return the same result. This guarantee\nis not checked. Specifying IMMUTABLE for a function that returns different values for the same input will result in undefined\nbehavior.",
        "Default: VOLATILE",
        "Specifies the batch size when sending data to a service to increase concurrency",
        "Specifies a comment for the function, which is displayed in the DESCRIPTION column in the SHOW FUNCTIONS and SHOW USER FUNCTIONS\noutput.",
        "Default: user-defined function",
        "This binds Snowflake context function results to HTTP headers.\n(For more information about Snowflake context functions, see: Context functions.)",
        "Not all context functions are supported in context headers. The following are supported:",
        "CURRENT_ACCOUNT()",
        "CURRENT_CLIENT()",
        "CURRENT_DATABASE()",
        "CURRENT_DATE()",
        "CURRENT_IP_ADDRESS()",
        "CURRENT_REGION()",
        "CURRENT_ROLE()",
        "CURRENT_SCHEMA()",
        "CURRENT_SCHEMAS()",
        "CURRENT_SESSION()",
        "CURRENT_STATEMENT()",
        "CURRENT_TIME()",
        "CURRENT_TIMESTAMP()",
        "CURRENT_TRANSACTION()",
        "CURRENT_USER()",
        "CURRENT_VERSION()",
        "CURRENT_WAREHOUSE()",
        "LAST_QUERY_ID()",
        "LAST_TRANSACTION()",
        "LOCALTIME()",
        "LOCALTIMESTAMP()",
        "When function names are listed in the CONTEXT_HEADERS clause, the function names should not be quoted.",
        "Snowflake prepends sf-context to the header before it\u2019s written to the HTTP request.",
        "Example:",
        "In this example, Snowflake writes the header sf-context-current-timestamp into the HTTP request.",
        "Context functions can generate characters that are illegal in HTTP header values, including (but not limited to) the following:",
        "newline",
        "\u00c4",
        "\u00ce",
        "\u00df",
        "\u00eb",
        "\u00ac",
        "\u00b1",
        "\u00a9",
        "\u00ae",
        "Snowflake replaces each sequence of one or more illegal characters with one space character. (The replacement\nis per sequence, not per character.)",
        "For example, suppose that the context function CURRENT_STATEMENT() returns the following:",
        "The value sent in sf-context-current-statement is the following:",
        "To ensure that your service code can access the original result (with illegal characters) from the context function\neven if illegal characters have been replaced, Snowflake also sends a binary context header that contains the\ncontext function result encoded in base64.",
        "In the example above, the value sent in the base64-encoded header is the result of the following call:",
        "The remote service is responsible for decoding the base64 value if needed.",
        "Each such base64 header is named according to the following convention:",
        "In the example above, the name of the header would be the following:",
        "If no context headers are sent, then no base64 context headers are sent.",
        "If the rows sent to a service function are split across multiple batches, then all batches contain the same\ncontext headers and the same binary context headers.",
        "A role used to execute this SQL command must have the following\nprivileges at a minimum:",
        "Privilege",
        "Object",
        "Notes",
        "CREATE FUNCTION",
        "Schema",
        "USAGE",
        "Service Endpoint",
        "Usage on a service endpoint is granted to service roles defined in the service specification. You then grant the service role to the role creating the service function.",
        "The USAGE privilege on the parent database and schema are required to perform operations on any object in a schema.",
        "For instructions on creating a custom role with a specified set of privileges, see Creating custom roles.",
        "For general information about roles and privilege grants for performing SQL actions on\nsecurable objects, see Overview of Access Control.",
        "CREATE OR REPLACE <object> statements are atomic. That is, when an object is replaced, the old object is deleted and the new object is created in a single transaction.",
        "Regarding metadata:",
        "Attention",
        "Customers should ensure that no personal data (other than for a User object), sensitive data, export-controlled data, or other regulated data is entered as metadata when using the Snowflake service. For more information, see Metadata fields in Snowflake.",
        "Preview Feature \u2014 Open",
        "Available to all accounts.",
        "The following alterations are not supported:",
        "RETURNS",
        "Volatility (VOLATILE/IMMUTABLE)",
        "Null handling (CALLED ON NULL INPUT / RETURNS NULL ON NULL)",
        "In Tutorial-1, you create the following service function:",
        "This function connects with the specific ENDPOINT of the specified SERVICE. When you invoke this function, Snowflake sends a\nrequest to the /echo path inside the service container.",
        "Note the following:",
        "The my_echo_udf function takes a string as input and returns a string.",
        "The SERVICE property identifies the service (echo_service), and the ENDPOINT property identifies the user-friendly\nendpoint name (echoendpoint).",
        "The AS '/echo' specifies the path for the service. In echo_service.py (see service code), the @app.post decorator associates this\npath with the echo function.",
        "Alter a function my_echo_udf to set the maximum number of batch rows to 100, and add a context header and endpoint:",
        "Was this page helpful?",
        "On this page"
    ]
}