{
    "url": "https://docs.snowflake.com/en/developer-guide/stored-procedure/stored-procedures-creating-sql",
    "title": "Creating a stored procedure | Snowflake Documentation",
    "paragraphs": [
        "You create a stored procedure with a CREATE PROCEDURE command that specifies the procedure\u2019s properties, including the handler to use for\nits logic.",
        "This topic lists the steps to create a procedure. For examples, see the\nCREATE PROCEDURE reference.",
        "Note",
        "You can also create and call a procedure that isn\u2019t stored for later use. Many of the properties for that kind of procedure are the same\nas for a stored procedure. For more information, see CALL (with anonymous procedure).",
        "You create a stored procedure with the following steps:",
        "Write handler code that executes when the procedure is called.",
        "You can use one of the supported handler languages. For more information, see Supported languages.",
        "Choose whether you\u2019ll keep the handler code in-line with the CREATE PROCEDURE SQL statement or refer to it on a stage.",
        "Each has its advantages. For more information, see Keeping handler code in-line or on a stage.",
        "Execute a CREATE PROCEDURE statement in SQL, specifying properties of the procedure.",
        "Code in the following example creates a procedure called myProc with a in-line handler MyClass.myMethod. The\nhandler language is Java, which (like procedure handlers written in Scala and Python) requires a Session object from the Snowpark\nlibrary. Here, the PACKAGES clause refers to the Snowpark library included with Snowflake.",
        "The following describes some of the properties required or typically used when creating a procedure.",
        "Procedure name.",
        "The name does not need to match the name of the handler. The CREATE PROCEDURE statement associates the procedure name with the handler.",
        "For more about name constraints and conventions, see Naming and overloading procedures and UDFs.",
        "Procedure arguments, if any.",
        "See Defining arguments for UDFs and stored procedures.",
        "Return type with the RETURNS clause.",
        "For information about how Snowflake maps SQL data types to handler data types, see SQL-Java Data Type Mappings.",
        "Handler name with the HANDLER clause.",
        "When required, this is the name of the class or method containing code that executes when the procedure is called. You need specify a\nhandler name only for handlers written in Java, Python, and Scala. For JavaScript and Snowflake Scripting handlers, all code specified\nin-line will be executed as the handler.",
        "The following table describes the form of the HANDLER clause\u2019s value based on the handler language.",
        "Handler Language",
        "Value Form",
        "Java",
        "Class and method name.",
        "For example: MyClass.myMethod",
        "JavaScript",
        "None.",
        "Python",
        "Class and method name if a class is used; otherwise, function name.",
        "For example: module.my_function or my_function",
        "Scala",
        "Object and method name.",
        "For example: MyObject.myMethod",
        "Snowflake Scripting",
        "None.",
        "Dependencies required by the handler, if any, using the IMPORTS or PACKAGES clauses.",
        "For a handler written in Java, Python, or Scala, be sure to specify the Snowpark library, as described in the CREATE PROCEDURE\nreference.",
        "For more about making dependencies available to your handler, see Making dependencies available to your code.",
        "Handler language runtime with RUNTIME_VERSION clause.",
        "When the handler language is Java, Python, or Scala, use the RUNTIME_VERSION clause to specify which supported runtime version to use.\nOmitting the clause will prompt Snowflake to use the default, which may change in the future.",
        "The following sections contain examples that create stored procedures in different languages:",
        "For examples of Java stored procedures, see Writing stored procedures in Java.",
        "For examples of JavaScript stored procedures, see Writing stored procedures in JavaScript.",
        "For examples of Python stored procedures, see Writing stored procedures in Python.",
        "For examples of Scala stored procedures, see Writing stored procedures in Scala.",
        "For examples of Snowflake Scripting stored procedures, see Writing stored procedures in Snowflake Scripting.",
        "The following sections provide an example of an in-line handler and a staged handler.",
        "Code in the following example creates a procedure called my_proc with an in-line Python handler function run. Through\nthe PACKAGES clause, the code references the included Snowpark library for Python, whose Session is required when Python\nis the procedure handler language.",
        "Code in the following example creates a procedure called my_proc with an staged Java handler method MyClass.myMethod.\nThrough the PACKAGES clause, the code references the included Snowpark library for Java, whose Session is required when Java\nis the procedure handler language. With the IMPORTS clause, the code references the staged JAR file containing the handler code.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}