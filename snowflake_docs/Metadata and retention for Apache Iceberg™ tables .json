{
    "url": "https://docs.snowflake.com/en/user-guide/tables-iceberg-metadata",
    "title": "Metadata and retention for Apache Iceberg\u2122 tables | Snowflake Documentation",
    "paragraphs": [
        "Snowflake handles metadata for Apache Iceberg\u2122 tables according to the type of catalog you use (Snowflake or external).",
        "Note",
        "Specifying the default minimum number of snapshots with the history.expire.min-snapshots-to-keep\ntable property is not supported\nfor any type of Iceberg table.",
        "Snowflake manages the metadata life cycle for this table type,\nand deletes old metadata, manifest lists, and manifest files based on the retention period for the table data and snapshots.",
        "To set the retention period for table data and snapshots, set the DATA_RETENTION_TIME_IN_DAYS parameter\nat the account, database, schema, or table level.",
        "Snowflake generates metadata for version 2 of the Apache Iceberg specification\non a periodic basis, and writes the metadata to files on your external volume.\nEach new metadata file contains all DML or DDL changes since the last Snowflake-generated metadata file was created.",
        "You can also create metadata on demand by using the SYSTEM$GET_ICEBERG_TABLE_INFORMATION function.\nFor instructions, see Generate snapshots of DML changes.",
        "For information about locating metadata files, see Data and metadata directories.",
        "To access a full history of metadata generation attempts, view the query history for your account and filter the results. Search for the\nSYSTEM$GET_ICEBERG_TABLE_INFORMATION function name in the SQL text.",
        "Snowflake internally uses the same SYSTEM$GET_ICEBERG_TABLE_INFORMATION function to generate table metadata. Attempts made by Snowflake\nappear under the user called SYSTEM in the query history. The STATUS column in the query history\nindicates whether metadata was successfully generated.",
        "For viewing options, see Monitor query activity with Query History.",
        "Snowflake deletes Iceberg metadata from your external cloud storage when the following events occur:",
        "After you drop a table.",
        "When the Iceberg metadata refers to snapshots or table data that has expired.",
        "Deletion doesn\u2019t occur immediately after the data retention period expires.\nAs a result, metadata storage might incur costs with your cloud storage provider for longer than a table\u2019s lifetime.",
        "Warning",
        "Snowflake does not support Fail-safe for Snowflake-managed Iceberg tables,\nbecause the table data is in external cloud storage that you manage.\nTo protect Iceberg table data, you need to configure data protection and recovery with your cloud provider.",
        "When you drop a table, you can use the UNDROP ICEBERG TABLE command\nto restore it within the data retention period.",
        "When the retention period expires, Snowflake deletes table metadata and snapshots that it\nhas written from your external volume location. Deletion occurs asynchronously and can take a few\ndays to complete after the retention period has passed.",
        "Note",
        "For converted tables,\nSnowflake deletes only metadata that was generated after table conversion.",
        "Snowflake deletes Iceberg metadata files related to expired snapshots after the data retention period passes.\nDeletion usually occurs 7-14 days after a snapshot expires.",
        "Only previous table snapshots can expire. Snowflake never deletes metadata files that represent the latest (current) state of a table from\nyour external cloud storage.",
        "For tables that use an external catalog, Snowflake uses the value of the DATA_RETENTION_TIME_IN_DAYS\nparameter to set a retention period for Snowflake Time Travel and undropping the table. When the retention period expires,\nSnowflake does not delete the Iceberg metadata or snapshots from your external cloud storage.",
        "Snowflake sets DATA_RETENTION_TIME_IN_DAYS at the table level to the smaller of\nthe following values:",
        "The history.expire.max-snapshot-age-ms value in the current metadata file. Snowflake converts the value to days (rounding down).",
        "The following value, depending on your Snowflake account edition:",
        "Standard Edition: 1 day.",
        "Enterprise Edition or higher: 5 days.",
        "You can\u2019t manually change the value of DATA_RETENTION_TIME_IN_DAYS in Snowflake. To change the value, you must update\nhistory.expire.max-snapshot-age-ms in your metadata file and then refresh the table.",
        "You can use the following table functions to retrieve information about the files registered to an externally managed Iceberg table or\nthe most recent snapshot refresh history:",
        "ICEBERG_TABLE_FILES",
        "ICEBERG_TABLE_SNAPSHOT_REFRESH_HISTORY",
        "With Snowflake Time Travel,\nyou can use Snowflake to query historical data for a table.",
        "You can also use a third-party compute engine to perform time travel\nqueries on Snowflake-managed tables when you Sync a Snowflake-managed table with Snowflake Open Catalog or\nuse the Snowflake Catalog SDK.",
        "You can query any snapshots that were committed within the data retention period.\nTo specify the data retention period, set the DATA_RETENTION_TIME_IN_DAYS object parameter.",
        "When you delete table data or drop a table, Snowflake deletes objects after the table retention period expires.\nThis might incur costs with your cloud storage provider for longer than the table\u2019s lifetime.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}