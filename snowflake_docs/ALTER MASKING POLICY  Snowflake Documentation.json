{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-masking-policy",
    "title": "ALTER MASKING POLICY | Snowflake Documentation",
    "paragraphs": [
        "Enterprise Edition Feature",
        "This feature requires Enterprise Edition (or higher). To inquire about upgrading, please contact\nSnowflake Support.",
        "Replaces the existing masking policy rules with new rules or a new comment and allows the renaming of a masking policy.",
        "Any changes made to the policy rules go into effect when the next SQL query that uses the masking policy runs.",
        "Masking policy DDL",
        "Identifier for the masking policy; must be unique in the parent schema of the policy.",
        "The identifier value must start with an alphabetic character and cannot contain spaces or special characters unless the entire identifier\nstring is enclosed in double quotes (e.g. \"My object\"). Identifiers enclosed in double quotes are also case-sensitive.",
        "For more details, see Identifier requirements.",
        "Specifies the new identifier for the masking policy; must be unique for your schema. The new identifier cannot be used if the identifier\nis already in place for a different masking policy.",
        "For more details, see Identifier requirements.",
        "You can move the object to a different database and/or schema while optionally renaming the object. To do so, specify\na qualified new_name value that includes the new database and/or schema name in the form\ndb_name.schema_name.object_name or schema_name.object_name, respectively.",
        "Note",
        "The destination database and/or schema must already exist. In addition, an object with the same name cannot already\nexist in the new location; otherwise, the statement returns an error.",
        "Moving an object to a managed access schema is prohibited unless the object owner (that is, the role that has\nthe OWNERSHIP privilege on the object) also owns the target schema.",
        "Specifies one (or more) properties to set for the masking policy:",
        "SQL expression that transforms the data in the column designated by arg_name_mask.",
        "The expression can include Conditional expression functions to represent conditional logic, built-in functions, or UDFs to\ntransform the data.",
        "If a UDF or external function is used inside the masking policy body, the policy owner must have the USAGE privilege on the UDF or\nexternal function. Users querying a column that has a masking policy applied to it do not need to have USAGE on the UDF or external\nfunction.",
        "If a UDF or external function is used inside the conditional masking policy body, the policy owner must have the OWNERSHIP privilege on\nthe UDF or external function. Users querying a column that has a conditional masking policy applied to it do not need to have USAGE on\nthe UDF or external function.",
        "Specifies the tag name and the tag string value.",
        "The tag value is always a string, and the maximum number of characters for the tag value is 256.",
        "For information about specifying tags in a statement, see Tag quotas for objects and columns.",
        "Adds a comment or overwrites the existing comment for the masking policy.",
        "Default: No value",
        "Specifies one or more properties and/or parameters to unset for the masking policy, which resets them to the defaults:",
        "TAG tag_name [ , tag_name ... ]",
        "COMMENT",
        "When resetting a property/parameter, specify only the name; specifying a value for the property will return an error.",
        "A role used to execute this SQL command must have the following\nprivileges at a minimum:",
        "Privilege",
        "Object",
        "Notes",
        "OWNERSHIP",
        "Masking policy",
        "OWNERSHIP is a special privilege on an object that is automatically granted to the role that created the object, but can also be transferred using the GRANT OWNERSHIP command to a different role by the owning role (or any role with the MANAGE GRANTS privilege).",
        "The USAGE privilege on the parent database and schema are required to perform operations on any object in a schema.",
        "For instructions on creating a custom role with a specified set of privileges, see Creating custom roles.",
        "For general information about roles and privilege grants for performing SQL actions on\nsecurable objects, see Overview of Access Control.",
        "For additional details on masking policy DDL and privileges, see Managing Column-level Security.",
        "If you want to update an existing masking policy and need to see the current definition of the policy, call the\nGET_DDL function or run the DESCRIBE MASKING POLICY command.",
        "You cannot change the policy signature (i.e. argument name or input/output data type). If you need to change the signature, execute a\nDROP MASKING POLICY statement on the policy and create a new one.",
        "Before executing an ALTER statement, you can execute a DESCRIBE MASKING POLICY statement to determine the argument name to use for\nupdating the policy.",
        "For masking policies that include a subquery in the masking policy body, use EXISTS in the\nWHEN clause. For a representative example, see the custom entitlement table example in the Examples section in\nCREATE MASKING POLICY.",
        "If the policy body contains a mapping table lookup, create a centralized mapping table and store the mapping table\nin the same database as the protected table. This is particularly important if the body calls the\nIS_DATABASE_ROLE_IN_SESSION function. For details, see the function usage notes.",
        "Adding a masking policy to a column fails if the column is referenced by a row access policy. For more information, see\nALTER ROW ACCESS POLICY.",
        "If using a UDF in a masking policy, ensure the data type of the column, UDF, and masking\npolicy match. For more information, see User-defined functions in a masking policy.",
        "Once you create a dynamic table, you can\u2019t make changes to the masking policy.",
        "Regarding metadata:",
        "Attention",
        "Customers should ensure that no personal data (other than for a User object), sensitive data, export-controlled data, or other regulated data is entered as metadata when using the Snowflake service. For more information, see Metadata fields in Snowflake.",
        "The following example updates the masking policy to use a SHA-512 hash. Users without the ANALYST role see the value as a SHA-512 hash,\nwhile users with the ANALYST role see the plain-text value.",
        "Was this page helpful?",
        "On this page"
    ]
}