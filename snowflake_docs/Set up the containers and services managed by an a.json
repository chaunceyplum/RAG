{
    "url": "https://docs.snowflake.com/en/developer-guide/native-apps/container-containers",
    "title": "Set up the containers and services managed by an app | Snowflake Documentation",
    "paragraphs": [
        "Feature \u2014 Generally Available",
        "The Snowflake Native App Framework is generally available on supported cloud platforms. For additional information, see\nSupport for private connectivity, VPS, and government regions.",
        "The topic describes how to set up the containers and services for a Snowflake Native App with Snowpark Container Services.",
        "To manage containers with a Snowflake Native App, providers must create an\nimage repository\nin the provider account to store the images required by the app.",
        "The image repository must exist within a database and schema. The following example shows how to\ncreate an image repository using the CREATE IMAGE REPOSITORY command.",
        "Note",
        "Snowflake recommends that providers create the image repository outside the application package.",
        "If the application package is attached to a listing and the listing is configured to use\nCross-Cloud Auto-Fulfillment\nan image repository within the application package would be replicated and additional costs incurred.",
        "The images uploaded to this repository are accessible to the application package when adding a version\ndefinition. The app has can only access the images in this repository that are specified in the manifest\nfile of the application package.",
        "The following consideration apply to image repositories in the context of an app with containers:",
        "External image repositories are not supported. Image repositories that are outside Snowflake cannot be\nreferenced by any services within the container. This is applicable to services that exist in or outside\nof the app.",
        "Providers cannot directly share an image repository with an app. For example, providers cannot use the\nGRANT TO SHARE IN APPLICATION PACKAGE command.",
        "Providers can store multiple container images in an image repository. However, container images that are not\nexplicitly listed in the manifest are not accessible by the app in the consumer\u2019s account.",
        "When a provider adds a version definition to an application package the container images included in that\nversion cannot be modified. The images for that version are immutable and persist\nthroughout the life cycle of the version. To alter the containers within an app, providers must use a new\nversion.",
        "After creating an image repository, providers use Docker commands to upload the container images required\nby the app to the image repository. The specific commands required depend on the provider\u2019s environment.\nHowever, the general workflow is:",
        "docker login",
        "docker build",
        "docker tag",
        "docker push",
        "The following shows a typical example of how to use these commands:",
        "The service specification is a YAML file that Snowpark Container Services uses to configure and\nrun a service. See Service specification reference for\ngeneral information on the syntax of this file. See Create a service from a specification file\nfor an example of creating a service in the setup script.",
        "The following example shows the fields in the service specification file that are required by\nan app with containers.",
        "Note",
        "The service specification file references container images using the original database, schema and\nimage repository names. During installation or upgrade, a service is created from the service\nspecification file..",
        "Explicit registry URLs, for example org-provider.registry.snowflakecomputing.com/db/schema/repo/img:123\nare not supported and result in an error. The location of the image must always a full-qualified\nname in the provider account.",
        "Providers can also use a specification template\nby adding a reference to a template in the service specification file:",
        "See Create a service with a specification template for an example of creating a service in an app using a\nspecification template.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}