{
    "url": "https://docs.snowflake.com/en/release-notes/2024/8_41",
    "title": "October 28-30, 2024 \u2014 8.41 Release Notes | Snowflake Documentation",
    "paragraphs": [
        "Attention",
        "The release has completed.",
        "For differences between the in-advance and final versions of these release notes, see Release notes change log.",
        "By default, Snowflake features that generate outbound network traffic from Snowflake to a cloud platform traverse the public Internet. With\nthis release, we are pleased to announce that you can create private endpoints in Snowflake to access the cloud platform using the platform\u2019s\nprivate connectivity solution rather than the Internet. This lets you access cloud platform services privately and securely from Snowflake.",
        "With this release, outbound private connectivity is now available for the following Snowflake features:",
        "You can configure external network access and create a private endpoint to use private connectivity to connect to an external network location\nfrom a UDF/UDTF or stored procedure within Snowpark. Snowflake accounts on AWS can use AWS PrivateLink to access the external network location\nand Snowflake accounts on Azure can use Azure Private Link.",
        "For more information, see:",
        "External network access and private connectivity on AWS",
        "External network access and private connectivity on Microsoft Azure",
        "You can configure external network access and create a private endpoint so outgoing network traffic from Snowpark Container Services uses AWS\nPrivateLink or Azure Private Link instead of the public Internet.",
        "For more information, see Network egress using private connectivity.",
        "You can configure an external function and create a private endpoint to use Azure Private Link when calling executable code that is developed,\nmaintained, stored, and executed in Azure. You can securely connect to the Azure resource via Azure API Management, using both the Azure\nPortal and the Azure ARM template.",
        "For more information, see:",
        "Private connectivity with external functions: Azure ARM template",
        "Private connectivity with external functions: Azure Portal",
        "For general information about using outbound private connectivity with these Snowflake features, see Private connectivity for outbound network traffic.",
        "With this release, we are pleased to announce support for previewing the SQL statements rendered by Jinja2 templates.",
        "If you are using the EXECUTE IMMEDIATE FROM command to render and execute SQL statements from a Jinja2 template, you can preview the rendered\nstatements without executing them by specifying DRY_RUN=TRUE. This parameter is useful for debugging templating code and for previewing\nSQL statements from staged files not intended for execution.",
        "For more information, see EXECUTE IMMEDIATE FROM.",
        "With this release, we are pleased to announce the preview of the GENERATE_SYNTHETIC_DATA system stored procedure. With the synthetic data\ngeneration feature, you can now programmatically create realistic datasets that closely mirror your original data. This allows you to\nrepresent sensitive, confidential, or restricted information across various workloads, such as testing and validation.",
        "For more information, see GENERATE_SYNTHETIC_DATA.",
        "With this release, we are pleased to announce the general availability of using network policies to restrict incoming network traffic to the\ninternal stages of AWS accounts.",
        "For Business Critical or higher customers, this release increases the limits on how many network identifiers can be included in a network\npolicy.",
        "For more information, see Protecting internal stages on AWS.",
        "You can use bind variables to replace literals in SQL statements, which allows applications to dynamically construct SQL statements based on\nuser input. Bind variables are commonly used with Snowflake drivers, Snowflake Scripting, and the SQL REST API.",
        "With this release, Snowflake extends support for bind variables so that you can use them for more use cases. The extended support includes\nthe use of bind variables for stage names and other parameters in COPY INTO <table> statements.",
        "For more information, see a Example that uses bind variables to set parameters in a command.",
        "With this release, we are pleased to announce the preview of Writing files from Snowpark Python UDFs and UDTFs. With this feature in Snowpark\nPython, you can now write files to stages using user-defined functions (UDFs), vectorized UDFs, user-defined table functions (UDTFs), and\nvectorized UDTFs.",
        "For more information, see Writing files from Snowpark Python UDFs and UDTFs.",
        "Announcement",
        "Update",
        "Date",
        "Release notes",
        "Initial publication (preview)",
        "25-Oct-24",
        "Was this page helpful?",
        "On this page"
    ]
}