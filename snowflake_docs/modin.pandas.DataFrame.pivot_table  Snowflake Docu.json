{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/reference/python/1.26.0/modin/pandas_api/modin.pandas.DataFrame.pivot_table",
    "title": "modin.pandas.DataFrame.pivot_table | Snowflake Documentation",
    "paragraphs": [
        "Create a spreadsheet-style pivot table as a DataFrame.",
        "The levels in the pivot table will be stored in MultiIndex objects\n(hierarchical indexes) on the index and columns of the result DataFrame.",
        "values (list-like or scalar, optional) \u2013 Column or columns to aggregate.",
        "index (column, Grouper, array, or list of the previous) \u2013 Keys to group by on the pivot table index. If a list is passed,\nit can contain any of the other types (except list). If an array is\npassed, it must be the same length as the data and will be used in\nthe same manner as column values.",
        "columns (column, Grouper, array, or list of the previous) \u2013 Keys to group by on the pivot table column. If a list is passed,\nit can contain any of the other types (except list). If an array is\npassed, it must be the same length as the data and will be used in\nthe same manner as column values.",
        "aggfunc (function, list of functions, dict in string, default \"mean\".) \u2013 If a list of functions is passed, the resulting pivot table will have\nhierarchical columns whose top level are the function names\n(inferred from the function objects themselves).\nIf a dict is passed, the key is column to aggregate and the value is\nfunction or list of functions. If margin=True, aggfunc will be\nused to calculate the partial aggregates.",
        "fill_value (scalar, default None) \u2013 Value to replace missing values with (in the resulting pivot table,\nafter aggregation).",
        "margins (bool, default False) \u2013 If margins=True, special All columns and rows\nwill be added with partial group aggregates across the categories\non the rows and columns.",
        "dropna (bool, default True) \u2013 Do not include columns whose entries are all NaN. If True,\nrows with a NaN value in any column will be omitted before\ncomputing margins.",
        "margins_name (str, default 'All') \u2013 Name of the row / column that will contain the totals\nwhen margins is True.",
        "observed (bool, default False) \u2013 This only applies if any of the groupers are Categoricals.\nIf True: only show observed values for categorical groupers.\nIf False: show all values for categorical groupers.",
        "sort (bool, default True) \u2013 Specifies if the result should be sorted.",
        "An Excel style pivot table.",
        "DataFrame",
        "Notes",
        "Raise NotImplementedError if",
        "observed or sort is given;",
        "or index, columns, or values is not str, a list of str, or None;",
        "or DataFrame contains MultiIndex;",
        "or any aggfunc is not \u201ccount\u201d, \u201cmean\u201d, \u201cmin\u201d, \u201cmax\u201d, or \u201csum\u201d",
        "index is None, and aggfunc is a dictionary containing lists.",
        "when aggfunc is \u201ccount\u201d or \u201cmean\u201d the result has discrepancies with pandas -\nSnowpark pandas computes the aggfunc over the data grouped by the first pivot\ncolumn, while pandas computes the aggfunc over the result of the aggfunc from\nthe initial pivot.",
        "aggfunc as a dictionary is not supported.",
        "See also",
        "Pivot without aggregation that can handle non-numeric data.",
        "Unpivot a DataFrame from wide to long format, optionally leaving identifiers set.",
        "Wide panel to long format. Less flexible but more user-friendly than melt.",
        "Examples",
        "This first example aggregates values by taking the sum.",
        "We can also fill missing values using the fill_value parameter.",
        "Was this page helpful?"
    ]
}