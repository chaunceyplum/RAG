{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/reference/python/1.26.0/snowpark/api/snowflake.snowpark.DataFrameWriter.save_as_table",
    "title": "snowflake.snowpark.DataFrameWriter.save_as_table | Snowflake Documentation",
    "paragraphs": [
        "Writes the data to the specified table in a Snowflake database.",
        "table_name \u2013 A string or list of strings representing table name.\nIf input is a string, it represents the table name; if input is of type iterable of strings,\nit represents the fully-qualified object identifier (database name, schema name, and table name).",
        "mode \u2013",
        "One of the following values. When it\u2019s None or not provided,\nthe save mode set by mode() is used.",
        "\u201dappend\u201d: Append data of this DataFrame to the existing table. Creates a table if it does not exist.",
        "\u201doverwrite\u201d: Overwrite the existing table by dropping old table.",
        "\u201dtruncate\u201d: Overwrite the existing table by truncating old table.",
        "\u201derrorifexists\u201d: Throw an exception if the table already exists.",
        "\u201dignore\u201d: Ignore this operation if the table already exists.",
        "",
        "column_order \u2013",
        "When mode is \u201cappend\u201d, data will be inserted into the target table by matching column sequence or column name. Default is \u201cindex\u201d. When mode is not \u201cappend\u201d, the column_order makes no difference.",
        "\u201dindex\u201d: Data will be inserted into the target table by column sequence.\n\u201cname\u201d: Data will be inserted into the target table by matching column names. If the target table has more columns than the source DataFrame, use this one.",
        "",
        "create_temp_table \u2013 (Deprecated) The to-be-created table will be temporary if this is set to True.",
        "table_type \u2013 The table type of table to be created. The supported values are: temp, temporary,\nand transient. An empty string means to create a permanent table. Not applicable\nfor iceberg tables. Learn more about table types\nhere.",
        "clustering_keys \u2013 Specifies one or more columns or column expressions in the table as the clustering key.\nSee Clustering Keys & Clustered Tables\nfor more details.",
        "comment \u2013 Adds a comment for the created table. See\nCOMMENT. This argument is ignored if a\ntable already exists and save mode is append or truncate.",
        "enable_schema_evolution \u2013 Enables or disables automatic changes to the table schema from data loaded into the table from source files. Setting\nto True enables automatic schema evolution and setting to False disables it. If not set, the default behavior is used.",
        "data_retention_time \u2013 Specifies the retention period for the table in days so that Time Travel actions (SELECT, CLONE, UNDROP) can be performed\non historical data in the table.",
        "max_data_extension_time \u2013 Specifies the maximum number of days for which Snowflake can extend the data retention period for the table to prevent\nstreams on the table from becoming stale.",
        "change_tracking \u2013 Specifies whether to enable change tracking for the table. If not set, the default behavior is used.",
        "copy_grants \u2013 When true, retain the access privileges from the original table when a new table is created with \u201coverwrite\u201d mode.",
        "statement_params \u2013 Dictionary of statement level parameters to be set while executing this action.",
        "block \u2013 A bool value indicating whether this function will wait until the result is available.\nWhen it is False, this function executes the underlying queries of the dataframe\nasynchronously and returns an AsyncJob.",
        "iceberg_config \u2013",
        "A dictionary that can contain the following iceberg configuration values:",
        "the Iceberg table stores its metadata files and data in Parquet format",
        "catalog: specifies either Snowflake or a catalog integration to use for this table",
        "base_location: the base directory that snowflake can write iceberg metadata and files to",
        "catalog_sync: optionally sets the catalog integration configured for Polaris Catalog",
        "storage_serialization_policy: specifies the storage serialization policy for the table",
        "",
        "Examples:",
        "Was this page helpful?"
    ]
}