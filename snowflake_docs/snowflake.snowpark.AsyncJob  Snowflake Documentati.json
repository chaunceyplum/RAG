{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/reference/python/1.26.0/snowpark/api/snowflake.snowpark.AsyncJob",
    "title": "snowflake.snowpark.AsyncJob | Snowflake Documentation",
    "paragraphs": [
        "Bases: object",
        "Provides a way to track an asynchronous query in Snowflake. A DataFrame object can be\nevaluated asynchronously and an AsyncJob object will be returned. With this instance,\nyou can:",
        "retrieve results;",
        "check the query status (still running or done);",
        "cancel the running query;",
        "retrieve the query ID and perform other operations on this query ID manually.",
        "AsyncJob can be created by Session.create_async_job() or action methods in\nDataFrame and other classes. All methods in DataFrame with a suffix of\n_nowait execute asynchronously and create an AsyncJob instance. They are also\nequivalent to corresponding functions in DataFrame and other classes that set\nblock=False. Therefore, to use it, you need to create a dataframe first. Here we demonstrate\nhow to do that:",
        "DataFrame.collect() can be performed asynchronously:",
        "You can also do:",
        "DataFrame.to_pandas() can be performed asynchronously:",
        "DataFrame.first() can be performed asynchronously:",
        "DataFrame.count() can be performed asynchronously:",
        "Save a dataframe to table or copy it into a stage file can also be performed asynchronously:",
        "Table.merge(), Table.update(), Table.delete() can also be performed asynchronously:",
        "Cancel the running query associated with the dataframe:",
        "Creating an AsyncJob from an existing query ID, retrieving results and converting it back to a DataFrame:",
        "Note",
        "If a dataframe is associated with multiple queries:",
        "if you use Session.create_dataframe() to create a dataframe from a large amount\nof local data and evaluate this dataframe asynchronously, data will still be loaded\ninto Snowflake synchronously, and only fetching data from Snowflake again will be\nperformed asynchronously.",
        "otherwise, multiple queries will be wrapped into a\nSnowflake Anonymous Block\nand executed asynchronously as one query.",
        "Temporary objects (e.g., tables) might be created when evaluating dataframes and they will\nbe dropped automatically after all queries finish when calling a synchronous API. When you\nevaluate dataframes asynchronously, temporary objects will only be dropped after calling\nresult().",
        "Methods",
        "cancel()",
        "Cancels the query associated with this instance.",
        "is_done()",
        "Checks the status of the query associated with this instance and returns a bool value indicating whether the query has finished.",
        "result([result_type])",
        "Blocks and waits until the query associated with this instance finishes, then returns query results.",
        "to_df()",
        "Returns a DataFrame built from the result of this asynchronous job.",
        "Attributes",
        "query",
        "The SQL text of of the executed query.",
        "query_id",
        "The query ID of the executed query",
        "Was this page helpful?"
    ]
}