{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-python-api/reference/latest/_autosummary/snowflake.core.alert.AlertCollection",
    "title": "snowflake.core.alert.AlertCollection | Snowflake Documentation",
    "paragraphs": [
        "Bases: SchemaObjectCollectionParent[AlertResource]",
        "Represents the collection operations on the Snowflake Alert resource.",
        "With this collection, you can create, update, iterate through, and fetch alerts that you have access to in the\ncurrent context.",
        "Attributes",
        "Methods",
        "Create an alert in Snowflake.",
        "There are two ways to create an alert: by cloning or by building from scratch.",
        "Cloning an existing alert",
        "alert (str) \u2013 The new alert\u2019s name",
        "clone_alert (str or Clone object) \u2013 The name of alert to be cloned, or a Clone object which would contain the name of the alert\nwith support to clone at a specific time.",
        "mode (CreateMode, optional) \u2013",
        "One of the following enum values:",
        "CreateMode.error_if_exists: Throw an snowflake.core.exceptions.ConflictError\nif the alert already exists in Snowflake.  Equivalent to SQL create alert <name> ....",
        "CreateMode.or_replace: Replace if the alert already exists in Snowflake. Equivalent to SQL\ncreate or replace alert <name> ....",
        "CreateMode.if_not_exists: Do nothing if the alert already exists in Snowflake.\nEquivalent to SQL create alert <name> if not exists...",
        "Default is CreateMode.error_if_exists.",
        "",
        "Examples",
        "Cloning an alert instance:",
        "Creating an alert from scratch",
        "alert (Alert) \u2013 The details of Alert object, together with Alert\u2019s properties:\nname, schedule, condition, action ;\ncomment, warehouse are optional.",
        "mode (CreateMode, optional) \u2013",
        "One of the following enum values:",
        "CreateMode.error_if_exists: Throw an snowflake.core.exceptions.ConflictError\nif the alert already exists in Snowflake.  Equivalent to SQL create alert <name> ....",
        "CreateMode.or_replace: Replace if the alert already exists in Snowflake. Equivalent to SQL\ncreate or replace alert <name> ....",
        "CreateMode.if_not_exists: Do nothing if the alert already exists in Snowflake.\nEquivalent to SQL create alert <name> if not exists...",
        "Default is CreateMode.error_if_exists.",
        "",
        "Examples",
        "Creating an alert instance:",
        "Iterate through Alert objects from Snowflake, filtering on any optional \u2018like\u2019 pattern.",
        "like (str, optional) \u2013 A case-insensitive string functioning as a filter, with support for SQL\nwildcard characters (% and _).",
        "starts_with (str, optional) \u2013 String used to filter the command output based on the string of characters that appear\nat the beginning of the object name. Uses case-sensitive pattern matching.",
        "show_limit (int, optional) \u2013 Limit of the maximum number of rows returned by iter(). The default is None, which behaves equivalently\nto show_limit=10000. This value must be between 1 and 10000.",
        "from_name (str, optional) \u2013 Fetch rows only following the first row whose object name matches\nthe specified string. This is case-sensitive and does not have to be the full name.",
        "Examples",
        "Showing all alerts that you have access to see:",
        "Showing information of the exact alert you want to see:",
        "Showing alerts starting with \u2018your-alert-name-\u2018:",
        "Using a for loop to retrieve information from iterator:",
        "Was this page helpful?"
    ]
}