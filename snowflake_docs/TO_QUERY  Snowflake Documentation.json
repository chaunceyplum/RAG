{
    "url": "https://docs.snowflake.com/en/sql-reference/functions/to_query",
    "title": "TO_QUERY | Snowflake Documentation",
    "paragraphs": [
        "Table functions",
        "Returns a result set based on SQL text and an optional set of arguments that are passed to the SQL text if\nit is parameterized. The function compiles the SQL text as the definition of a subquery in the FROM clause.\nWhen writing an application or a stored procedure, you can call this function to construct a SQL statement.",
        "Note",
        "This function can include user input in query statements, which has potential security risks, such as\nSQL injection. If inputs to the function come from external sources, make sure they are validated.\nFor more information, see SQL injection.",
        "Constructing SQL at runtime",
        "Required",
        "String representation of the subquery.",
        "Optional",
        "Bind variables passed to the SQL string.",
        "Returns the result set produced by the execution of the specified SQL text or NULL. If any argument is NULL,\nthe function returns NULL without reporting any error.",
        "All arguments must be one of the following:",
        "Constant strings.",
        "SQL variables or\nSnowflake Scripting variables that resolve to strings.",
        "If you need to convert a string passed in an argument to a different data type, you can use a\nconversion function in the SQL string to\nconvert the string to another data type.",
        "The set of columns defining the result set is derived from the SELECT list of the compiled SQL statement.",
        "The function is valid only in the FROM clause of a SQL statement.",
        "Create a table and insert data into it.",
        "The examples use the data in this table.",
        "First, set a session variable (SQL variable) for the table name:",
        "The examples use the session variable and IDENTIFIER() to\nidentify the table.",
        "Using IDENTIFIER() to identify database objects is a best practice because can it can make\ncode more reusable and help to prevent SQL injection risks.",
        "The following example uses the TO_QUERY function to return all of the data in the to_query_example table:",
        "The following example uses the TO_QUERY function to return all of the values in the deptno column of\nthe to_query_example table:",
        "The following example uses the TO_QUERY function to pass an argument to a SQL statement so that it returns the row\nwhere deptno equals 10 in the to_query_example table:",
        "The following example is the same as the previous example, but it uses a session variable to pass\nthe deptno value to the TO_QUERY function:",
        "The following example uses the TO_QUERY function to pass two arguments to a SQL statement so that it returns the rows\nwhere deptno equals 10 or dname equals SALES in the to_query_example table:",
        "The following example uses the TO_QUERY function in a stored procedure:",
        "Note: If you are using SnowSQL, the Classic Console, or the\nexecute_stream or execute_string method in Python Connector\ncode, use this example instead (see Using Snowflake Scripting in SnowSQL, the Classic Console, and Python Connector):",
        "Call the stored procedure:",
        "The following example uses the TO_QUERY function in a stored procedure with a bind variable:",
        "Note: If you are using SnowSQL, the Classic Console, or the\nexecute_stream or execute_string method in Python Connector\ncode, use this example instead (see Using Snowflake Scripting in SnowSQL, the Classic Console, and Python Connector):",
        "Call the stored procedure:",
        "Call the stored procedure using a session variable:",
        "Was this page helpful?",
        "On this page"
    ]
}