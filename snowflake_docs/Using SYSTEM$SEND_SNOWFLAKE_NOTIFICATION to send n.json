{
    "url": "https://docs.snowflake.com/en/user-guide/notifications/snowflake-notifications",
    "title": "Using SYSTEM$SEND_SNOWFLAKE_NOTIFICATION to send notifications | Snowflake Documentation",
    "paragraphs": [
        "Note",
        "All Snowflake customers can send email messages using this feature. Email messages sent from the Notifications System Stored\nProcedure are processed through Snowflake\u2019s Amazon Web Services (AWS) deployments, using AWS Simple Email Service (SES). The\ncontent of an email message sent using AWS may be retained by Snowflake for up to thirty days to manage the delivery of the\nmessage. After this period, the message content is deleted.",
        "If you need to send notifications to an email address, webhook, or a queue provided by a cloud service (Amazon SNS, Google Cloud\nPubSub, or Azure Event Grid), use the SYSTEM$SEND_SNOWFLAKE_NOTIFICATION stored procedure.",
        "With a single call to this stored procedure, you can:",
        "Send a message to multiple types of destinations (email addresses, webhooks, and queues).",
        "Send a message to multiple email addresses, webhooks, and queues.",
        "Send a message in a specified format, according to the type of notification integration (plain text or HTML for email, JSON\nfor queues).",
        "For example, with a single call, you can send messages in plain text, HTML, and JSON formats to multiple email addresses and\nmultiple SNS, PubSub, and Event Grid topics.",
        "You can use multiple notification integrations to send the notification to different queues. You can also create multiple email\nnotification integrations that have different sets of email addresses and subject lines, making it easier to configure email\nmessages for different recipients.",
        "Before you send a notification, you must have a notification integration that you will use to send the notification. If you are\nsending an email notification, you must also validate the email addresses of the recipients. For details, see\nNotifications in Snowflake.",
        "To send a notification to email addresses or queues, call the\nSYSTEM$SEND_SNOWFLAKE_NOTIFICATION stored procedure, specifying the messages and the\nnotification integrations to use.",
        "The following is an example of a call to this stored procedure:",
        "As shown in the example above, you pass in JSON-formatted strings as arguments to specify the message to send and the\nnotification integration to use.",
        "For the syntax for these strings, see SYSTEM$SEND_SNOWFLAKE_NOTIFICATION.",
        "To construct these JSON-formatted strings, you can call helper functions like TEXT_HTML to specify\nthe message and EMAIL_INTEGRATION_CONFIG to specify the notification integration, subject line,\nand email addresses. For example:",
        "For the list of helper functions that you can use, see SYSTEM$SEND_SNOWFLAKE_NOTIFICATION.",
        "To use a different set of recipients or a different subject line from\nthe default specified in the email notification integration, set the\nfollowing properties of the integration configuration object that you pass to\nSYSTEM$SEND_SNOWFLAKE_NOTIFICATION:",
        "subject (this cannot exceed 256 characters in length)",
        "toAddress",
        "ccAddress",
        "bccAddress",
        "For example, to use the email notification integration my_email_int and override the subject line, \u201cTo:\u201d line,  \u201cCc:\u201d line,\nand \u201cBcc:\u201d line:",
        "To construct the JSON-formatted string for the integration configuration, you can call the\nEMAIL_INTEGRATION_CONFIG helper function.",
        "For example, to send the email message to oncall-a@snowflake.com and oncall-b@snowflake.com with the subject line \u201cService down\u201d, execute the following statement:",
        "To include the \u201cCc:\u201d and \u201cBcc:\u201d lines in the email message, pass in additional arguments with arrays of email addresses for those\nlines:",
        "If you only want to set the \u201cCc:\u201d or \u201cBcc:\u201d line (not both), pass in an empty array or NULL for the corresponding arguments.\nIf you are constructing the JSON object without using the helper function, omit the ccAddress or bccAddress\nproperty from the JSON object.",
        "To send a message in HTML, plain text, or JSON, pass in a JSON object that contains the message type as the name of the property\nand the message as the value of the property:",
        "\"message_type\" can be one of the following values:",
        "\"text/html\"",
        "\"text/plain\"",
        "\"application/json\"",
        "For example:",
        "To construct the JSON object for the message, you can use  the following helper functions:",
        "For an HTML message, call TEXT_HTML.",
        "For a plain text message, call TEXT_HTML.",
        "For a JSON message, call APPLICATION_JSON.",
        "The following example sends an HTML message, using the my_email_int email notification integration:",
        "The following example sends a plain text message, using the same integration:",
        "The following example sends a JSON message to the queue specified by the my_queue_int notification integration. For\ninstructions on creating a notification integration for a queue, see the following topics:",
        "Creating a notification integration to send notifications to an Amazon SNS topic",
        "Creating a notification integration to send notifications to a Microsoft Azure Event Grid topic",
        "Creating a notification integration to send notifications to a Google Cloud Pub/Sub topic",
        "You can use multiple integrations to send messages when:",
        "You want to send a message in email and to a topic in the same function call.",
        "You want to send a message to different email addresses specified by different email notification integrations.",
        "To use multiple integrations, call the ARRAY_CONSTRUCT function to construct an array of\nintegration configurations, and pass the array as the second argument of the\nSYSTEM$SEND_SNOWFLAKE_NOTIFICATION stored procedure.",
        "For example, to send a plain text message to a queue and email addresses configured in different notification integrations:",
        "Note",
        "The array cannot contain more than one object for the same notification integration.",
        "If you prefer to use the helper functions to construct the integration configurations, you can pass the values returned by the\nhelper functions to the ARRAY_CONSTRUCT function. For example:",
        "The following example sends messages in different formats to a queue and email addresses:",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}