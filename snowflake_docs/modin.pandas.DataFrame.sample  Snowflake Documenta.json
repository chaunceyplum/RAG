{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/reference/python/1.26.0/modin/pandas_api/modin.pandas.DataFrame.sample",
    "title": "modin.pandas.DataFrame.sample | Snowflake Documentation",
    "paragraphs": [
        "Return a random sample of items from an axis of object.",
        "You can use random_state for reproducibility.",
        "n (int, optional) \u2013 Number of items from axis to return. Cannot be used with frac.\nDefault = 1 if frac = None.",
        "frac (float, optional) \u2013 Fraction of axis items to return. Cannot be used with n.",
        "replace (bool, default False) \u2013 Allow or disallow sampling of the same row more than once.",
        "weights (str or ndarray-like, optional) \u2013 Default \u2018None\u2019 results in equal probability weighting.\nIf passed a Series, will align with target object on index. Index\nvalues in weights not found in sampled object will be ignored and\nindex values in sampled object not in weights will be assigned\nweights of zero.\nIf called on a DataFrame, will accept the name of a column\nwhen axis = 0.\nUnless weights are a Series, weights must be same length as axis\nbeing sampled.\nIf weights do not sum to 1, they will be normalized to sum to 1.\nMissing values in the weights column will be treated as zero.\nInfinite values not allowed.",
        "random_state (int, array-like, BitGenerator, np.random.RandomState, np.random.Generator, optional) \u2013",
        "If int, array-like, or BitGenerator, seed for random number generator.\nIf np.random.RandomState or np.random.Generator, use as given.",
        "Changed in version 1.1.0: array-like and BitGenerator object now passed to np.random.RandomState()\nas seed",
        "Changed in version 1.4.0: np.random.Generator objects now accepted",
        "",
        "axis ({0 or \u2018index\u2019, 1 or \u2018columns\u2019, None}, default None) \u2013 Axis to sample. Accepts axis number or name. Default is stat axis\nfor given data type. For Series this parameter is unused and defaults to None.",
        "ignore_index (bool, default False) \u2013",
        "If True, the resulting index will be labeled 0, 1, \u2026, n - 1.",
        "New in version 1.3.0.",
        "",
        "A new object of same type as caller containing n items randomly\nsampled from the caller object.",
        "Series or DataFrame",
        "See also",
        "Generates random samples from each group of a DataFrame object.",
        "Generates random samples from each group of a Series object.",
        "Generates a random sample from a given 1-D numpy array.",
        "Notes",
        "If frac > 1, replacement should be set to True.",
        "Snowpark pandas sample does not support the following cases: weights or random_state\nwhen axis = 0. Also, when replace = False, native pandas will raise error if n is larger\nthan the length of the DataFrame while Snowpark pandas will return all rows from the DataFrame.",
        "Examples",
        "Extract 3 random elements from the Series df['num_legs']:",
        "A random 50% sample of the DataFrame:",
        "An upsample sample of the DataFrame with replacement: Note that replace parameter has to be True for frac parameter > 1.",
        "The exact number of specified rows is returned unless the DataFrame contains fewer rows:",
        "Was this page helpful?"
    ]
}