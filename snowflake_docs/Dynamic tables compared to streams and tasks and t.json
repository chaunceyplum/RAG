{
    "url": "https://docs.snowflake.com/en/user-guide/dynamic-tables-comparison",
    "title": "Dynamic tables compared to streams and tasks and to materialized views | Snowflake Documentation",
    "paragraphs": [
        "Like streams and tasks, dynamic tables provide a way to transform data in your pipeline.",
        "Although dynamic tables serve a similar purpose compared to streams and tasks, there are important differences.",
        "Streams can be created on dynamic tables, like streams on traditional tables, with the following limitations:",
        "Refresh mode: Streams can be created only on dynamic tables that refresh incrementally.\nFull refresh dynamic tables aren\u2019t supported because they completely rewrite the table on every refresh.",
        "Stream type: Dynamic tables support only standard (that is, delta) streams. For more information, see\nTypes of Streams.",
        "The following example shows how to create a stream on a dynamic table:",
        "Streams and Tasks",
        "Dynamic Tables",
        "Tasks use an imperative approach: You write procedural code to transform data from base tables.",
        "Dynamic tables use a declarative approach: You write a query that specifies the result you want, and data is\nretrieved and transformed from the base tables used in the query. Except for\nSupported non-deterministic functions in full refresh, the query can\u2019t contain non-deterministic functions.",
        "You define a schedule for executing the code that transforms the data.",
        "An automated refresh process determines the schedule for performing refreshes. The process schedules these refreshes\nto meet the specified target level of freshness (lag).",
        "The procedural code can contain calls to non-deterministic code, stored procedures, and other tasks. The procedural code\ncan contain calls to UDFs and external functions.",
        "Although the SELECT statement for a dynamic table can contain joins, aggregations, window functions, and other SQL\nfunctions and constructions, the statement cannot contain calls to stored procedures and tasks. Currently, the SELECT\nstatement also cannot contain calls to external functions.",
        "This limitation is due to the way in which dynamic tables are refreshed. To refresh the data, an automated process analyzes\nthe SELECT statement for the dynamic table in order to determine the best approach to refresh the data. The automated\nprocess cannot determine this for certain types of queries.",
        "For the complete list of restrictions on the SELECT statement, see Supported queries in incremental refresh and\nGeneral limitations.",
        "Tasks can use streams to refresh data in target tables incrementally. You can schedule these tasks to run on a regular\nbasis.",
        "An automated refresh process performs incremental refreshes of dynamic tables on a regular basis. The process determines\nthe schedule based on the target \u201cfreshness\u201d of the data that you specify.",
        "The example in Transforming Loaded JSON Data on a Schedule uses streams and tasks to transform and insert new data into a target\ntable (names) as the data is streamed into a landing table (raw).",
        "The following examples demonstrate how to perform the same transformation using dynamic tables. When creating a dynamic table,\nyou specify the query for the results that you want to see. For the incremental refresh of the data, you don\u2019t need to create a\nstream to track changes and write a task to examine those changes and apply the changes to the target table. The automated refresh\nprocess does this for you based on the query that you specify.",
        "SQL Statements for Streams and Tasks",
        "SQL Statements for Dynamic Tables",
        "Dynamic tables have some similarities to materialized views in that both materialize the results of a query.\nHowever, there are important differences:",
        "Materialized Views",
        "Dynamic Tables",
        "Materialized views are designed to improve query performance transparently.",
        "For example, if you query the base table, the query optimizer in Snowflake can rewrite the query automatically to\nquery the materialized view instead.",
        "Dynamic tables are designed to build multi-level data pipelines.",
        "Although dynamic tables can improve query performance, the query optimizer in Snowflake\ndoes not automatically rewrite queries to use dynamic tables. A dynamic table is used in a query only if you\nspecify the dynamic table in the query.",
        "A materialized view can only use a single base table. A materialized view cannot be based on a complex query (that is, a\nquery with joins or nested views).",
        "A dynamic table can be based on a complex query, including one with joins and unions.",
        "Data accessed through materialized views is always current. If a DML\noperation changes the data in the base table, Snowflake either updates the materialized view or uses the updated data\nfrom the base table.",
        "The data is current up to the target lag time for the dynamic table.",
        "Dynamic table maintenance and refresh is automatically managed by a separate compute service, including\nrefresh logic, along with the compute for any updates, typically at additional cost. For more information, see\nUnderstanding cost for dynamic tables.",
        "Was this page helpful?",
        "On this page"
    ]
}