{
    "url": "https://docs.snowflake.com/en/sql-reference/functions/result_scan",
    "title": "RESULT_SCAN | Snowflake Documentation",
    "paragraphs": [
        "Table functions",
        "Returns the result set of a previous command (within 24 hours of when you executed the query) as if the result was a table. This is particularly useful if you want to process the output from any\nof the following:",
        "SHOW or DESC[RIBE] command that you executed.",
        "Query you executed on metadata or account usage information, such as Snowflake Information Schema or Account Usage.",
        "The result of a stored procedure that you called.",
        "As an alternative to using RESULT_SCAN, you can call a stored procedure that returns tabular data in the\nFROM clause of a SELECT statement.",
        "The command/query can be from the current session or any of your other sessions, including past sessions, as long as the 24 hour period has not elapsed. This period is not adjustable. For more details,\nsee Using Persisted Query Results.",
        "DESCRIBE RESULT (Account & Session DDL)",
        "A specification of a query you executed within the last 24 hours in any session, an integer index of a query in the\ncurrent session, or the LAST_QUERY_ID function, which returns the ID of a query within your current session.",
        "Snowflake query IDs are unique strings that resemble 01b71944-0001-b181-0000-0129032279f6.",
        "Query indexes are relative to the first query in the current session (if positive) or to the most recent query (if\nnegative). For example, RESULT_SCAN(-1) is equivalent to RESULT_SCAN(LAST_QUERY_ID()).",
        "If the original query is executed manually, only the user who runs the original query can use the RESULT_SCAN function to process the output of the query. Even a user with the ACCOUNTADMIN privilege cannot access the results of another user\u2019s query by calling RESULT_SCAN.",
        "If the original query is executed via a task, the role that owns the task, instead of a specific user, triggers and runs the query. If a user or a task is operating with the same role, they can use RESULT_SCAN to access the query results.",
        "Snowflake stores all query results for 24 hours. This function only returns results for queries executed within this time period.",
        "Result sets do not have any metadata associated with them, so processing large results might be slower than if you were querying an actual table.",
        "The query containing the RESULT_SCAN can include clauses, such as filters and ORDER BY clauses, that were not\nin the original query. This allows you to narrow down or modify the result set.",
        "A RESULT_SCAN is not guaranteed to return rows in the same order as the original query returned the rows. You can\ninclude an ORDER BY clause with the RESULT_SCAN query to specify a specific order.",
        "To retrieve the ID for a specific query, use any of the following methods:",
        "In either of the following locations, click the provided link to display/copy the ID:",
        "In Worksheets , after executing a query, the results includes a link for the ID.",
        "In History , each query includes the ID as a link.",
        "Execute either of the following functions:",
        "QUERY_HISTORY , QUERY_HISTORY_BY_* table function.",
        "LAST_QUERY_ID function (if the query was executed in the current session).",
        "For example:",
        "Note that this is equivalent to using LAST_QUERY_ID as the input for RESULT_SCAN.",
        "If RESULT_SCAN processes query output that contained duplicate column names (for example, a query that JOINed\ntwo tables that have overlapping column names), then RESULT_SCAN references the duplicate columns with modified\nnames, appending \u201c_1\u201d, \u201c_2\u201d, etc. to the original name. For an example, see the Examples section below.",
        "Timestamps in Parquet files queried using the vectorized scanner sometimes display the time in a different time zone. Use the\nCONVERT_TIMEZONE function to convert to a standard time zone for all timestamp data.",
        "When RESULT_SCAN returns the results of the previous statement, RESULT_SCAN preserves the\ncollation specification(s) of the values that it returns.",
        "Retrieve all values greater than 1 from the result of your most recent query in the current session:",
        "Retrieve all values from your second most recent query in the current session:",
        "Retrieve all values from your first query in the current session:",
        "Retrieve the values from the c2 column in the result of the specified query:",
        "Process the result of a DESCRIBE USER command to retrieve\nparticular fields of interest, for example the user\u2019s default role. Note that\nbecause the output column names from the DESC USER command were generated\nin lowercase, the commands use delimited identifier notation (double quotes) around\nthe column names in the query to ensure that the column names in the query\nmatch the column names in the output that was scanned.",
        "Process the result of a SHOW TABLES command to extract empty tables that are older than 21 days. The SHOW command generates lowercase column names, so the command quotes the names and use matching case:",
        "Process the result of a SHOW TABLES command to extract the tables in descending order of size.\nThis example also illustrates using a UDF to show table size in a slightly more human-readable format.",
        "Stored procedure calls return a value. However, this value cannot be processed directly because you cannot embed a\nstored procedure call in another statement. To work around this limitation, you can use RESULT_SCAN to process the\nvalue returned by a stored procedure. A simplified example is below:",
        "First, create a procedure that returns a \u201ccomplicated\u201d value (in this case, a string that contains\nJSON-compatible data) that can be processed after it has been returned from the CALL.",
        "Second, call the procedure:",
        "The next three steps extract the data from the result set.",
        "Get the first (and only) column:",
        "Convert the output from a VARCHAR to a VARIANT:",
        "Extract the value that corresponds to the key \u201ckeyB\u201d:",
        "Here is a more compact way to extract the same data that was extracted in the previous example. This example has\nfewer statements, but is harder to read:",
        "The output from the CALL uses the function name as the column name. For example:",
        "We can use that column name in the query. Here\u2019s one additional compact version, in which the column is referenceed by\nname rather than the column number:",
        "The following example shows that RESULT_SCAN effectively references alternate column names when there are duplicate\ncolumn names in the original query:",
        "Create two tables that have at least one column with the same name:",
        "Load data into the two tables:",
        "Now execute a query for which the output will contain two columns with the same name:",
        "Note that the output in Snowsight is different than the output shown above, since Snowsight handles\nduplicate column names automatically.",
        "Now call RESULT_SCAN to process the results of that query. Note that if different columns that have the same name in the\nresults, RESULT_SCAN uses the original name for the first column and assigns the second column a modified name that is unique.\nTo make the name unique, RESULT_SCAN appends the suffix \u201c_<n>\u201d to the name, where \u201c<n>\u201d is the next number available that\nproduces a name that is different from the names of the previous columns.",
        "Was this page helpful?",
        "On this page"
    ]
}