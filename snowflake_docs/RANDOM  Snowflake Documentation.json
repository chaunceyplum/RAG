{
    "url": "https://docs.snowflake.com/en/sql-reference/functions/random",
    "title": "RANDOM | Snowflake Documentation",
    "paragraphs": [
        "Data generation functions",
        "Each call returns a pseudo-random 64-bit integer.",
        "Optional:",
        "The seed is an integer. Different seeds cause RANDOM to produce different output values.",
        "If no seed is provided, a random seed is chosen in a platform-specific manner.",
        "If a SQL statement calls RANDOM with the same seed for each row, then RANDOM returns a different value for each row,\neven though the seed is the same.",
        "If a SQL statement calls RANDOM more than once with the same seed for the same row,\nthen RANDOM returns the same value for each call for that row. For example, the following returns\nthe same value twice for each row: select random(42), random(42) from table1.",
        "See the example below.",
        "If a statement that calls RANDOM is executed more than once, there is no guarantee that RANDOM will\ngenerate the same set of values each time. This is true whether or not you specify a seed.",
        "Even if the same statement is called with the same data, RANDOM can produce different values. For example, this can\noccur when:",
        "The number of worker threads is different.",
        "The rows are processed in a different order.",
        "Random values are not necessarily unique values. Although duplicates are rare for a small number of calls,\nthe odds of duplicates go up as the number of calls goes up. If you need unique values, consider using\na sequence (SEQ1 / SEQ2 / SEQ4 / SEQ8) rather than a call to\nRANDOM. Choose a sequence with enough bits that it is unlikely to wrap around.",
        "Because the output is a finite integer and the values are generated by an algorithm rather than truly\nrandomly, the function eventually \u201cwraps around\u201d and starts repeating sequences of values. However, the \u201cperiod\u201d\n(number of calls before wrapping) is extremely large: 2^19937 - 1.",
        "The output is only pseudo-random; the output can be predicted given enough\ninformation (including the algorithm and the seed).",
        "RANDOM implements a 64-bit\nMersenne twister\nalgorithm known as MT19937-64.",
        "Generating pseudo-random numbers is somewhat expensive computationally;\nlarge numbers of calls to this function can consume significant resources.",
        "The following examples demonstrate how to use the RANDOM function. The values displayed in the output below might differ from\nthe values returned when you run these examples yourself.",
        "The following example calls RANDOM without a seed. The output for each row is different.",
        "The following example calls RANDOM with the same seed for each row. Although the seed is a constant, the\noutput for each row is still different.",
        "The following example calls RANDOM multiple times within a single statement and does not use a seed.\nRANDOM returns different values within each row, as well as different values for different rows:",
        "The following example calls RANDOM multiple times within a single statement and uses the same seed for each of\nthose calls. RANDOM returns the same value within each row, but different values for different rows:",
        "Was this page helpful?",
        "On this page"
    ]
}