{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-table-constraint",
    "title": "CREATE | ALTER TABLE \u2026 CONSTRAINT | Snowflake Documentation",
    "paragraphs": [
        "This topic describes how to create constraints by specifying a CONSTRAINT clause in a\nCREATE TABLE, CREATE HYBRID TABLE,\nor ALTER TABLE statement:",
        "An inline constraint is specified as part of the individual column definition.",
        "An out-of-line constraint is specified as an independent clause:",
        "When creating a table, the clause is part of the column definitions for the table.",
        "When altering a table, the clause is specified as an explicit ADD action for the table.",
        "For more information, see Constraints.",
        "If you are creating or altering hybrid tables, the syntax for defining constraints is the same; however, the rules and requirements are different.",
        "Where:",
        "Where:",
        "For compatibility with other databases, and for use with hybrid tables, Snowflake provides constraint properties.\nThe properties that can be specified for a constraint depend on the type:",
        "Some properties apply to all keys (unique, primary, and foreign).",
        "Other properties apply only to foreign keys.",
        "Important",
        "For standard Snowflake tables, these properties are provided to facilitate migrating from other databases. They are not\nenforced or maintained by Snowflake. This means that the defaults can be changed for these properties, but changing the\ndefaults results in Snowflake not creating the constraint.",
        "An exception is the RELY property. If you have ensured that the data in your standard tables complies with UNIQUE, PRIMARY\nKEY, and FOREIGN KEY constraints, you can set the RELY property for those constraints. See also\nSetting the RELY Constraint Property to Eliminate Unnecessary Joins.",
        "If you are creating or altering hybrid tables, the rules and requirements are different.\nSee Overview of Constraints.",
        "Most of the supported constraint properties are ANSI SQL standard properties; however, the following properties are Snowflake extensions:",
        "ENABLE | DISABLE",
        "VALIDATE | NOVALIDATE",
        "RELY | NORELY",
        "You can also define a comment within an out-of-line constraint definition; see Comments on constraints.",
        "The following properties apply to all constraints (the order of the properties is interchangeable):",
        "Specifies whether the constraint is enforced in a transaction. For standard tables, NOT NULL is the\nonly type of constraint that is enforced by Snowflake, regardless of this property.",
        "For hybrid tables, you cannot set the NOT ENFORCED property on PRIMARY KEY, FOREIGN KEY, and UNIQUE constraints.\nSetting this property results in an \u201cinvalid constraint property\u201d error.",
        "See also Referential Integrity Constraints.",
        "Default: NOT ENFORCED",
        "Specifies whether, in subsequent transactions, the constraint check can be deferred until the end of the transaction.",
        "Default: DEFERRABLE",
        "For DEFERRABLE constraints, specifies whether the check for the constraints can be deferred, starting from the next transaction.",
        "Default: INITIALLY DEFERRED",
        "Specifies whether the constraint is enabled or disabled. These properties are provided for compatibility with Oracle.",
        "Default: DISABLE",
        "Specifies whether to validate existing data on the table when a constraint is created. Applies only when either\n{ ENFORCED | NOT ENFORCED } or { ENABLE | DISABLE } is specified.",
        "Default: NOVALIDATE",
        "Specifies whether a constraint in NOVALIDATE mode is taken into account during query rewrite.",
        "If you have ensured that the data in the table complies with the constraints, you can change this property\nto RELY to indicate that the query optimizer should expect such data integrity. For standard tables, it is your responsibility to enforce RELY constraints; otherwise, you might risk unintended behavior and/or unexpected results.",
        "Setting the RELY property might improve query\nperformance (for example, by eliminating unnecessary joins).",
        "For primary and foreign key constraints, set this property on both the primary key constraint and the foreign key\nconstraint. For example:",
        "Default: NORELY",
        "The following constraint properties apply only to foreign keys (the order of the properties is interchangeable):",
        "Specifies whether the foreign key constraint is satisfied with regard to NULL values in one or more of the columns.",
        "Default: MATCH FULL",
        "Specifies the action performed when the primary/unique key for the foreign key is updated.",
        "Default: UPDATE NO ACTION",
        "Specifies the action performed when the primary/unique key for the foreign key is deleted.",
        "Default: DELETE NO ACTION",
        "For syntax compatibility with other databases, Snowflake supports specifying non-default values for constraint properties.",
        "However, if you specify ENABLE or VALIDATE (the non-default values for these properties) when creating a new\nconstraint, the constraint is not created. This does not apply to RELY. Specifying RELY does result in\nthe creation of the new constraint.",
        "Note that Snowflake provides a session parameter, UNSUPPORTED_DDL_ACTION, which determines whether specifying non-default\nvalues during constraint creation generates an error.",
        "Similar to other database objects and constructs, Snowflake supports comments on constraints:",
        "Out-of-line constraints support the COMMENT clause within the constraint definition.",
        "A COMMENT clause within the column definition can be used to comment on the column itself or its constraint:",
        "Note the following limitations:",
        "You cannot set comments on constraints by using the COMMENT command.",
        "The DESCRIBE TABLE command shows comments defined on columns, but not comments defined on constraints.\nTo see comments on constraints, select from the TABLE_CONSTRAINTS view or the\nREFERENTIAL_CONSTRAINTS view.",
        "The COMMENT clause within column and constraint definitions does not support the equals sign (=). Do not specify:",
        "Use the syntax shown in the previous examples:",
        "NOT NULL specifies that the column does not allow NULL values:",
        "For standard Snowflake tables, this is the only constraint that is enforced. See Referential Integrity Constraints.",
        "It can be specified only as an inline constraint within the column definition.",
        "The default is to allow NULL values in columns.",
        "Multi-column constraints (composite unique or primary keys) can only be defined out-of-line.",
        "When defining foreign keys, either inline or out-of-line, column name(s) for the referenced table do not need to be specified if the\nsignature (name and data type) of the foreign key column(s) and the referenced table\u2019s primary key column(s) exactly match.",
        "If you create a foreign key, the columns in the REFERENCES clause must be listed in the same order as they were\nlisted for the primary key. For example:",
        "In both cases, the order of the columns is c_1, c_2. If the order of the columns in the foreign key had been different\n(for example, c_2, c_1), the attempt to create the foreign key would have failed.",
        "For creating primary key or unique constraints:",
        "When altering an existing table to add the constraint, you must use a role that has the OWNERSHIP privilege on the table.",
        "When creating a new table, you must use a role that has the CREATE TABLE privilege on the schema where the table will be created.",
        "For creating foreign key constraints:",
        "You must use a role that has the OWNERSHIP privilege on the foreign key table.",
        "You must use a role that has the REFERENCES privilege on the unique/primary key table.",
        "The REFERENCES privilege can be granted to and revoked from roles using the GRANT <privileges> and\nREVOKE <privileges> commands:",
        "For examples of constraints with hybrid tables, see CREATE HYBRID TABLE.",
        "The example below shows how to create a simple NOT NULL constraint while creating a table, and another NOT NULL\nconstraint while altering a table:",
        "Create a table and create a constraint at the same time:",
        "Alter the table to add a column with a constraint:",
        "The following example specifies that the intent of the column is to hold unique values, but makes clear that the\nconstraint is not actually enforced. This example also demonstrates how to specify a name for the constraint\n(\u201cuniq_col3\u201d in this case.)",
        "The following creates a parent table with a primary key constraint and another table with a foreign key constraint\nthat points to the same columns as the first table\u2019s primary key constraint.",
        "Was this page helpful?",
        "On this page"
    ]
}