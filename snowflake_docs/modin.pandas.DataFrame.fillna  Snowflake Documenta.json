{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/reference/python/1.26.0/modin/pandas_api/modin.pandas.DataFrame.fillna",
    "title": "modin.pandas.DataFrame.fillna | Snowflake Documentation",
    "paragraphs": [
        "Fill NA/NaN values using the specified method.",
        "value (scalar, dict, Series, or DataFrame) \u2013 Value to use to fill holes (e.g. 0), alternately a\ndict/Series/DataFrame of values specifying which value to use for\neach index (for a Series) or column (for a DataFrame).  Values not\nin the dict/Series/DataFrame will not be filled. This value cannot\nbe a list.",
        "method ({{'backfill', 'bfill', 'ffill', None}}, default None) \u2013",
        "Method to use for filling holes in reindexed Series:",
        "ffill: propagate last valid observation forward to next valid.",
        "backfill / bfill: use next valid observation to fill gap.",
        "Deprecated since version 2.1.0: Use ffill or bfill instead.",
        "",
        "axis ({axes_single_arg}) \u2013 Axis along which to fill missing values. For Series\nthis parameter is unused and defaults to 0.",
        "inplace (bool, default False) \u2013 If True, fill in-place. Note: this will modify any\nother views on this object (e.g., a no-copy slice for a column in a\nDataFrame).",
        "limit (int, default None) \u2013 If method is specified, this is the maximum number of consecutive\nNaN values to forward/backward fill. In other words, if there is\na gap with more than this number of consecutive NaNs, it will only\nbe partially filled. If method is not specified, this is the\nmaximum number of entries along the entire axis where NaNs will be\nfilled. Must be greater than 0 if not None.",
        "downcast (dict, default is None) \u2013",
        "A dict of item->dtype of what to downcast if possible,\nor the string \u2018infer\u2019 which will try to downcast to an appropriate\nequal type (e.g. float64 to int64 if possible).",
        "Deprecated since version 2.2.0.",
        "",
        "Object with missing values filled or None if inplace=True.",
        "{klass} or None",
        "See also",
        "Fill values by propagating the last valid observation to next valid.",
        "Fill values by using the next valid observation to fill the gap.",
        "Fill NaN values using interpolation.",
        "Conform object to new index.",
        "Convert TimeSeries to specified frequency.",
        "Examples",
        "Replace all NaN elements with 0s.",
        "Replace all NaN elements in column \u2018A\u2019, \u2018B\u2019, \u2018C\u2019, and \u2018D\u2019, with 0, 1,\n2, and 3 respectively.",
        "Only replace the first NaN element.",
        "When filling using a DataFrame, replacement happens along\nthe same column names and same indices",
        "Note that column D is not affected since it is not present in df2.",
        "Notes",
        "limit parameter is only supported when using method parameter.",
        "Was this page helpful?"
    ]
}