{
    "url": "https://docs.snowflake.com/en/sql-reference/functions/array_except",
    "title": "ARRAY_EXCEPT | Snowflake Documentation",
    "paragraphs": [
        "Semi-structured and structured data functions (Array/Object)",
        "Returns a new ARRAY that contains the elements from one input ARRAY that are not in another input\nARRAY.",
        "The function is NULL-safe, meaning it treats NULLs as known values for comparing equality.",
        "ARRAY_INTERSECTION",
        "An array that contains elements to be included in the new ARRAY.",
        "An array that contains elements to be excluded from the new ARRAY.",
        "This function returns an ARRAY that contains the elements from source_array that are not in\narray_of_elements_to_exclude.",
        "If no elements remain after excluding the elements in array_of_elements_to_exclude from source_array, the\nfunction returns an empty ARRAY.",
        "If one or both arguments are NULL, the function returns NULL.",
        "The order of the values within the returned array is unspecified.",
        "When you compare data of the type OBJECT, the objects must be identical to be considered matching. For details,\nsee Examples (in this topic).",
        "In Snowflake, arrays are multi-sets, not sets. In other words, arrays can contain multiple copies of the same value.",
        "ARRAY_EXCEPT compares arrays by using multi-set semantics (sometimes called \u201cbag semantics\u201d). If\nsource_array includes multiple copies of a value, the function only removes the number of copies of that value that\nare specified in array_of_elements_to_exclude.",
        "In other words, if source_array has N copies of a value and array_of_elements_to_exclude has M copies of the\nsame value, the function excludes M copies of the value from the returned array. The number of copies of the value in the\nreturned array is N - M or, if M is larger than N, 0.",
        "For example, if source_array contains 5 elements with the value 'A' and array_of_elements_to_exclude\ncontains 2 elements with the value 'A', the returned array contains 3 elements with the value 'A'.",
        "Both arguments must either be structured ARRAYs or\nsemi-structured ARRAYs.",
        "If you are passing in a structured ARRAY:",
        "The ARRAY in the second argument must be comparable to the ARRAY in\nthe first argument.",
        "The function returns a structured ARRAY of the same type as the ARRAY in the first argument.",
        "The examples in this section use ARRAY constants and OBJECT constants\nto specify ARRAYs and OBJECTs.",
        "The following example demonstrates how to use the function:",
        "The following example adds the element 'C' to source_array. The returned ARRAY excludes 'C' because 'C' is\nalso specified in array_of_elements_to_exclude.",
        "In the following example, source_array contains 3 elements with the value 'B'. Because\narray_of_elements_to_exclude contains only 1 'B' element, the function excludes only 1 'B' element and returns\nan ARRAY containing the other 2 'B' elements.",
        "In the following example, no elements remain after excluding the elements in array_of_elements_to_exclude from\nsource_array. As a result, the function returns an empty ARRAY.",
        "The following example demonstrates how the function treats NULL elements as known values. As explained earlier, because\nsource_array contains one more NULL element than array_of_elements_to_exclude, the returned ARRAY excludes\nonly one NULL element and includes the other (which is printed out as undefined).",
        "In the following example, source_array and array_of_elements_to_exclude contain the same number of NULL\nelements, so the returned ARRAY excludes the NULL elements.",
        "The following example demonstrates how specifying the same object in source_array and\narray_of_elements_to_exclude excludes that object from the returned ARRAY:",
        "The following example demonstrates that passing in NULL results in the function returning NULL.",
        "Was this page helpful?",
        "On this page"
    ]
}