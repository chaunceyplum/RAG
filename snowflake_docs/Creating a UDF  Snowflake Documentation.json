{
    "url": "https://docs.snowflake.com/en/developer-guide/udf/udf-creating-sql",
    "title": "Creating a UDF | Snowflake Documentation",
    "paragraphs": [
        "You create a user-defined function (UDF) or user-defined table function (UDTF) with a CREATE FUNCTION command that specifies the\nfunction\u2019s properties, including the handler to use for its logic.",
        "This topic lists the steps to create a UDF. For examples, see the CREATE FUNCTION reference.",
        "You create a UDF with the following steps:",
        "Write handler code that executes when the UDF is called.",
        "You can use one of the supported handler languages. For more information, see Supported languages.",
        "Choose whether you\u2019ll keep the handler code in-line with the CREATE FUNCTION SQL statement or refer to it on a stage.",
        "Each has its advantages. For more information, see Keeping handler code in-line or on a stage.",
        "Execute a CREATE FUNCTION statement in SQL, specifying properties of the function.",
        "Code in the following example creates a UDF called function_name with the in-line handler\nHandlerClass.handlerMethod.",
        "The following describes some of the properties required or typically used when creating a function.",
        "Function name.",
        "The UDF name does not need to match the name of the handler. The CREATE FUNCTION statement associates the UDF name with the handler.",
        "For more about name constraints and conventions, see Naming and overloading procedures and UDFs.",
        "Function arguments, if any.",
        "See Defining arguments for UDFs and stored procedures.",
        "Return type with the RETURNS clause.",
        "For a scalar return value, the RETURNS clause will specify a single return type; for a tabular return value, RETURNS will specify\nthe TABLE keyword specifying column type in the tabular return value.",
        "For information about how Snowflake maps SQL data types to handler data types, see\nNaming and overloading procedures and UDFs.",
        "Handler name with the HANDLER clause.",
        "When required, this is the name of the class or method containing code that executes when the UDF is called. You need specify a\nhandler name only for handlers written in Java and Python. For JavaScript and SQL handlers, all code specified in-line will be\nexecuted as the handler.",
        "The following table describes the form of the HANDLER clause\u2019s value based on the handler language and function type.",
        "Handler Language",
        "UDF",
        "UDTF",
        "Java",
        "Class and method name.",
        "For example: MyClass.myMethod",
        "Class name only. Handler method name is predetermined by the required interface.",
        "JavaScript",
        "None.",
        "None.",
        "Python",
        "Class and method name if a class is used; otherwise, function name.",
        "For example: module.my_function or my_function",
        "Class name only. Handler method name is predetermined by the required interface.",
        "SQL",
        "None.",
        "None.",
        "Dependencies required by the handler, if any, using the IMPORTS or PACKAGES clauses.",
        "For more about making dependencies available to your handler, see Making dependencies available to your code.",
        "Handler language runtime with RUNTIME_VERSION clause.",
        "When the handler language is Java or Python, use the RUNTIME_VERSION clause to specify which supported runtime version to use.\nOmitting the clause will prompt Snowflake to use the default, which may change in the future.",
        "Was this page helpful?",
        "Related content"
    ]
}