{
    "url": "https://docs.snowflake.com/en/sql-reference/functions/regexp_instr",
    "title": "REGEXP_INSTR | Snowflake Documentation",
    "paragraphs": [
        "String functions (regular expressions)",
        "Returns the position of the specified occurrence of the regular expression pattern in the string subject.",
        "See also String functions (regular expressions).",
        "Required:",
        "The string to search for matches.",
        "Pattern to match.",
        "For guidelines on specifying patterns, see String functions (regular expressions).",
        "Optional:",
        "Number of characters from the beginning of the string where the function starts searching for matches.",
        "Default: 1 (the search for a match starts at the first character on the left)",
        "Specifies the first occurrence of the pattern from which to start returning matches.",
        "The function skips the first occurrence - 1 matches. For example, if there are 5 matches and\nyou specify 3 for the occurrence argument, the function ignores the first two matches and\nreturns the third, fourth, and fifth matches.",
        "Default: 1",
        "Specifies whether to return the offset of the first character of the match (0) or the offset of the first character following the end of the match (1).",
        "Default: 0",
        "String of one or more characters that specifies the parameters used for searching for matches. Supported values:",
        "Parameter",
        "Description",
        "c",
        "Case-sensitive matching",
        "i",
        "Case-insensitive matching",
        "m",
        "Multi-line mode",
        "e",
        "Extract submatches",
        "s",
        "POSIX wildcard character . matches \\n",
        "Default: c",
        "For more details, see Specifying the parameters for the regular expression.",
        "Note",
        "By default, REGEXP_INSTR returns the begin or end character offset for the entire matching part of the subject.\nHowever, if the e (for \u201cextract\u201d) parameter is specified, REGEXP_INSTR returns the begin or end\ncharacter offset for the part of the subject that matches the first sub-expression in the pattern.\nIf e is specified but a group_num is not also specified, then the group_num\ndefaults to 1 (the first group).  If there is no sub-expression in the pattern, REGEXP_INSTR behaves as\nif e was not set. For examples that use e, see Examples in this topic.",
        "The group_num parameter specifies which group to extract. Groups are specified by using parentheses in\nthe regular expression.",
        "If a group_num is specified, Snowflake allows extraction even if the e option was not\nalso specified. The e option is implied.",
        "Snowflake supports up to 1024 groups.",
        "For examples that use group_num, see Examples of capture groups in this topic.",
        "Returns a value of type NUMBER.",
        "If no match is found, returns 0.",
        "Positions are 1-based, not 0-based. For example, the position of the letter \u201cM\u201d in \u201cMAN\u201d is 1, not 0.",
        "For additional usage notes, see the General usage notes for regular expression functions.",
        "Arguments with collation specifications currently aren\u2019t supported.",
        "The following examples use the REGEXP_INSTR function.",
        "Create a table and insert data:",
        "Search for a matching string. In this case, the string is nevermore followed by a single decimal digit\n(for example, nevermore1). The example uses the REGEXP_SUBSTR function to show the matching\nsubstring:",
        "Search for a matching string, but starting at the fifth character in the string, rather than at the first character in the\nstring:",
        "Search for a matching string, but look for the third match rather than the first match:",
        "This query is nearly identical the previous query, but this one shows how to use the option argument to\nindicate whether you want the position of the matching expression, or the position of the first character after the\nmatching expression:",
        "This query shows that if you search for an occurrence beyond the last actual occurrence, the position returned is 0:",
        "This section shows how to use the \u201cgroup\u201d feature of regular expressions.",
        "The first few examples in this section don\u2019t use capture groups. The section starts with some simple examples,\nthen continues with examples that use capture groups.",
        "These examples use the strings created below:",
        "The strings have the following characteristics:",
        "The string with an id of 2 has multiple occurrences of the word \u201cthe\u201d.",
        "The string with an id of 3 has multiple occurrences of the word \u201cthe\u201d with extra blank spaces\nbetween the words.",
        "The string with an id of 4 has the character sequence \u201cthe\u201d inside multiple words (\u201cthespian\u201d\nand \u201ctheater\u201d), but without the word \u201cthe\u201d by itself.",
        "This example looks for the first occurrence of the word the, followed by one or more non-word characters (for example,\nthe whitespace separating words), followed by one or more word characters.",
        "\u201cWord characters\u201d include not only the letters a-z and A-Z, but also the\nunderscore (\u201c_\u201d) and the decimal digits 0-9, but not whitespace, punctuation, and so on.",
        "Starting from position 1 of the string, look for the second occurrence of the word the,\nfollowed by one or more non-word characters, followed by one or more word characters.",
        "This example is similar to the preceding example, but adds capture groups. Rather than returning the position of the\nentire match, this query returns the position of only the group, which is the portion of the substring that matches the\npart of the regular expression in parentheses. In this case, the returned value is the position of the word\nafter the second occurrence of the word the.",
        "If you specify the 'e' (extract) parameter, but don\u2019t specify the group_num, then the group_num\ndefaults to 1:",
        "If you specify a group_num, Snowflake assumes that you want to extract, even if you didn\u2019t specify\n'e' (extract) as one of the parameters:",
        "This example shows how to retrieve the position of second word from the first, second, and third matches of\na two-word pattern in which the first word is A. This also shows that trying to go beyond the last\npattern causes Snowflake to return 0.",
        "Create a table and insert data:",
        "Run the query:",
        "This example shows how to retrieve the position of first, second, and third groups within the first occurrence of the pattern.\nIn this case, the returned values are the positions of the individual letters of the word MAN.",
        "The following example matches occurrences of the word was. Matching begins at the first character in the string\nand returns the position in the string of the character following the first occurrence:",
        "The following example returns the offset of the first character of the part of the string that matches the\npattern. Matching begins at the first character in the string and returns the first occurrence of the pattern:",
        "The following example is the same as the previous example, but uses the e parameter to return the\ncharacter offset for the part of the subject that matches the first subexpression in the pattern (the\nfirst set of word characters after the):",
        "The following example matches occurrences of words ending in st preceded by two or more alphabetic characters\n(case-insensitive). Matching begins at the fifteenth character in the string and returns the position in the string of\nthe character following the first occurrence  (the beginning of worst):",
        "To run the next set of examples, create a table and insert data:",
        "Return the offset of the first character in the first match that contains a\nlowercase o:",
        "Return the offset of the first character in the first match that contains a\nlowercase o, starting at the third character in the subject:",
        "Return the offset of the first character in the third match that contains a\nlowercase o, starting at the third character in the subject:",
        "Return the offset of the last character in the third match that contains a\nlowercase o, starting at the third character in the subject:",
        "Return the offset of the last character in the third match that contains a\nlowercase o, starting at the third character in the subject, with case-insensitive matching:",
        "Was this page helpful?",
        "On this page"
    ]
}