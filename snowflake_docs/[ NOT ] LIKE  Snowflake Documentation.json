{
    "url": "https://docs.snowflake.com/en/sql-reference/functions/like.html#usage-notes",
    "title": "[ NOT ] LIKE | Snowflake Documentation",
    "paragraphs": [
        "String & binary functions (Matching/Comparison)",
        "Performs a case-sensitive comparison to determine whether a string matches or does not match a specified pattern.\nFor case-insensitive matching, use ILIKE instead.",
        "LIKE, ILIKE, and RLIKE all perform similar operations. However, RLIKE uses POSIX ERE (Extended Regular Expression) syntax\ninstead of the SQL pattern syntax used by LIKE and ILIKE.",
        "Tip",
        "You can use the search optimization service to improve the performance of queries that call this function.\nFor details, see Search Optimization Service.",
        "[ NOT ] ILIKE , [ NOT ] RLIKE , LIKE ALL, LIKE ANY",
        "Required:",
        "Subject to match. This is typically a VARCHAR, although some other data\ntypes can be used.",
        "Pattern to match. This is typically a VARCHAR, although some other data\ntypes can be used.",
        "Optional:",
        "Character(s) inserted in front of a wildcard character to indicate that the wildcard should\nbe interpreted as a regular character and not as a wildcard.",
        "Returns a BOOLEAN or NULL.",
        "When LIKE is specified, the value is TRUE if there is a match. Otherwise, returns FALSE.",
        "When NOT LIKE is specified, the value is TRUE if there is no match. Otherwise, returns FALSE.",
        "When either LIKE or NOT LIKE is specified, returns NULL if any argument is NULL.",
        "To include single quotes or other special characters in pattern matching, you can use a\nbackslash escape sequence.",
        "NULL does not match NULL. In other words, if the subject is NULL and the pattern is NULL,\nthat is not considered a match.",
        "SQL wildcards are supported in pattern:",
        "An underscore (_) matches any single character.",
        "A percent sign (%) matches any sequence of zero or more characters.",
        "Wildcards in pattern include newline characters (n) in subject as matches.",
        "Pattern matching covers the entire string. To match a sequence anywhere within a string, start and end the pattern with %.",
        "There is no default escape character.",
        "If you use the backslash as an escape character, then you must escape the backslash in both the\nexpression and the ESCAPE clause. For example, the following command specifies that the escape character is\nthe backslash, and then uses that escape character to search for % as a literal (without the escape character,\nthe % would be treated as a wildcard):",
        "For examples of using escape characters, and in particular the backslash as an escape character, see\nExamples.",
        "Only the upper, lower, and trim collation specifications are supported. Combinations with upper,\nlower, and trim are also supported (for example, upper-trim and lower-trim), except for locale\ncombinations (for example, en-upper).",
        "Create a table that contains some strings:",
        "The following examples show the use of LIKE, NOT LIKE, and the wildcard\ncharacter %:",
        "The following example uses a backslash to escape a single quote so that it can be found in pattern matching:",
        "The following examples use an ESCAPE clause:",
        "Insert more rows into the like_ex table:",
        "Without the escape character, the percent sign (%) is treated as a wildcard:",
        "With the escape character, the percent sign (%) is treated as a literal:",
        "The following example uses an ESCAPE clause in which the backslash is the escape character. Note that the backslash\nitself must be escaped in both the ESCAPE clause and in the expression:",
        "Was this page helpful?",
        "On this page"
    ]
}