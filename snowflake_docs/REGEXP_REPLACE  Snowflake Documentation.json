{
    "url": "https://docs.snowflake.com/en/sql-reference/functions/regexp_replace",
    "title": "REGEXP_REPLACE | Snowflake Documentation",
    "paragraphs": [
        "String functions (regular expressions)",
        "Returns the subject with the specified pattern (or all occurrences of the pattern) either removed or replaced by a replacement string.",
        "See also String functions (regular expressions).",
        "Required:",
        "The string to search for matches.",
        "Pattern to match.",
        "For guidelines on specifying patterns, see String functions (regular expressions).",
        "Optional:",
        "String that replaces the substrings matched by the pattern. If an empty string is specified, the function removes all matched patterns and returns the resulting string.",
        "Default: '' (empty string).",
        "Number of characters from the beginning of the string where the function starts searching for matches.",
        "Default: 1 (the search for a match starts at the first character on the left)",
        "Specifies which occurrence of the pattern to replace. If 0 is specified, all occurrences are replaced.",
        "Default: 0 (all occurrences)",
        "String of one or more characters that specifies the parameters used for searching for matches. Supported values:",
        "Parameter",
        "Description",
        "c",
        "Case-sensitive matching",
        "i",
        "Case-insensitive matching",
        "m",
        "Multi-line mode",
        "e",
        "Extract submatches",
        "s",
        "POSIX wildcard character . matches \\n",
        "Default: c",
        "For more details, see Specifying the parameters for the regular expression.",
        "Returns a value of type VARCHAR.",
        "If no matches are found, returns the original subject.",
        "Returns NULL if any argument is NULL.",
        "The replacement string can contain backreferences to capture groups (for example, sub-expressions of the pattern). A capture group is a regular expression that is enclosed within parentheses (( )). The maximum number of capture groups is 9.",
        "Backreferences match expressions inside a capture group. Backreferences have the form n where n is a value from 0 to 9, inclusive, which refers to the matching instance of the capture group. For more information, see Examples (in this topic).",
        "Parentheses (( )) and square brackets ([ ]) currently must be double-escaped to parse them as literal strings.",
        "The example below shows how to remove parentheses:",
        "For additional usage notes, see the General usage notes for regular expression functions.",
        "Arguments with collation specifications currently aren\u2019t supported.",
        "The following example replaces all spaces in the string with nothing (that is, all spaces are removed):",
        "The following example matches the string times and replaces it with the string days. Matching begins at the first\ncharacter in the string and replaces the second occurrence of the substring:",
        "The following example uses backreferences to rearrange the string firstname middlename lastname as\nlastname, firstname middlename and insert a comma between lastname and firstname:",
        "Was this page helpful?",
        "On this page"
    ]
}