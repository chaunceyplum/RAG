{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-user",
    "title": "CREATE USER | Snowflake Documentation",
    "paragraphs": [
        "Creates a new user or replaces an existing user in the system. For more details, see User management.",
        "Note",
        "Only user administrators (i.e. users with the USERADMIN role or higher), or another role with the CREATE USER privilege on the account,\ncan create users.",
        "DROP USER , ALTER USER , DESCRIBE USER , SHOW PARAMETERS",
        "Where:",
        "Note",
        "For readability, the complete list of session parameters that can be set for a user is not included here. For a complete list of all\nsession parameters, with their descriptions, as well as account and object parameters, see Parameters.",
        "Identifier for the user; must be unique for your account.",
        "The identifier must start with an alphabetic character and cannot contain spaces or special characters unless the entire identifier\nstring is enclosed in double quotes (e.g. \"My object\"). Identifiers enclosed in double quotes are also case-sensitive.",
        "For more details, see Identifier requirements.",
        "Note",
        "The user does not use this value to log into Snowflake; instead, the user uses the value specified for the LOGIN_NAME\nproperty to log in. However, if no login name is explicitly specified for the user, the user name/identifier serves as the default\nlogin name.",
        "The password for the user must be enclosed in single or double quotes. If no password is specified, the user cannot log into Snowflake\nuntil a password has been explicitly specified for them.",
        "If the password uses the backslash (i.e. \\) character, escape the character with a backslash or use double dollar sign (i.e. $$)\ndelimiters when specifying the password in a SQL command. For details, refer to String & binary data types.",
        "For more information about passwords in Snowflake, refer to Password policies.",
        "Default: NULL",
        "Name that the user enters to log into the system. Login names for users must be unique across your entire account.",
        "A login name can be any string, including spaces and non-alphanumeric characters, such as exclamation points (!), percent signs\n(%), and asterisks (*); however, if the string contains spaces or non-alphanumeric characters, it must be enclosed in single\nor double quotes. Login names are always case-insensitive.",
        "Snowflake allows specifying different user and login names to enable using common identifiers (e.g. email addresses) for login.",
        "Default: User\u2019s name/identifier (i.e. if no value is specified, the value specified for name is used as the login name)",
        "Name displayed for the user in the Snowflake web interface.",
        "Default: User\u2019s name/identifier (i.e. if no value is specified, the value specified for name is used as the display name)",
        "First, middle, and last name of the user.",
        "Default: NULL",
        "Email address for the user.",
        "An email address is not required to use Snowflake; however, to access the Snowflake Community to open support tickets or contribute to\nthe community forums, a valid email address must be specified for the user.",
        "We recommend specifying a business email address rather than a personal email address. User email addresses are visible to all other\nusers in your Snowflake account.",
        "Default: NULL",
        "Specifies whether the user is forced to change their password on next login (including their first/initial login) into the system.",
        "Default: FALSE",
        "Specifies whether the user is disabled, which prevents the following actions:",
        "For a new user, the user is locked out of Snowflake and cannot log in.",
        "For an existing user, setting the property aborts all their currently-running queries and does not allow the user to issue any new\nqueries; the user is also immediately locked out of Snowflake and cannot log back in.",
        "Default: FALSE",
        "Specifies the number of days after which the user status is set to \u201cExpired\u201d and the user is no longer allowed to log in. This is useful\nfor defining temporary users (i.e. users who should only have access to Snowflake for a limited time period). In general, you should\nnot set this property for account administrators (i.e. users with the ACCOUNTADMIN role)\nbecause Snowflake locks them out when they become \u201cExpired\u201d.",
        "Once set, the value counts down to 0, but doesn\u2019t stop. A negative value indicates the status for the user is \u201cExpired\u201d. To reset\nthe value, use ALTER USER to set the following values:",
        "To re-enable the user as a temporary user, set the value to a value greater than 0.",
        "To specify the user as a permanent user, set the value to NULL or 0.",
        "Default: NULL",
        "Specifies the number of minutes until the temporary lock on the user login is cleared. To protect against unauthorized user login,\nSnowflake places a temporary lock on a user after five consecutive unsuccessful login attempts:",
        "A positive value indicates the status for the user is \u201cLocked\u201d.",
        "Once the value counts down to 0 (or a negative value), the lock is cleared and the user is allowed to log in again.",
        "When the user successfully logs into Snowflake, the value resets to NULL.",
        "When creating a user, this property can be set to prevent them from logging in until the specified amount of time passes.",
        "To remove a lock immediately for a user, use ALTER USER and specify a value of 0 for this parameter.",
        "Default: NULL",
        "Specifies the virtual warehouse that is active by default for the user\u2019s session upon login.",
        "A user can specify or change their current default virtual warehouse using ALTER USER. In addition, after starting a session\n(i.e. logging in), a user can change the virtual warehouse for the session using USE WAREHOUSE.",
        "Note that the CREATE USER operation does not verify that the warehouse exists.",
        "Default: NULL",
        "Specifies the namespace (database only or database and schema) that is active by default for the user\u2019s session upon login:",
        "To specify a database only, enter the database name.",
        "To specify a schema, enter the fully-qualified schema name in the form of db_name.schema_name.",
        "A user can specify or change their current default namespace using ALTER USER. In addition, after starting a session\n(i.e. logging in), a user can change the namespace for their session using USE DATABASE or USE SCHEMA.",
        "Note that the CREATE USER operation does not verify that the namespace exists.",
        "Default: NULL",
        "Specifies the primary role that is active by default for the user\u2019s session upon login. The primary role is a single role that\nauthorizes the execution of CREATE <object> statements or any other SQL action. The permissions to perform these\nactions can be granted to the primary role or any lower role in the role hierarchy.",
        "Note that specifying a default role for a user does not grant the role to the user. The role must be granted explicitly to the\nuser using the GRANT ROLE command. In addition, the CREATE USER operation does not verify that the role exists.",
        "A user can specify or change their current default role using ALTER USER. In addition, after starting a session (i.e. logging in),\na user can change the role for the session using USE ROLE. In either case, they can only choose from roles that have been\nexplicitly granted to them.",
        "Default: NULL",
        "Specifies the set of secondary roles that are active for the user\u2019s session upon login. Secondary roles are a set of roles that authorize\nany SQL action other than the execution of CREATE <object> statements. The permissions to perform these actions can be granted\nto the primary role, secondary roles, or any lower roles in the role hierarchies.",
        "Note that specifying a default secondary role for a user does not grant the role to the user. The role must also be granted\nexplicitly to the user using the GRANT ROLE command.",
        "The following values are supported:",
        "All roles that have been granted to the user.",
        "Note that the set of roles is reevaluated when each SQL statement executes. If additional roles are granted to the user, and that\nuser executes a new SQL statement, the newly granted roles are active secondary roles for the new SQL statement.  The same logic\napplies to roles that are revoked from a user.",
        "No roles.",
        "Default: NULL",
        "Specifies the number of minutes to temporarily bypass MFA for the user.",
        "This property can be used to allow a MFA-enrolled user to temporarily bypass MFA during login in the event that their MFA device is\nnot available.",
        "Specifies the user\u2019s RSA public key; used for key pair authentication.",
        "Specifies the fingerprint of the user\u2019s RSA public key; used for key pair authentication.",
        "Specifies the user\u2019s second RSA public key; used to rotate the public and private keys for\nkey pair authentication based on an expiration schedule set by your organization.",
        "Specifies the fingerprint of the user\u2019s second RSA public key; used to rotate the public and private keys for\nkey pair authentication based on an expiration schedule set by your organization.",
        "Specifies the type of user. You can set this property to differentiate between human, service, and legacy service users.",
        "Default: NULL",
        "Users do not have restrictions when the TYPE property is set to PERSON, NULL, or when TYPE is unset.",
        "See PERSON.",
        "To improve the security posture of non-interactive use cases, users with the TYPE property set to SERVICE have the\nfollowing characteristics:",
        "They cannot log in using a password.",
        "They cannot log in using SAML SSO.",
        "They cannot enroll in MFA.",
        "They are not subject to authentication policy MFA enforcement.",
        "They cannot have the following properties:",
        "FIRST_NAME",
        "MIDDLE_NAME",
        "LAST_NAME",
        "PASSWORD",
        "MUST_CHANGE_PASSWORD",
        "MINS_TO_BYPASS_MFA",
        "The following commands cannot be used:",
        "ALTER USER RESET PASSWORD",
        "ALTER USER SET DISABLE_MFA = TRUE",
        "If a user has their TYPE property set to SERVICE using the ALTER USER command, then the incompatible properties remain\nstored, but are not returned in user views returned by commands such as DESCRIBE USER. The incompatible properties cannot be set using\nthe ALTER USER command.",
        "If a user, with their TYPE property set to SERVICE, is changed to a user with their TYPE property set to\nPERSON or NULL, the incompatible properties are restored and can be changed, including their PASSWORD property.",
        "A user with their TYPE property set to LEGACY_SERVICE represents a non-interactive integration. LEGACY_SERVICE\nusers let services or applications that cannot easily use more secure authentication methods authenticate using password or SAML\nauthentication.",
        "LEGACY_SERVICE users have the following characteristics:",
        "They can log in using password or SAML authentication, unlike SERVICE: users.",
        "They do not have the properties of a SERVICE user, but have the PASSWORD and\nMUST_CHANGE_PASSWORD properties available.",
        "They have the command restrictions of a SERVICE user, but can use the ALTER USER RESET PASSWORD command.",
        "They are not affected by authentication policy multi-factor authentication (MFA) enforcement. This property lets administrators set\naccount-level authentication policies that require MFA for password authentication without needing to set a user-level\nauthentication policy to prevent LEGACY_SERVICE users from requiring MFA for password authentication.",
        "Specifies a comment for the user.",
        "Default: NULL",
        "Controls how queries that fail due to syntax or parsing errors show up in a query history. If FALSE, the contents of a\nfailed query is redacted from the views, pages, and functions that provide a query history.",
        "This parameter controls behavior for the user viewing the query history, not the user who executed the query.",
        "Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE_UNREDACTED_QUERY_SYNTAX_ERROR parameter.",
        "Specifies an existing network policy is active for the user. The network policy restricts the\nlist of user IP addresses when exchanging an authorization code for an access or refresh token and when using a refresh token to\nobtain a new access token.",
        "If this parameter is not set, the network policy for the account (if any) is used instead.",
        "Specifies one (or more) session parameter defaults to set for the user (separated by blank spaces, commas, or new lines). These defaults\nare set each time the user logs into Snowflake and initiates session. The user can always change these defaults themselves within the\nsession using ALTER SESSION.",
        "For the complete list of session parameters, including their default values, that can be specified for a user, see\nParameters.",
        "Specifies the tag name and the tag string value.",
        "The tag value is always a string, and the maximum number of characters for the tag value is 256.",
        "For information about specifying tags in a statement, see Tag quotas for objects and columns.",
        "A role used to execute this SQL command must have the following\nprivileges at a minimum:",
        "Privilege",
        "Object",
        "Notes",
        "CREATE USER",
        "Account",
        "Only the USERADMIN role, or a higher role, has this privilege by default. The privilege can be granted to additional roles as needed.",
        "For instructions on creating a custom role with a specified set of privileges, see Creating custom roles.",
        "For general information about roles and privilege grants for performing SQL actions on\nsecurable objects, see Overview of Access Control.",
        "Regarding metadata:",
        "Attention",
        "Customers should ensure that no personal data (other than for a User object), sensitive data, export-controlled data, or other regulated data is entered as metadata when using the Snowflake service. For more information, see Metadata fields in Snowflake.",
        "CREATE OR REPLACE <object> statements are atomic. That is, when an object is replaced, the old object is deleted and the new object is created in a single transaction.",
        "Create a user with all default properties, a default role, and a basic password that must be changed by the user after their first\nlogin:",
        "Was this page helpful?",
        "On this page"
    ]
}