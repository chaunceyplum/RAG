{
    "url": "https://docs.snowflake.com/en/sql-reference/constructs/for-update",
    "title": "FOR UPDATE | Snowflake Documentation",
    "paragraphs": [
        "Query syntax",
        "Locks the rows that the query selects until the transaction that contains the query commits or\naborts.",
        "This clause is supported for use with hybrid tables only, and is useful for transactional\nworkloads in which multiple transactions attempt to access the same rows at the same time.\nRows are locked for update in the sense that other transactions cannot write data to these\nrows until the transaction doing the locking has been fully committed or rolled back.\nHowever, other transactions can read the locked rows, and other rows in the same table can be\nread, updated, or deleted.",
        "Returns an error if the transaction cannot lock the selected rows immediately.\nNOWAIT is the default.",
        "Specifies the maximum time (in seconds) that the query waits to acquire row-level locks. If\nthe wait time expires, the query returns an error.",
        "The FOR UPDATE clause:",
        "Cannot be used with AUTOCOMMIT transactions.",
        "Must be the last clause in the SELECT statement.",
        "Cannot be used in a CTAS statement.",
        "Cannot be used inside subqueries.",
        "Cannot select from multiple tables (joins) or\nset operations.",
        "Cannot be used when the query contains:",
        "DISTINCT",
        "Aggregation functions",
        "GROUP BY",
        "HAVING",
        "Sequences",
        "Because hybrid tables support the READ COMMITTED isolation level, FOR UPDATE clauses do not\nguarantee read stability. For example, assume that a table T with a single column named ID\ncontains two rows with values 5 and 10.",
        "The following query is run in  transaction T1:",
        "The query returns the values 5 and 10 and locks those two rows.",
        "Another transaction, T2, runs the following DELETE operation:",
        "Transaction T2 has to wait until T1 completes (that is, until it commits or rolls back).",
        "However, a third transaction, T3, can complete the following INSERT operation:",
        "A subsequent query in T1 now returns three values (rows), not two: 5, 10, and 12:",
        "Open a new transaction, select all of the rows from a hybrid table (ht), and lock those\nrows until the transaction commits. Update some selected rows and run another query before\ncommitting the transaction.",
        "Apply a maximum wait time of 60 seconds for row locking:",
        "Was this page helpful?",
        "On this page"
    ]
}