{
    "url": "https://docs.snowflake.com/en/sql-reference/data-types-datetime#interval-constants",
    "title": "Date & time data types | Snowflake Documentation",
    "paragraphs": [
        "Snowflake supports data types for managing dates, times, and timestamps (combined date + time). Snowflake also supports formats for\nstring constants used in manipulating dates, times, and timestamps.",
        "Snowflake supports the following date and time data types:",
        "DATE",
        "DATETIME",
        "TIME",
        "TIMESTAMP_LTZ , TIMESTAMP_NTZ , TIMESTAMP_TZ",
        "Note",
        "For DATE and TIMESTAMP data, Snowflake recommends using years between 1582 and 9999. Snowflake accepts some\nyears outside this range, but years prior to 1582 should be avoided due to\nlimitations on the Gregorian Calendar.",
        "Snowflake supports a single DATE data type for storing dates (with no time elements).",
        "DATE accepts dates in the most common forms (YYYY-MM-DD, DD-MON-YYYY, and so on).",
        "In addition, all accepted TIMESTAMP values are valid inputs for dates, but the TIME information is truncated.",
        "DATETIME is an alias for TIMESTAMP_NTZ.",
        "Snowflake supports a single TIME data type for storing times in the form of HH:MI:SS.",
        "TIME supports an optional precision parameter for fractional seconds (for example, TIME(3)).\nTime precision can range from 0 (seconds) to 9 (nanoseconds). The default precision is 9.",
        "All TIME values must be between 00:00:00 and 23:59:59.999999999. TIME internally stores \u201cwallclock\u201d time, and all operations on TIME values are performed\nwithout taking any time zone into consideration.",
        "Snowflake supports three variations of timestamp.",
        "TIMESTAMP_LTZ internally stores UTC time with a specified precision. However, all operations are performed in the current session\u2019s time zone, controlled by the\nTIMEZONE session parameter.",
        "Aliases for TIMESTAMP_LTZ:",
        "TIMESTAMPLTZ",
        "TIMESTAMP WITH LOCAL TIME ZONE",
        "TIMESTAMP_NTZ internally stores \u201cwallclock\u201d time with a specified precision. All operations are performed without taking any time zone into account.",
        "If the output format contains a time zone, the UTC indicator (Z) is displayed.",
        "TIMESTAMP_NTZ is the default for TIMESTAMP.",
        "Aliases for TIMESTAMP_NTZ:",
        "TIMESTAMPNTZ",
        "TIMESTAMP WITHOUT TIME ZONE",
        "DATETIME",
        "TIMESTAMP_TZ internally stores UTC time together with an associated time zone offset. When a time zone isn\u2019t provided, the session time zone offset is used. All\noperations are performed with the time zone offset specific to each record.",
        "Aliases for TIMESTAMP_TZ:",
        "TIMESTAMPTZ",
        "TIMESTAMP WITH TIME ZONE",
        "TIMESTAMP_TZ values are compared based on their times in UTC. For example, the following comparison between\ndifferent times in different timezones returns TRUE because the two values have equivalent times in UTC.",
        "Attention",
        "TIMESTAMP_TZ currently only stores the offset of a given time zone, not the actual time zone, at the moment of creation for a given value. This is especially\nimportant for daylight saving time, which is not utilized by UTC.",
        "For example, with the TIMEZONE parameter set to \"America/Los_Angeles\", converting a value to TIMESTAMP_TZ in January of a given year stores the\ntime zone offset of -0800. If six months are later added to the value, the -0800 offset is retained, even though in July the offset for Los Angeles is\n-0700. This is because, after the value is created, the actual time zone information (\"America/Los_Angeles\") is no longer available. The following code\nsample illustrates this behavior:",
        "TIMESTAMP in Snowflake is a user-specified alias associated with one of the TIMESTAMP_* variations. In all operations where TIMESTAMP is used, the associated TIMESTAMP_*\nvariation is automatically used. The TIMESTAMP data type is never stored in tables.",
        "The TIMESTAMP_* variation associated with TIMESTAMP is specified by the TIMESTAMP_TYPE_MAPPING session parameter. The default is TIMESTAMP_NTZ.",
        "All timestamp variations, as well as the TIMESTAMP alias, support an optional precision parameter for fractional\nseconds (for example, TIMESTAMP(3)). Timestamp precision can range from 0 (seconds) to 9 (nanoseconds). The default precision is 9.",
        "These examples create a table using different timestamps.",
        "First, create a table with a TIMESTAMP column (mapped to TIMESTAMP_NTZ):",
        "Next, explicitly use one of the TIMESTAMP variations (TIMESTAMP_LTZ):",
        "Use TIMESTAMP_LTZ with different time zones:",
        "This query shows that the time for January 2nd is 08:00 in Los Angeles (which is 16:00 in UTC):",
        "Next, note that the times change with a different time zone:",
        "Create a table and use TIMESTAMP_NTZ:",
        "Note that both times from different time zones are converted to the same \u201cwallclock\u201d time:",
        "Next, note that changing the session time zone doesn\u2019t affect the results:",
        "Create a table and use TIMESTAMP_TZ:",
        "Note that the January 1st record inherited the session time zone,\nand America/Los_Angeles was converted to a numeric time zone offset:",
        "Next, note that changing the session time zone doesn\u2019t affect the results:",
        "Snowflake uses the Gregorian Calendar for all dates and timestamps. The Gregorian Calendar starts in the year 1582, but recognizes prior years, which is important to note\nbecause Snowflake does not adjust dates prior to 1582 (or calculations involving dates prior to 1582) to match the Julian Calendar. The UUUU format element\nsupports negative years.",
        "All of these data types accept most non-ambiguous date, time, or date + time formats. See\nSupported formats for AUTO detection for the formats that Snowflake recognizes when\nconfigured to detect the format automatically.",
        "You can also\nspecify the date and time format manually. When specifying the\nformat, you can use the case-insensitive elements listed in the following table:",
        "Format element",
        "Description",
        "YYYY",
        "Four-digit year.",
        "YY",
        "Two-digit year, controlled by the TWO_DIGIT_CENTURY_START session parameter. For example, when set to 1980, values of 79 and 80 are parsed as 2079 and 1980 respectively.",
        "MM",
        "Two-digit month (01 = January, and so on).",
        "MON",
        "Full or abbreviated month name.",
        "MMMM",
        "Full month name.",
        "DD",
        "Two-digit day of month (01 through 31).",
        "DY",
        "Abbreviated day of week.",
        "HH24",
        "Two digits for hour (00 through 23). You must not specify AM / PM.",
        "HH12",
        "Two digits for hour (01 through 12). You can specify AM / PM.",
        "AM , PM",
        "Ante meridiem (AM) / post meridiem (PM). Use this only with HH12 (not with HH24).",
        "MI",
        "Two digits for minute (00 through 59).",
        "SS",
        "Two digits for second (00 through 59).",
        "FF[0-9]",
        "Fractional seconds with precision 0 (seconds) to 9 (nanoseconds), e.g. FF, FF0, FF3, FF9. Specifying FF is equivalent to FF9 (nanoseconds).",
        "TZH:TZM , TZHTZM , TZH",
        "Time zone hour and minute, offset from UTC. Can be prefixed by +/- for sign.",
        "UUUU",
        "Four-digit year in ISO format, which are negative for BCE years.",
        "Note",
        "When a date-only format is used, the associated time is assumed to be midnight on that day.",
        "Anything in the format between double quotes or other than the above elements is parsed/formatted without being interpreted.",
        "For more details about valid ranges, number of digits, and best practices, see\nAdditional information about using date, time, and timestamp formats.",
        "The following example uses FF to indicate that the output has 9 digits in the fractional seconds field:",
        "Constants (also known as literals) are fixed data values. Snowflake supports using string constants to specify fixed date, time, or timestamp values. String\nconstants must always be enclosed between delimiter characters. Snowflake supports using single quotes to delimit string constants.",
        "For example:",
        "The string is parsed as a DATE, TIME, or TIMESTAMP value based on the input format for the data type, as set through the following parameters:",
        "DATE_INPUT_FORMAT",
        "TIME_INPUT_FORMAT",
        "TIMESTAMP_INPUT_FORMAT",
        "For example, to insert a specific date into a column in a table:",
        "You can use interval constants to add or subtract a period of time to or from a date, time, or timestamp. Interval constants are implemented\nusing the INTERVAL keyword, which has the following syntax:",
        "As with all string constants, Snowflake requires single quotes to delimit interval constants.",
        "The INTERVAL keyword supports one more integers and, optionally, one or more date or time parts. For example:",
        "INTERVAL '1 year' represents one year.",
        "INTERVAL '4 years, 5 months, 3 hours' represents four years, five months, and three hours.",
        "If a date or time part isn\u2019t specified, the interval represents seconds (for example, INTERVAL '2' is the same\nas INTERVAL '2 seconds'). Note that this is different from the default unit of time for performing date arithmetic.\nFor more details, see Simple arithmetic for dates.",
        "For the list of supported date and time parts, see Supported Date and Time Parts for Intervals.",
        "Note",
        "The order of interval increments is important. The increments are added or subtracted in the order listed. For example:",
        "INTERVAL '1 year, 1 day' first adds or subtracts a year and then a day.",
        "INTERVAL '1 day, 1 year' first adds or subtracts a day and then a year.",
        "Ordering differences can affect calculations influenced by calendar events, such as leap years:",
        "INTERVAL is not a data type (that is, you can\u2019t define a table column to be of data type INTERVAL). Intervals can only be used in date, time, and timestamp arithmetic.",
        "You can\u2019t use an interval with a SQL variable. For example, the following query returns an error:",
        "The INTERVAL keyword supports the following date and time parts as arguments (case-insensitive):",
        "Date or Time Part",
        "Abbreviations / Variations",
        "year",
        "y , yy , yyy , yyyy , yr , years , yrs",
        "quarter",
        "q , qtr , qtrs , quarters",
        "month",
        "mm , mon , mons , months",
        "week",
        "w , wk , weekofyear , woy , wy , weeks",
        "day",
        "d , dd , days, dayofmonth",
        "hour",
        "h , hh , hr , hours , hrs",
        "minute",
        "m , mi , min , minutes , mins",
        "second",
        "s , sec , seconds , secs",
        "millisecond",
        "ms , msec , milliseconds",
        "microsecond",
        "us , usec , microseconds",
        "nanosecond",
        "ns , nsec , nanosec , nsecond , nanoseconds , nanosecs , nseconds",
        "Add a year interval to a specific date:",
        "Add an interval of 3 hours and 18 minutes to a specific time:",
        "Add a complex interval to the output of the CURRENT_TIMESTAMP function:",
        "The following is sample output. The output is different when the current timestamp is different.",
        "Add a complex interval with abbreviated date/time part notation to a specific date:",
        "Query a table of employee information and return the names of employees who were hired within the past two years and three months:",
        "Filter a TIMESTAMP column named ts from a table named t1 and add four seconds to each returned value:",
        "In addition to using interval constants to add to and subtract from dates, times, and timestamps, you can also\nadd and subtract days to and from DATE values, in the form of { + | - } integer, where integer\nspecifies the number of days to add or subtract.",
        "Note",
        "TIME and TIMESTAMP values don\u2019t yet support simple arithmetic.",
        "Add one day to a specific date:",
        "Subtract four days from a specific date:",
        "Query a table named employees and return the names of people who left the company, but were employed more than 365 days:",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}