{
    "url": "https://docs.snowflake.com/en/sql-reference/functions/search_ip",
    "title": "SEARCH_IP | Snowflake Documentation",
    "paragraphs": [
        "Searches for valid IPv4 addresses in specified character-string columns from one or more tables, including fields\nin VARIANT, OBJECT, and ARRAY columns. The search is based on a single IP address or a range of IP addresses\nthat you specify. If this IP address matches an IP address in the specified column or field, the function\nreturns TRUE.",
        "For more information about using this function, see Using full-text search.",
        "The data you want to search, expressed as a comma-delimited list of string literals, column names, or\npaths to fields in VARIANT columns. The search data can\nalso be a single literal string, which can be useful when you are testing the function.",
        "You can specify the wildcard character (*), where * expands to all qualifying columns in all of the\ntables that are in scope for the function. Qualifying columns are those that have VARCHAR (text), VARIANT,\nARRAY, and OBJECT data types. VARIANT, ARRAY, and OBJECT data is converted to text for searching. You can\nalso use the ILIKE and EXCLUDE keywords for filtering.",
        "For more information about this argument, see the search_data description for the\nSEARCH function.",
        "A VARCHAR string that contains one of the following:",
        "A complete and valid IP address in standard IPv4 format, such as 192.0.2.1.",
        "A valid IP address in standard IPv4 format with a Classless Inter-Domain Routing (CIDR) range,\nsuch as 192.0.2.1/24.",
        "A valid IP address in standard IPv4 format with leading zeros, such as 192.000.002.001 (instead of 192.0.2.1).\nThe function accepts up to three digits for each part of the IP address.",
        "This argument must be a literal string. Specify one pair of single quotes around the string.",
        "The following types of arguments aren\u2019t supported:",
        "Column names",
        "Empty strings",
        "More than one IP address",
        "Partial IPv4 addresses",
        "IPv6 addresses",
        "Returns a BOOLEAN.",
        "Returns TRUE if a valid IP address is specified in search_string and a matching IP address is found in\nsearch_data.",
        "Returns TRUE if a valid IP address with a CIDR range is specified in search_string and an IP address in\nthe specified range is found in search_data.",
        "Returns NULL if either of these arguments is NULL.",
        "Otherwise, returns FALSE.",
        "The SEARCH_IP function operates only on VARCHAR, VARIANT, ARRAY, and OBJECT data. The function returns an error if the\nsearch_data argument doesn\u2019t contain data of these data types. When the search_data argument includes\ndata of both supported data types and unsupported data types, the function searches the data of the supported data\ntypes and silently ignores the data of the unsupported data types. For examples, see Examples of expected error cases.",
        "The function returns an error if the search_string argument isn\u2019t a valid IP address. For examples, see\nExamples of expected error cases.",
        "You can add a FULL_TEXT search optimization on columns that are the target of SEARCH_IP function calls by using an ALTER TABLE command\nthat specifies the ENTITY_ANALYZER. For example:",
        "The ENTITY_ANALYZER recognizes only the entities (for example, IP addresses). Therefore, the search access path is typically\nmuch smaller than FULL_TEXT search optimization with a different analyzer.",
        "For more information, see enable FULL_TEXT search optimization.",
        "The following examples use the SEARCH_IP function:",
        "Search for matching IP addresses in VARCHAR columns",
        "Search for matching IP addresses in a VARIANT column",
        "Examples of expected error cases",
        "The following examples show how to use the SEARCH_IP function to query VARCHAR columns.",
        "Create a table named ipt and insert two rows:",
        "Run the following search queries. The first query uses the SEARCH_IP function in the SELECT list and searches\nthe two VARCHAR columns in the table:",
        "Notice that search_data 192.000.002.146 is a match for search_string\n192.0.2.146 even though 192.000.002.146 has leading zeros.",
        "This query shows a search_string with a CIDR range:",
        "This query shows a search_string with leading zeros returns True for\nIP addresses that omit the leading zeros:",
        "This query uses the function in the WHERE clause and searches the ip2 column only.",
        "When the function is used in the WHERE clause and there is no match, no values are returned.",
        "You can use the * character (or table.*) as the first argument to the SEARCH function, as shown in this example.\nThe search operates on all of the qualifying columns in the table you are selecting from.",
        "You can also use the ILIKE and EXCLUDE keywords for filtering. For more information about\nthese keywords, see SELECT.",
        "This search uses the ILIKE keyword to search only in columns that start with the string ip.",
        "To enable FULL_TEXT search optimization for the columns in the\nipt table, run the following ALTER TABLE command:",
        "Note",
        "The columns you specify must be VARCHAR or VARIANT columns. Columns with other data types are not supported.",
        "The following examples show how to use the SEARCH_IP function to query VARIANT columns.",
        "This example uses the SEARCH_IP function to search a path to a field in a VARIANT column. Create a table\nnamed iptv and insert two rows:",
        "Run the following search queries. The first query searches the ipv1 field only. The\nsecond searches ipv1 and ipv2.",
        "To enable FULL_TEXT search optimization for this ip1 VARIANT\ncolumn and its fields, run the following ALTER TABLE command:",
        "Note",
        "The columns you specify must be VARCHAR or VARIANT columns. Columns with other data types are not supported.",
        "Create a table named ipt_log and insert rows:",
        "Search for log entries in the ip_request_log column that include the 192.0.2.146 IP address:",
        "The following examples show queries that return expected syntax errors.",
        "This example fails because 5 is not a supported data type for the search_string argument.",
        "This example fails because the search_string argument isn\u2019t a valid IP address.",
        "This example fails because the search_string argument is an empty string.",
        "This example fails because there is no column of a supported data type specified for the search_data argument.",
        "This example succeeds because there is a column of a supported data type specified for the search_data argument. The function\nignores the id column because it is not a supported data type.",
        "Was this page helpful?",
        "On this page"
    ]
}