{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-python-api/snowflake-python-managing-streams",
    "title": "Managing Snowflake streams with Python | Snowflake Documentation",
    "paragraphs": [
        "Feature \u2014 Generally Available",
        "Not available in government regions.",
        "You can use Python to manage Snowflake streams, which are objects that record data manipulation language (DML) changes made to tables,\nincluding inserts, updates, and deletes, as well as metadata about each change. For more information, see Introduction to Streams.",
        "Note",
        "ALTER STREAM is currently not supported.",
        "The Snowflake Python APIs represents streams with two separate types:",
        "Stream: Exposes a stream\u2019s properties such as its name, target lag, warehouse, and query statement.",
        "StreamResource: Exposes methods you can use to fetch a corresponding Stream object, suspend and resume the stream, and\ndrop the stream.",
        "Minimum API version required",
        "0.13.0",
        "The examples in this topic assume that you\u2019ve added code to connect with Snowflake and to create a Root object from which to use the\nSnowflake Python APIs.",
        "For example, the following code uses connection parameters defined in a configuration file to create a connection to Snowflake:",
        "Using the resulting Session object, the code creates a Root object to use the API\u2019s types and methods. For more information,\nsee Connect to Snowflake with the Snowflake Python APIs.",
        "To create a stream, first create a Stream object, and then create a StreamCollection object from the API Root\nobject. Using StreamCollection.create, add the new stream to Snowflake.",
        "You can create a stream on the following object types:",
        "Standard tables",
        "Views",
        "Directory tables",
        "Code in the following example creates a Stream object that represents a stream named my_stream_on_table on the source table\nmy_table in the my_db database and the my_schema schema, with the specified stream properties:",
        "Note",
        "The StreamSourceTable type only supports standard tables. Other types of tables\u2014such as dynamic tables, event tables, external\ntables, and Iceberg tables\u2014are currently not supported.",
        "The code creates a StreamCollection variable streams and uses StreamCollection.create to create a new stream in\nSnowflake.",
        "Code in the following example creates a Stream object that represents a stream named my_stream_on_view on the source view\nmy_view in the my_db database and the my_schema schema, with the specified stream properties:",
        "Code in the following example creates a Stream object that represents a stream named my_stream_on_directory_table on the source\ndirectory table my_directory_table in the my_db database and the my_schema schema, with the specified stream properties:",
        "Code in the following example creates a new stream named my_stream with the same definition as the source stream my_other_stream in\nthe my_db database and the my_schema schema:",
        "You can get information about a stream by calling the StreamResource.fetch method, which returns a Stream object.",
        "Code in the following example gets information about a stream named my_stream in the my_db database and the my_schema schema:",
        "You can list streams using the StreamCollection.iter method, which returns a PagedIter iterator of Stream objects.",
        "Code in the following example lists streams whose name starts with my in the my_db database and the my_schema schema, and then\nprints the name of each:",
        "Code in the following example also lists streams whose name begins with my, but it uses the starts_with parameter instead of\nlike. This example also sets the optional parameter show_limit=10 to limit the number of results to 10:",
        "You can drop a stream with a StreamResource object.",
        "Code in the following example gets the my_stream stream resource object and then drops the stream.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}