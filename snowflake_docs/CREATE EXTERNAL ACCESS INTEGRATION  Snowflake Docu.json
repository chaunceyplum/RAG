{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-external-access-integration",
    "title": "CREATE EXTERNAL ACCESS INTEGRATION | Snowflake Documentation",
    "paragraphs": [
        "Creates an external access integration for access\nto external network locations from a UDF or procedure handler.",
        "ALTER EXTERNAL ACCESS INTEGRATION , DROP INTEGRATION ,\nSHOW INTEGRATIONS , DESCRIBE INTEGRATION",
        "Identifier for the external access integration.",
        "The identifier value must start with an alphabetic character and cannot contain spaces or special characters unless the entire identifier\nstring is enclosed in double quotes (e.g. \"My object\"). Identifiers enclosed in double quotes are case-sensitive.",
        "For more details, see Identifier requirements.",
        "Specifies the allowed network rules. Only egress rules may be specified.",
        "Specifies whether this integration is enabled or disabled. If the integration is disabled, any handler code that relies\non it will be unable to reach the external network location.",
        "The value is case-insensitive.",
        "The default is TRUE.",
        "Specifies the security integrations whose OAuth authorization server issued the secret used by the UDF or procedure. The security\nintegration must be the type used for external API integration.",
        "This parameter\u2019s value must be one of the following:",
        "One or more Snowflake security integration names to allow any of the listed integrations.",
        "none to allow no integrations.",
        "Security integrations specified by this parameter \u2013 as well as secrets specified by the ALLOWED_AUTHENTICATION_SECRETS parameter \u2013 are\nways to allow secrets for use in a UDF or procedure that uses this external access integration. For more information, see\nUsage notes.",
        "For reference information about security integrations, refer to CREATE SECURITY INTEGRATION (External API Authentication).",
        "Specifies the secrets that UDF or procedure handler code can use when accessing the external network locations referenced in allowed\nnetwork rules.",
        "This parameter\u2019s value must be one of the following:",
        "One or more Snowflake secret names to allow any of the listed secrets.",
        "all to allow any secret.",
        "none to allow no secrets.",
        "The ALLOWED_API_AUTHENTICATION_INTEGRATIONS parameter can also specify allowed secrets. For more information, see\nUsage notes.",
        "For reference information about secrets, refer to CREATE SECRET.",
        "Specifies a comment for the external access integration.",
        "Default: No value",
        "A role used to execute this SQL command must have the following\nprivileges at a minimum:",
        "Privilege",
        "Object",
        "Notes",
        "CREATE INTEGRATION",
        "Account",
        "Only the ACCOUNTADMIN role has this privilege by default. The privilege can be granted to additional roles as needed.",
        "USAGE",
        "Secret",
        "Required for all secrets referenced by the integration.",
        "USAGE",
        "Schema",
        "Required for all schemas containing any secrets referenced by the integration.",
        "For instructions on creating a custom role with a specified set of privileges, see Creating custom roles.",
        "For general information about roles and privilege grants for performing SQL actions on\nsecurable objects, see Overview of Access Control.",
        "You can allow secrets for use by a UDF or procedure by using two external access integration parameters, as described below.",
        "With the ALLOWED_AUTHENTICATION_SECRETS parameter. You can specify secrets as parameter values or set the parameter\u2019s value to\nall, allowing handler code to use any secret.",
        "With the ALLOWED_API_AUTHENTICATION_INTEGRATIONS parameter. A secret is allowed for use when\nthe secret itself specifies a security integration whose name is also specified by this parameter. The secret specifies the security\nintegration with its API_AUTHENTICATION parameter. In other words, when both the secret and the external access integration specify\nthe security integration, the secret is allowed for use in functions and procedures that specify the external access integration.",
        "Note that these two alternatives function independently of one another. A secret is allowed if either (or both) of the parameters allows\nit, regardless of the value specified for the other parameter. For example, setting one of the parameters to none does not\nprevent a secret specified by the other parameter from being used in handler code.",
        "While you can specify network rules using a hostname, Snowflake enforces the rules at the IP level of granularity. Snowflake will not\ninspect your application\u2019s traffic, so it is your responsibility to ensure that the external location\u2019s host has the authentic\nservice and that it is not possible to connect to other services on the same host. Whenever possible, you should use secure protocols\nsuch as HTTPS and TLS when communicating with internet endpoints.",
        "Regarding metadata:",
        "Attention",
        "Customers should ensure that no personal data (other than for a User object), sensitive data, export-controlled data, or other regulated data is entered as metadata when using the Snowflake service. For more information, see Metadata fields in Snowflake.",
        "Create an external access integration that provides access to the Google Translation API.",
        "For a more complete example, refer to Creating and using an external access integration.",
        "Create a secret representing credentials.",
        "To create a secret, you must have been assigned a role with the CREATE SECRET privilege on the current schema. For other kinds of\nsecret supported by this command, refer to CREATE SECRET. In this example, google_translate_oauth\nrefers to a security integration. For more information, refer to CREATE SECURITY INTEGRATION (External API Authentication).",
        "Grant READ privileges on the secret to the developer role so that UDF developers can use it.",
        "Create the role that will be required for developers needing to use the secret.",
        "Grant the READ privilege to the developer role.",
        "Create a network rule representing the external network location. Use a role with the privileges described in\nCREATE NETWORK RULE.",
        "Create an external access integration using the secret and network rule.",
        "Grant USAGE privileges on the integration to the developer role so that UDF developers can use it.",
        "Create a UDF google_translate_python that translates the specified text into a phrase in the specified language. For more\ninformation, refer to Using the external access integration in a function or procedure.",
        "Grant the USAGE privilege on the google_translate_python function so that those with the user role can call it.",
        "Execute the google_translate_python function to translate a phrase.",
        "This generates the following output.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}