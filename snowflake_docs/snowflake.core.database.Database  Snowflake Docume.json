{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-python-api/reference/latest/_autosummary/snowflake.core.database.Database",
    "title": "snowflake.core.database.Database | Snowflake Documentation",
    "paragraphs": [
        "Bases: object",
        "A model object representing the Database resource.",
        "Constructs an object of type Database with the provided properties.",
        "name (str) \u2013 A Snowflake object identifier.",
        "created_on (datetime, optional) \u2013 Date and time the database was created.",
        "kind (str,  default 'PERMANENT') \u2013 Database type, permanent (default) or transient.",
        "is_default (bool, optional) \u2013 Whether the database is the default database for a user.",
        "is_current (bool, optional) \u2013 Current database for the session.",
        "origin (str, optional)",
        "owner (str, optional) \u2013 Name of the role that owns the database.",
        "comment (str, optional) \u2013 Optional comment in which to store information related to the database.",
        "options (str, optional)",
        "retention_time (int, optional) \u2013 Number of days that historical data is retained for Time Travel.",
        "dropped_on (datetime, optional) \u2013 Date and time the database was dropped.",
        "budget (str, optional) \u2013 Budget that defines a monthly spending limit on the compute costs for a Snowflake account or a custom group of Snowflake objects.",
        "owner_role_type (str, optional) \u2013 Type of role that owns the object, either ROLE or DATABASE_ROLE",
        "data_retention_time_in_days (int, optional) \u2013 Specifies the number of days for which Time Travel actions (CLONE and UNDROP) can be performed on the database, as well as specifying the default Time Travel retention time for all schemas created in the database.",
        "default_ddl_collation (str, optional) \u2013 Default collation specification for all schemas and tables added to the database. You an override the default at the schema and individual table levels.",
        "log_level (str, optional) \u2013 Severity level of messages that should be ingested and made available in the active event table. Currently, Snowflake supports only TRACE, DEBUG, INFO, WARN, ERROR, FATAL and OFF.",
        "max_data_extension_time_in_days (int, optional) \u2013 Maximum number of days for which Snowflake can extend the data retention period for tables in the database to prevent streams on the tables from becoming stale.",
        "suspend_task_after_num_failures (int, optional) \u2013 Maximum number of consecutive failed task runs before the current task is suspended automatically.",
        "trace_level (str, optional) \u2013 How trace events are ingested into the event table. Currently, Snowflake supports only ALWAYS, ON_EVENT, and OFF.",
        "user_task_managed_initial_warehouse_size (str, optional) \u2013 Size of the compute resources to provision for the first run of the task, before a task history is available for Snowflake to determine an ideal size.",
        "user_task_timeout_ms (int, optional) \u2013 Time limit, in milliseconds, for a single run of the task before it times out.",
        "Methods",
        "Creates an instance of Database from a dict.",
        "This method constructs a Database object from a dictionary with the key-value pairs of its properties.",
        "obj (dict) \u2013 A dictionary whose keys and values correspond to the properties of the resource object.",
        "A Database object created using the input dictionary; this will fail if the required properties are missing.",
        "Database",
        "Creates a dictionary of the properties from a Database.",
        "This method constructs a dictionary with the key-value entries corresponding to the properties of the Database object.",
        "A dictionary object created using the input model.",
        "dict",
        "Was this page helpful?"
    ]
}