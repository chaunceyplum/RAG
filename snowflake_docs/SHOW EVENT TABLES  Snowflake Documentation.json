{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/show-event-tables",
    "title": "SHOW EVENT TABLES | Snowflake Documentation",
    "paragraphs": [
        "Lists the event tables for which you have access privileges, including\ndropped tables that are still within the Time Travel retention period and, therefore, can be undropped. The command can be used to list\nevent tables for the current/specified database or schema, or across your entire account.",
        "The output returns table metadata and properties, ordered lexicographically by database, schema, and event table name (see\nOutput in this topic for descriptions of the output columns). This is important to note if you wish to filter the results using\nthe provided filters.",
        "CREATE EVENT TABLE, ALTER TABLE (event tables), DROP TABLE,\nUNDROP TABLE",
        "TABLES view (Information Schema)",
        "Optionally returns only a subset of the output columns:",
        "created_on",
        "name",
        "database_name",
        "schema_name",
        "Default: No value (all columns are included in the output)",
        "Optionally filters the command output by object name. The filter uses case-insensitive pattern matching, with support for SQL\nwildcard characters (% and _).",
        "For example, the following patterns return the same results:",
        ". Default: No value (no filtering is applied to the output).",
        "Optionally specifies the scope of the command, which determines whether the command lists records only for the current/specified database or schema, or across your entire account.",
        "If you specify the keyword ACCOUNT, then the command retrieves records for all schemas in all databases\nof the current account.",
        "If you specify the keyword DATABASE, then:",
        "If you specify a db_name, then the command retrieves records for all schemas of the specified database.",
        "If you do not specify a db_name, then:",
        "If there is a current database, then the command retrieves records for all schemas in the current database.",
        "If there is no current database, then the command retrieves records for all databases and schemas in the account.",
        "If you specify the keyword SCHEMA, then:",
        "If you specify a qualified schema name (e.g. my_database.my_schema), then the command\nretrieves records for the specified database and schema.",
        "If you specify an unqualified schema_name, then:",
        "If there is a current database, then the command retrieves records for the specified schema in the current database.",
        "If there is no current database, then the command displays the error\nSQL compilation error: Object does not exist, or operation cannot be performed.",
        "If you do not specify a schema_name, then:",
        "If there is a current database, then:",
        "If there is a current schema, then the command retrieves records for the current schema in the current database.",
        "If there is no current schema, then the command retrieves records for all schemas in the current database.",
        "If there is no current database, then the command retrieves records for all databases and all schemas in the account.",
        "Default: Depends on whether the session currently has a database in use:",
        "Database: DATABASE is the default (i.e. the command returns the objects you have privileges to view in the current\ndatabase).",
        "No database: ACCOUNT is the default (i.e. the command returns the objects you have privileges to view in your account).",
        "Optionally filters the command output based on the characters that appear at the beginning of\nthe object name. The string must be enclosed in single quotes and is case-sensitive.",
        "For example, the following strings return different results:",
        ". Default: No value (no filtering is applied to the output)",
        "Optionally limits the maximum number of rows returned, while also enabling \u201cpagination\u201d of the results. The actual number of rows\nreturned might be less than the specified limit. For example, the number of existing objects is less than the specified limit.",
        "The optional FROM 'name_string' subclause effectively serves as a \u201ccursor\u201d for the results. This enables fetching the\nspecified number of rows following the first row whose object name matches the specified string:",
        "The string must be enclosed in single quotes and is case-sensitive.",
        "The string does not have to include the full object name; partial names are supported.",
        "Default: No value (no limit is applied to the output)",
        "Note",
        "For SHOW commands that support both the FROM 'name_string' and STARTS WITH 'name_string' clauses, you can combine\nboth of these clauses in the same statement. However, both conditions must be met or they cancel out each other and no results are\nreturned.",
        "In addition, objects are returned in lexicographic order by name, so FROM 'name_string' only returns rows with a higher\nlexicographic value than the rows returned by STARTS WITH 'name_string'.",
        "For example:",
        "... STARTS WITH 'A' LIMIT ... FROM 'B' would return no results.",
        "... STARTS WITH 'B' LIMIT ... FROM 'A' would return no results.",
        "... STARTS WITH 'A' LIMIT ... FROM 'AB' would return results (if any rows match the input strings).",
        "If an account (or database or schema) has a large number of event tables, then searching the entire account (or table or schema)\ncan consume a significant amount of compute resources.",
        "The command does not require a running warehouse to execute.",
        "The value for LIMIT rows cannot exceed 10000. If LIMIT rows is omitted, the command results in an error if the result set is larger than 10K rows.",
        "To view results for which more than 10K records exist, either include LIMIT rows or query the corresponding view in the Snowflake Information Schema.",
        "To post-process the output of this command, you can use the RESULT_SCAN function, which treats the output as a table that can be queried.",
        "The command output provides table properties and metadata in the following columns:",
        "Column",
        "Description",
        "created_on",
        "Date and time when the event table was created.",
        "name",
        "Name of the event table.",
        "database_name",
        "Database in which the event table is stored.",
        "schema_name",
        "Schema in which the event table is stored.",
        "owner",
        "Role that owns the event table.",
        "comment",
        "Comment for the event table.",
        "owner_role_type",
        "The type of role that owns the object, for example ROLE. . If a Snowflake Native App owns the object, the value is APPLICATION. . Snowflake returns NULL if you delete the object because a deleted object does not have an owner role.",
        "For more information about the properties that can be specified for an event table, see CREATE EVENT TABLE.",
        "Show all the event tables whose name starts with mylogs that you have privileges to view in the tpch.public\nschema:",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}