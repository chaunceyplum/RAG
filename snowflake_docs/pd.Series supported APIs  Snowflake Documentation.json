{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/reference/python/1.26.0/modin/supported/series_supported",
    "title": "pd.Series supported APIs | Snowflake Documentation",
    "paragraphs": [
        "The following table is structured as follows: The first column contains the method name.\nThe second column is a flag for whether or not there is an implementation in Snowpark for\nthe method in the left column.",
        "Note",
        "Y stands for yes, i.e., supports distributed implementation, N stands for no and API simply errors out,\nP stands for partial (meaning some parameters may not be supported yet), and D stands for defaults to single\nnode pandas execution via UDF/Sproc.",
        "Attributes",
        "Series attribute",
        "Snowpark implemented? (Y/N/P/D)",
        "Notes for current implementation",
        "T",
        "Y",
        "array",
        "N",
        "at",
        "P",
        "N for set with MultiIndex",
        "attrs",
        "Y",
        "axes",
        "Y",
        "dtype",
        "Y",
        "dtypes",
        "Y",
        "empty",
        "Y",
        "flags",
        "P",
        "flags can only be read, and not set.",
        "hasnans",
        "Y",
        "iat",
        "Y",
        "iloc",
        "Y",
        "index",
        "Y",
        "is_monotonic_decreasing",
        "Y",
        "is_monotonic_increasing",
        "Y",
        "is_unique",
        "Y",
        "loc",
        "P",
        "N for set with MultiIndex",
        "name",
        "Y",
        "nbytes",
        "N",
        "ndim",
        "Y",
        "shape",
        "Y",
        "size",
        "Y",
        "values",
        "Y",
        "Methods",
        "Series method",
        "Snowpark implemented? (Y/N/P/D)",
        "Missing parameters",
        "Notes for current implementation",
        "abs",
        "Y",
        "add",
        "P",
        "level",
        "add_prefix",
        "Y",
        "add_suffix",
        "Y",
        "agg",
        "P",
        "Y when  function is one of count,\nmean, min, max, sum, median,\nsize; std and var supported with\nddof=0 or ddof=1; quantile is\nsupported when q is the default value\nor a scalar.",
        "aggregate",
        "P",
        "See agg",
        "align",
        "P",
        "copy, level,\nfill_value",
        "N for MultiIndex, for deprecated parameters\nmethod, limit, fill_axis,\nbroadcast_axis, or if fill_value is not\ndefault of np.nan",
        "all",
        "P",
        "N for non-integer/boolean types",
        "any",
        "P",
        "N for non-integer/boolean types",
        "apply",
        "P",
        "convert_dtype is ignored",
        "N if func is not callable.",
        "argmax",
        "P",
        "N if the Series has a MultiIndex index.",
        "argmin",
        "P",
        "N if the Series has a MultiIndex index.",
        "argsort",
        "N",
        "asfreq",
        "P",
        "how, normalize,\nfill_value",
        "Only DatetimeIndex is supported and its freq\nwill be lost. Only rule frequencies \u2018s\u2019, \u2018min\u2019,\n\u2018h\u2019, and \u2018D\u2019 are supported.",
        "asof",
        "N",
        "astype",
        "P",
        "N if from string to datetime/timedelta or\nerrors == \"ignore\"",
        "at_time",
        "N",
        "autocorr",
        "N",
        "axes",
        "Y",
        "backfill",
        "P",
        "N if param downcast is set.",
        "between",
        "N",
        "between_time",
        "N",
        "bfill",
        "P",
        "N if param downcast is set.",
        "bool",
        "N",
        "case_when",
        "P",
        "N if condition or replacement is a callable.",
        "clip",
        "N",
        "combine",
        "N",
        "combine_first",
        "N",
        "compare",
        "P",
        "align_axis, keep_shape,\nkeep_equal, result_names",
        "convert_dtypes",
        "N",
        "copy",
        "Y",
        "corr",
        "N",
        "count",
        "Y",
        "cov",
        "N",
        "cummax",
        "Y",
        "cummin",
        "Y",
        "cumprod",
        "N",
        "cumsum",
        "P",
        "Y if values are numeric, otherwise fails.",
        "describe",
        "Y",
        "diff",
        "Y",
        "div",
        "P",
        "level",
        "See truediv",
        "divide",
        "P",
        "level",
        "See truediv",
        "divmod",
        "N",
        "dot",
        "N",
        "drop",
        "Y",
        "drop_duplicates",
        "Y",
        "droplevel",
        "N",
        "dropna",
        "P",
        "duplicated",
        "Y",
        "eq",
        "P",
        "level",
        "equals",
        "Y",
        "ewm",
        "N",
        "expanding",
        "P",
        "method is ignored",
        "N if axis = 1",
        "explode",
        "N",
        "factorize",
        "N",
        "ffill",
        "P",
        "N if parameter downcast is set. limit\nparameter only supported if method parameter\nis used.",
        "fillna",
        "P",
        "See ffill",
        "filter",
        "N",
        "first",
        "Y",
        "first_valid_index",
        "Y",
        "floordiv",
        "P",
        "level",
        "Raises division by zero exception when the right\nhand side contains at least one zero. pandas allows\ndivision by zero for non-object type Series and\nreturns +/-inf.",
        "ge",
        "P",
        "level",
        "get",
        "Y",
        "groupby",
        "P",
        "observed is ignored since\nCategoricals are not implemented\nyet",
        "Y when axis == 0 and by is column\nlabel or Series from the current DataFrame;\notherwise N;\nNote that supported functions are agg, count,\ncumcount, cummax, cummin, cumsum, first, last,\nmax, mean, median, min, quantile, shift, size,\nstd, sum, and var.\nOtherwise N",
        "gt",
        "P",
        "level",
        "head",
        "Y",
        "hist",
        "N",
        "idxmax",
        "Y",
        "idxmin",
        "Y",
        "infer_objects",
        "N",
        "info",
        "D",
        "Different Index types are used in pandas but not\nin Snowpark pandas",
        "interpolate",
        "N",
        "isin",
        "Y",
        "Snowpark pandas deviates with respect to handling\nNA values",
        "isna",
        "Y",
        "isnull",
        "Y",
        "item",
        "N",
        "items",
        "Y",
        "keys",
        "Y",
        "kurt",
        "N",
        "kurtosis",
        "N",
        "last",
        "Y",
        "last_valid_index",
        "Y",
        "le",
        "P",
        "level",
        "lt",
        "P",
        "level",
        "map",
        "P",
        "na_action",
        "N if arg is an instance of a subclass of\ndict that is not a subclass of\ncollections.defaultdict but that does define\na __missing__ method.",
        "mask",
        "P",
        "N if given axis or level parameters,\nN if cond or other is Callable",
        "max",
        "Y",
        "mean",
        "Y",
        "median",
        "Y",
        "memory_usage",
        "N",
        "min",
        "Y",
        "mod",
        "P",
        "level",
        "mode",
        "N",
        "mul",
        "P",
        "level",
        "multiply",
        "P",
        "level",
        "ne",
        "P",
        "level",
        "nlargest",
        "P",
        "N if keep == \"all\"",
        "notna",
        "Y",
        "notnull",
        "Y",
        "nsmallest",
        "P",
        "N if keep == \"all\"",
        "nunique",
        "Y",
        "pad",
        "P",
        "See ffill",
        "pct_change",
        "P",
        "limit, freq",
        "pipe",
        "N",
        "plot",
        "D",
        "Performed locally on the client",
        "pop",
        "N",
        "pow",
        "P",
        "level",
        "prod",
        "N",
        "product",
        "N",
        "quantile",
        "P",
        "Y if values are numeric, and interpolation\nis \"linear\" or \"nearest\";\nN if q is a DataFrame or Series",
        "radd",
        "P",
        "level",
        "rank",
        "P",
        "N if axis == 1",
        "ravel",
        "N",
        "rdiv",
        "P",
        "level",
        "See truediv",
        "rdivmod",
        "N",
        "reindex",
        "P",
        "N if the series has MultiIndex, or method\nis nearest.",
        "reindex_like",
        "N",
        "rename",
        "P",
        "copy is ignored",
        "N if mapper is callable or the series has\nMultiIndex",
        "rename_axis",
        "Y",
        "reorder_levels",
        "N",
        "repeat",
        "N",
        "replace",
        "P",
        "method, limit",
        "resample",
        "P",
        "axis, label,\nconvention, kind,\n, level, origin,\n, offset, group_keys",
        "Only DatetimeIndex is supported and its freq\nwill be lost. rule frequencies \u2018s\u2019, \u2018min\u2019,\n\u2018h\u2019, and \u2018D\u2019 are supported. rule frequencies\n\u2018W\u2019, \u2018ME\u2019, and \u2018YE\u2019 are supported with\nclosed = \u201cleft\u201d",
        "reset_index",
        "Y",
        "rfloordiv",
        "P",
        "level",
        "See floordiv",
        "rmod",
        "P",
        "level",
        "rmul",
        "P",
        "level",
        "rolling",
        "P",
        "method is ignored, step,\nwin_type, closed, on",
        "N for non-integer window, axis = 1,\nor min_periods = 0",
        "round",
        "Y",
        "rpow",
        "P",
        "level",
        "rsub",
        "P",
        "level",
        "rtruediv",
        "P",
        "level",
        "See truediv",
        "sample",
        "P",
        "N if weights or random_state is\nspecified when axis = 0",
        "searchsorted",
        "N",
        "sem",
        "N",
        "set_axis",
        "Y",
        "copy is ignored",
        "shift",
        "P",
        "freq",
        "No support for freq != None",
        "skew",
        "P",
        "N if axis == 1 or skipna == False\nor numeric_only=False",
        "sort_index",
        "P",
        "key",
        "N if given the key param,\nor MultiIndex",
        "sort_values",
        "P",
        "key, kind is ignored",
        "The kind parameter has no effect. Snowpark\npandas always uses a stable sort algorithm, while\npandas by default does not.",
        "squeeze",
        "Y",
        "std",
        "P",
        "N if ddof is not 0 or 1",
        "sub",
        "P",
        "level",
        "subtract",
        "P",
        "level",
        "sum",
        "Y",
        "swapaxes",
        "N",
        "swaplevel",
        "N",
        "tail",
        "Y",
        "take",
        "Y",
        "to_clipboard",
        "N",
        "to_csv",
        "P",
        "Supports writing to both local and snowflake stage.\nFilepath starting with @ is treated as\nsnowflake stage location.\nWriting to local file supports all parameters.\nWriting to snowflake state does not support\nfloat_format, mode, encoding,\nquoting, quotechar, lineterminator,\ndoublequote and decimal parameters.",
        "to_dict",
        "Y",
        "to_frame",
        "Y",
        "to_hdf",
        "N",
        "to_json",
        "N",
        "to_latex",
        "N",
        "to_list",
        "Y",
        "to_markdown",
        "N",
        "to_numpy",
        "Y",
        "copy is ignored",
        "to_period",
        "N",
        "to_pickle",
        "N",
        "to_sql",
        "N",
        "to_string",
        "N",
        "to_timestamp",
        "N",
        "to_xarray",
        "N",
        "tolist",
        "Y",
        "transform",
        "N",
        "transpose",
        "Y",
        "truediv",
        "P",
        "level",
        "Raises division by zero exception when right hand\nhand side contains at least one zero. pandas allows\ndivision by zero for non-object type Series and\nreturns +/-inf.",
        "truncate",
        "N",
        "tz_convert",
        "P",
        "axis, level, copy",
        "N if timezone format is not supported.\nOnly timezones listed in pytz.all_timezones are\nsupported. For example, UTC is supported but\nUTC+/-<offset>, such as, UTC+09:00 is not\nsupported.",
        "tz_localize",
        "P",
        "axis, level, copy\nambiguous, nonexistent",
        "N if timezone format is not supported.\nOnly timezones listed in pytz.all_timezones are\nsupported. For example, UTC is supported but\nUTC+/-<offset>, such as UTC+09:00, is not\nsupported.",
        "unique",
        "Y",
        "unstack",
        "P",
        "sort",
        "N for non-integer level.",
        "update",
        "Y",
        "value_counts",
        "P",
        "bins",
        "var",
        "P",
        "See std",
        "view",
        "N",
        "where",
        "P",
        "See mask",
        "xs",
        "N",
        "Was this page helpful?"
    ]
}