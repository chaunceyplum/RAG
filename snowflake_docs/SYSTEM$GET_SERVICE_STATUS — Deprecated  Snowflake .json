{
    "url": "https://docs.snowflake.com/en/sql-reference/functions/system_get_service_status",
    "title": "SYSTEM$GET_SERVICE_STATUS \u2014 Deprecated | Snowflake Documentation",
    "paragraphs": [
        "System functions (System Information)",
        "Deprecated Feature",
        "This function has been deprecated. Use the SHOW SERVICE CONTAINERS IN SERVICE command instead.",
        "Feature \u2014 Generally Available",
        "Available to accounts in AWS and Microsoft Azure commercial regions, with some exceptions. For more information, see Available regions.",
        "Retrieves the status of a\nSnowpark Container Services service.",
        "Required:",
        "Service name. If you omit the db_name and schema_name, the function uses the current database and schema.",
        "Optional:",
        "Number of seconds to wait for the service to reach a steady state (for example, READY) before returning the status. If the\nservice does not reach a steady state within the specified time, Snowflake returns the current state.",
        "If not specified, Snowflake returns the current state immediately.",
        "Default: 0 seconds",
        "Returns status information in a JSON array with one JSON object for each container in each service instance. The JSON fields are:",
        "status. Service container status. Currently supported status values include: PENDING, READY, FAILED and UNKNOWN.",
        "message. Provides details about the specific status. For example, when the status is PENDING, this field describes why.",
        "containerName. Container name.",
        "instanceId. Service instance ID.",
        "serviceName. Service name.",
        "image. URL of the image that is running.",
        "restartCount. Number of times Snowflake restarted the container. A higher restart count can indicate an unhealthy\nservice. For example, if your service code crashes, the container can exit. Snowflake then tries to restart the container.\nIn this case, to investigate, you can access the container log using these options:",
        "Use the SYSTEM$GET_SERVICE_LOGS function for live logs (the container is running).",
        "Use Event tables for persistent logs (useful when the container is no longer running).",
        "startTime. Time when the container started.",
        "The current role must have the MONITOR privilege on the service to get the status information.",
        "The following function retrieves status information for the \u201cecho_service\u201d service. The function specifies a 5-second timeout:",
        "Example outputs:",
        "Running one service instance that has one container. The function returns the container information as shown:",
        "instanceId is the service instance ID.  If you have two instances of this service running, the array includes two\nobjects in the output, providing container status for two separate service instances (the instanceId will be 0 and 1).",
        "Running one service instance that has three containers (as defined in the service specification). The function returns an\narray with three objects (one for each container):",
        "Because all these containers belong to the same service instance, the instanceId will be 0 for all containers.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}