{
    "url": "https://docs.snowflake.com/en/release-notes/bcr-bundles/2022_01_bundle",
    "title": "2022_01 Bundle | Snowflake Documentation",
    "paragraphs": [
        "This topic describes the following behavior changes (if any) for the month:",
        "Features that were deprecated.",
        "Bundled changes that were enabled.",
        "Other, non-bundled changes that were implemented.",
        "If you have any questions about these changes, please contact\nSnowflake Support.",
        "For details about the new features, enhancements, and fixes introduced this month, see March 2022.",
        "Important",
        "Unless otherwise noted, these changes are in the 2022_01 bundle, which was enabled by default in the 6.7 behavior change release.",
        "With this change, attempting to commit a transaction that has already been aborted returns an error message:",
        "If you executed a COMMIT statement in a transaction that was aborted (e.g. through a separate\nSYSTEM$ABORT_TRANSACTION call or because the session was idle), the statement appeared to succeed\nwith the following message:",
        "Statement executed successfully.",
        "However, the transaction itself had already been aborted.",
        "The output message for the COMMIT statement incorrectly implied that the transaction succeeded.",
        "If you execute a COMMIT statement in a transaction that has been aborted (e.g. through a separate SYSTEM$ABORT_TRANSACTION call or\nbecause the session has been idle), the statement fails with the error code 000670 and the following message:",
        "000670 (57014): COMMIT failed. Your transaction '<name>', id '<id>', was already aborted.",
        "The following column has been added to the output of the SHOW TAGS command:",
        "allowed_values: This new column specifies the string values that can be set when a tag is assigned to an object. If a tag does\nnot have any specified allowed_values, the column value is NULL.",
        "To help limit the impact of this change, the new column has been added as the last column in the output.",
        "The behavior of the SHOW USERS command has changed as follows:",
        "The SHOW USERS command limited the SQL output to 10,000 rows and supported only the following syntax:",
        "The SHOW USERS command can be used to return more than 10,000 rows and supports the following syntax:",
        "Where:",
        "TERSE optionally returns only the following subset of the output columns:",
        "name, created_on, display_name, first_name, last_name, email, org_identity, comment, has_password, has_rsa_public_key.",
        "Default: No value (all columns are included in the output).",
        "STARTS WITH 'name_string' optionally filters the command output based on the characters that appear at the beginning of\nthe object name. The string must be enclosed in single quotes and is case-sensitive. For example, the following clauses return\ndifferent results:",
        "... STARTS WITH 'B' ...",
        "... STARTS WITH 'b' ...",
        "Default: No value (no filtering is applied to the output).",
        "LIMIT rows [ FROM 'name_string' ] optionally limits the maximum number of rows returned, while also enabling \u201cpagination\u201d\nof the results. Note that the actual number of rows returned may be less than the specified limit (e.g. the number of existing\nobjects is less than the specified limit).",
        "The optional FROM 'name_string' subclause effectively serves as a \u201ccursor\u201d for the results. This enables fetching the\nspecified number of rows following the first row whose object name matches the specified string:",
        "The string must be enclosed in single quotes and is case-sensitive. In addition, the string does not have to include the full\nobject name; partial names are supported.",
        "Default: No value (no limit is applied to the output).",
        "By default, SHOW USERS still returns 10,000 rows as before. If your account has more than 10,000 users, you can run the command twice to\nreturn the users above the 10,000 limit:",
        "The first statement returns the first 10,000 users. The last row returned is a user with the username JOE.",
        "The second statement returns the next 10,000 users after JOE.",
        "The JSON output of the SYSTEM$EXTERNAL_TABLE_PIPE_STATUS\nand SYSTEM$PIPE_STATUS functions now include the following\nadditional string name/value pairs to improve insight into specific data loads, including\nerrors encountered during the loads:",
        "Name",
        "Description",
        "Notes",
        "oldestPendingFilePath",
        "Path to the oldest data file currently queued for processing. The timestamp when the file was added to the queue is returned in the existing oldestFileTimestamp property.",
        "lastIngestedTimestamp",
        "Timestamp when the most recent file was loaded successfully by Snowpipe into the destination table.",
        "SYSTEM$PIPE_STATUS only.",
        "lastIngestedFilePath",
        "Path of the file loaded at the timestamp specified in lastIngestedTimestamp.",
        "SYSTEM$PIPE_STATUS only.",
        "lastPipeErrorTimestamp",
        "Timestamp when compiling the COPY INTO statement in the pipe definition for execution last produced an error.",
        "SYSTEM$PIPE_STATUS only.",
        "lastPipeFaultTimestamp",
        "Timestamp when an internal Snowflake process error was last detected.",
        "lastPulledFromChannelTimestamp",
        "Timestamp when Snowpipe last pulled \u201ccreate object\u201d event notifications for the pipe from the Amazon Simple Queue Service (SQS) queue, Google Pub/Sub queue, or Microsoft Azure storage queue.",
        "lastForwardedFilePath",
        "Path of the data file identified in the last \u201ccreate object\u201d event message that was forwarded to the pipe.",
        "The following examples show sample output for common issues encountered by Snowpipe. The additional details in the\nfunction output can help you diagnose these and other issues with your data loads:",
        "Notification queue configured incorrectly:",
        "Snowpipe attempts to periodically pull \u201ccreate object\u201d event notifications for the pipe from the Amazon Simple Queue Service (SQS)\nqueue, Google Pub/Sub queue, or Microsoft Azure storage queue. A missing or outdated lastPulledFromChannelTimestamp value indicates\nthat Snowpipe has not been able to connect to the storage queue.",
        "If the lastPulledFromChannelTimestamp timestamp is recent, but numOutstandingMessagesOnChannel is 0, then Snowpipe can\nreceive event notifications from the queue, but no notifications were queued. This last issue can occur when no data files were\ncreated in the storage location or the subscription to the queue is misconfigured.",
        "Notification queue permission issue:",
        "The channelErrorMessage value indicates that Snowflake was not granted sufficient permissions to access the storage queue and\npull the event notifications.",
        "Mismatch in the paths specified in the pipe definition and event notification configuration:",
        "The lastForwardedMessageTimestamp timestamp is earlier than lastReceivedMessageTimestamp. This indicates that Snowpipe pulled\nat least one \u201ccreate object\u201d event message from the storage queue, but the message did not match the path defined in the pipe and\ntherefore was not forwarded to the pipe for processing.",
        "External storage location permission issue:",
        "The executionState value and error message indicate that Snowflake was not granted the minimum permissions on the storage location\n(i.e. Amazon S3 or Google Cloud Storage bucket or Microsoft Azure container) to access the data files in the storage location.",
        "Error compiling the COPY INTO <table> statement in the pipe definition:",
        "The executionState value and error message indicate that Snowpipe could not execute the COPY INTO <table> statement in the pipe\ndefinition to load the data files retrieved from the storage location.",
        "The following columns have been added to the ACCOUNT_USAGE.FUNCTIONS view to make it\nconsistent with the INFORMATION_SCHEMA.FUNCTIONS view:",
        "handler",
        "imports",
        "target_path",
        "To help limit the impact of this change, the new columns have been added as the last columns in the view.",
        "The following columns have been added to the INFORMATION_SCHEMA.FUNCTIONS view, as well\nas the output of the DESCRIBE FUNCTION command and GET_DDL function:",
        "request_translator: The name of the request translator JavaScript user-defined function, if it exists.",
        "response_translator: The name of the response translator JavaScript user-defined function, if it exists.",
        "\u200b\u200b\u200b\u200b\u200bRequest translators and response translators allow you to change the format of data sent to, and received from, remote services used\nby external functions. For more information, see Using request and response translators with data for a remote service.",
        "The created_on column has been removed from the output of the\nINFORMATION_SCHEMA.POLICY_REFERENCES table function.",
        "The following columns have been added to the output of the INFORMATION_SCHEMA.POLICY_REFERENCES table function:",
        "tag_name",
        "tag_database",
        "tag_schema",
        "policy_status",
        "These new columns can be used to discover policy associations on a column by the tag name.",
        "To help limit the impact of this change, these new columns have been added as the last columns in the output.",
        "The following column has been added to the ACCOUNT_USAGE.TAGS view:",
        "allowed_values: Specifies the string values that can be set when a tag is assigned to an object. If a tag does not have any\nspecified allowed_values, the column value is NULL.",
        "To help limit the impact of this change, the new column has been added as the last column in the view.",
        "The behavior of the INFORMATION_SCHEMA.TASK_HISTORY table function has changed as follows:",
        "By default, the function returned records for historic task runs within a time range that had no determined start date or time.\nDue to internal data cleanup activity, the time range was generally limited to the previous 14 days; however, in rare circumstances,\nthe period could extend further in the past.",
        "If the SCHEDULED_TIME_RANGE_START argument was specified in a query, the time range was limited to historic records from the previous\n7 days or less.",
        "The function returns records for historic task runs that started within the previous 7 days.",
        "Note that, as with the previous behavior, if the SCHEDULED_TIME_RANGE_START argument is specified in a query, the time range continues\nto be limited to historic records from the previous 7 days or less.",
        "The following column has been added to the output of the ACCOUNT_USAGE.TASK_HISTORY\nview and INFORMATION_SCHEMA.TASK_HISTORY table function:",
        "scheduled_from: Specifies the mechanism that prompted the task run. The only value returned in the column is SCHEDULE. This\nvalue indicates that the task run was initiated by the schedule in the task definition. For runs of child tasks in a task tree, the\ncolumn also returns SCHEDULE.",
        "The column was introduced to support future functionality.",
        "The owner of a warehouse (i.e. the role that has the OWNERSHIP privilege on the warehouse), or a higher role, can rename the warehouse\nusing the new web interface or the ALTER WAREHOUSE \u2026 RENAME command.",
        "The behavior when a warehouse is renamed has changed as follows:",
        "The warehouse name was displayed inconsistently in the following view columns:",
        "ACCOUNT_USAGE, READER_ACCOUNT_USAGE, and ORGANIZATION_USAGE",
        "WAREHOUSE_METERING_HISTORY.WAREHOUSE_HAME",
        "ACCOUNT_USAGE",
        "METERING_HISTORY.NAME",
        "Recent records in the views (2-3 hours before the warehouse name was changed) displayed the new name; however, older records displayed\nthe old name.",
        "The WAREHOUSE_NAME and NAME columns in these views display the new warehouse name for all records.",
        "Note",
        "This behavior change does not affect the following views and table functions, which already display the new warehouse name for all\nrecords in the WAREHOUSE_NAME column:",
        "ACCOUNT_USAGE",
        "WAREHOUSE_EVENTS_HISTORY view",
        "WAREHOUSE_LOAD_HISTORY view",
        "INFORMATION_SCHEMA",
        "WAREHOUSE_LOAD_HISTORY table function",
        "WAREHOUSE_METERING_HISTORY table function",
        "The error handling for stored procedures written in JavaScript has changed as follows:",
        "All errors thrown by JavaScript stored procedures had the same error code and SQLSTATE (100183 and P0000 respectively) and\nthe same generic error message (\"Execution error in stored procedure SP_NAME...\").",
        "The name of the property for accessing the stack trace was stackTraceTxt.",
        "For example, if a database object does not exist, the exception object contains the following:",
        "If your stored procedure did not catch the exception, calling the stored procedure produced the following output:",
        "If the stored procedure executes any queries (as most stored procedures do), and if the error occurs while executing the child query,\nthe error code and SQLSTATE of the child query is used.",
        "In addition, the name of the property for accessing the stack trace has been changed to stack. Although the stackTraceTxt\nproperty is still present with the behavior change enabled, stackTraceTxt will be removed in a future release.",
        "For example, if a database object doesn\u2019t exist, the exception object contains the following:",
        "If your stored procedure does not catch the exception, calling the stored procedure produces the following output:",
        "Was this page helpful?",
        "On this page",
        "Related info",
        "For more details about the individual releases in which these behavior changes were introduced, see:",
        "Releases"
    ]
}