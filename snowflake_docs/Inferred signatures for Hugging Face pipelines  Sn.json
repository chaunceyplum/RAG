{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-ml/model-registry/hugging-face",
    "title": "Inferred signatures for Hugging Face pipelines | Snowflake Documentation",
    "paragraphs": [
        "The Snowflake Model Registry automatically infers the signatures of Hugging Face pipelines that contain a single task from\nthe following list:",
        "conversational",
        "fill-mask",
        "question-answering",
        "summarization",
        "table-question-answering",
        "text2text-generation",
        "text-classification (alias sentiment-analysis)",
        "text-generation",
        "token-classification (alias ner)",
        "translation",
        "translation_xx_to_yy",
        "zero-shot-classification",
        "This topic describes the signatures of these types of Hugging Face pipelines, including a\ndescription and example of the required inputs and expected outputs. All inputs and outputs are Snowpark DataFrames.",
        "For general guidance about logging Hugging Face pipelines in the registry, see\nHugging Face pipeline.",
        "A pipeline whose task is conversational\nhas the following inputs and outputs.",
        "user_inputs: A list of strings that represent the user\u2019s previous and current inputs. The last one in the list is the\ncurrent input.",
        "generated_responses: A list of strings that represent the model\u2019s previous responses.",
        "Example:",
        "generated_responses: A list of strings that represent the model\u2019s previous and current responses. The last one in\nthe list is the current response.",
        "Example:",
        "A pipeline whose task is \u201cfill-mask\u201d\nhas the following inputs and outputs.",
        "inputs: A string where there is a mask to fill.",
        "Example:",
        "outputs: A string that contains a JSON representation of a list of objects, each of which may contain keys such\nas score, token, token_str, or sequence.  For details, see\nFillMaskPipeline.",
        "Example:",
        "A pipeline whose task is \u201cner\u201d or\n\u201ctoken-classification\u201d\nhas the following inputs and outputs.",
        "inputs: A string that contains the tokens to be classified.",
        "Example:",
        "outputs: A string that contains a JSON representation of a list of result objects, each of which may contain keys such\nas entity, score, index, word, name, start, or end.  For details, see\nTokenClassificationPipeline.",
        "Example:",
        "A pipeline whose task is \u201cquestion-answering\u201d,\nwhere top_k is either unset or set to 1, has the following inputs and outputs.",
        "question: A string that contains the question to answer.",
        "context: A string that may contain the answer.",
        "Example:",
        "score: Floating-point confidence score from 0.0 to 1.0.",
        "start: Integer index of the first token of the answer in the context.",
        "end: Integer index of the last token of the answer in the original context.",
        "answer: A string that contains the found answer.",
        "Example:",
        "A pipeline whose task is \u201cquestion-answering\u201d,\nwhere top_k is set and is larger than 1, has the following inputs and outputs.",
        "question: A string that contains the question to answer.",
        "context: A string that may contain the answer.",
        "Example:",
        "outputs: A string that contains a JSON representation of a list of result objects, each of which may contain keys such\nas score, start, end,  or answer.",
        "Example:",
        "A pipeline whose task is \u201csummarization\u201d,\nwhere return_tensors is False or unset, has the following inputs and outputs.",
        "documents: A string that contains text to summarize.",
        "Example:",
        "summary_text: A string that contains the generated summary, or, if num_return_sequences is greater than 1,\na string that contains a JSON representation of a list of results, each of which is a dictionary that contains fields, including summary_text.",
        "Example:",
        "A pipeline whose task is\n\u201ctable-question-answering\u201d\nhas the following inputs and outputs.",
        "query: A string that contains the question to be answered.",
        "table: A string that contains a JSON-serialized dictionary in the form {column -> [values]} representing the table\nthat may contain an answer.",
        "Example:",
        "answer: A string that contains a possible answer.",
        "coordinates: A list of integers that represent the coordinates of the cells where the answer was located.",
        "cells: A list of strings that contain the content of the cells where the answer was located.",
        "aggregator: A string that contains the name of the aggregator used.",
        "Example:",
        "A pipeline whose task is\n\u201ctext-classification\u201d or \u201csentiment-analysis\u201d,\nwhere top_k is not set or is None,\nhas the following inputs and outputs.",
        "text: A string to classify.",
        "text_pair: A string to classify along with text, and which is used with models that compute text similarity. Leave empty if the model does not use it.",
        "Example:",
        "label: A string that represents the classification label of the text.",
        "score: A floating-point confidence score from 0.0 to 1.0.",
        "Example:",
        "A pipeline whose task is\n\u201ctext-classification\u201d or \u201csentiment-analysis\u201d,\nwhere top_k is set to a number,\nhas the following inputs and outputs.",
        "Note",
        "A text classification task is considered multiple-output if top_k is set to any number, even if that number is 1.\nTo get a single output, use a top_k value of None.",
        "text: A string to classify.",
        "text_pair: A string to classify along with text, which is used with models that compute text similarity. Leave empty if the model does not use it.",
        "Example:",
        "outputs: A string that contains a JSON representation of a list of results, each of which contains fields that include label and score.",
        "Example:",
        "A pipeline whose task is\n\u201ctext-generation\u201d,\nwhere return_tensors is False or unset,\nhas the following inputs and outputs.",
        "Note",
        "Text generation pipelines where return_tensors is True are not supported.",
        "inputs: A string that contains a prompt.",
        "Example:",
        "outputs: A string that contains a JSON representation of a list of result objects, each of which contains fields that include generated_text.",
        "Example:",
        "A pipeline whose task is\n\u201ctext2text-generation\u201d,\nwhere return_tensors is False or unset,\nhas the following inputs and outputs.",
        "Note",
        "Text-to-text generation pipelines where return_tensors is True are not supported.",
        "inputs: A string that contains a prompt.",
        "Example:",
        "generated_text : A string that contains the generated text if num_return_sequences is 1, or if num_return_sequences is\ngreater than 1, a string representation\nof a JSON list of result dictionaries that contain fields including generated_text .",
        "Example:",
        "A pipeline whose task is\n\u201ctranslation\u201d,\nwhere return_tensors is False or unset,\nhas the following inputs and outputs.",
        "Note",
        "Translation generation pipelines where return_tensors is True are not supported.",
        "inputs: A string that contains text to translate.",
        "Example:",
        "translation_text: A string that represents generated translation if num_return_sequences is 1, or a string\nrepresentation of a JSON list of result dictionaries, each containing fields that include translation_text.",
        "Example:",
        "A pipeline whose task is\n\u201czero-shot-classification\u201d\nhas the following inputs and outputs.",
        "sequences: A string that contains the text to be classified.",
        "candidate_labels: A list of strings that contain the labels to be applied to the text.",
        "Example:",
        "sequence: The input string.",
        "labels: A list of strings that represent the labels that were applied.",
        "scores: A list of floating-point confidence scores for each label.",
        "Example:",
        "Was this page helpful?",
        "On this page"
    ]
}