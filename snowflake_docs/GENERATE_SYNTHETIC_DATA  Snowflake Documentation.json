{
    "url": "https://docs.snowflake.com/en/sql-reference/stored-procedures/generate_synthetic_data",
    "title": "GENERATE_SYNTHETIC_DATA | Snowflake Documentation",
    "paragraphs": [
        "Preview Feature \u2014 Open",
        "Available to all accounts that are Enterprise Edition (or higher).",
        "To inquire about upgrading, please contact Snowflake Support.",
        "Generates synthetic data in an output table based on sample data from an input table. You can generate more than one output table per run.",
        "The procedure returns a table that contains metrics about the generated data, such as the coefficient of difference (similarity) between the\nsource data and the generated data.",
        "This stored procedure uses caller\u2019s rights to generate the output table.",
        "The name of the input table from which to generate synthetic data.",
        "If the identifier contains spaces or special characters, the entire string must be enclosed in double quotes.\nIdentifiers enclosed in double quotes are also case-sensitive.",
        "For more information, see Identifier requirements.",
        "You can specify the fully-qualified name or the relative name of the table. If using a relative name, check the database and schema that\nare in use for the session. External and Iceberg tables are not supported.",
        "If the table does not exist or cannot be accessed, Snowflake returns an error message. See Using synthetic data in Snowflake for more\ninput table requirements.",
        "The fully-qualified name of the output table to store the synthetic data. The generated table will have the same permissions and policies\nas if the user had called CREATE TABLE with default values.",
        "In addition, the identifier must start with an alphabetic character and cannot contain spaces or special characters unless the\nentire identifier string is enclosed in double quotes (for example, \"My object\"). Identifiers enclosed in double quotes are also\ncase-sensitive.",
        "For more information, see Identifier requirements.",
        "You can specify the fully qualified name or the relative name of the output table. If using a relative name, check the database and\nschema that are in use for the session prior to calling this stored procedure.",
        "If the output table already exists, specify 'replace_output_tables': True to overwrite the output table, otherwise an error\nmessage occurs.",
        "A list of column names in the input table that serve as join keys. Data in columns specified as join keys be label encoded: it will be\nconverted into a simple label, such as \u201c1\u201d, \u201c2\u201d, \u201c3\u201d. The format and cardinality (number of values) of join\nkeys will be consistent for all joined columns so that you can execute joins on the specified columns in the generated tables.",
        "Every specified column must exist in the input table.",
        "Default: [] (empty list)",
        "Specifies whether to use a privacy filter when creating the synthetic data.",
        "Uses the built-in privacy filter to remove rows from the target table that are too similar to the input table.",
        "Does not use the built-in privacy filter to remove rows from the output table.",
        "Default: False",
        "For more information, see Input table requirements.",
        "Specifies whether to overwrite the output synthetic data table when creating the synthetic data.",
        "Overwrites the output table.",
        "Does not overwrite the output table.",
        "Default: False",
        "Column Name",
        "Data Type",
        "Description",
        "created_on",
        "TIMESTAMP",
        "Time the synthetic data was generated.",
        "table_name",
        "VARCHAR",
        "Name of the synthetic table.",
        "table_schema",
        "VARCHAR",
        "Schema name of the synthetic table.",
        "table_database",
        "VARCHAR",
        "Database name of the synthetic table.",
        "columns",
        "VARCHAR",
        "A pair of columns in the synthetic table.",
        "source_table_id",
        "NUMBER",
        "Internal/system-generated identifier of the input table.",
        "source_table_name",
        "VARCHAR",
        "Name of the input table.",
        "source_table_schema",
        "VARCHAR",
        "Schema name of the input table.",
        "source_table_database",
        "VARCHAR",
        "Database name of the input table.",
        "source_columns",
        "VARCHAR",
        "Names of the source columns.",
        "metric_type",
        "ENUM",
        "correlation_coefficient_difference - Calculated as the absolute value of the correlation coefficient between two non-join\ncolumns in the source table and the same two columns in the generated data.",
        "Currently, correlation_coefficient_difference is the only supported metric. This is the difference between the correlation\ncoefficient of every combination of columns in the input table and the same coefficient in the generated data. Each row represents\nthe correlation coefficient difference between one combination of columns. The column name pair is found in these columns:\ncolumns and source_columns.",
        "metric_value",
        "NUMBER",
        "Value of the metric.",
        "To generate synthetic data, you must use a role with each the following grants:",
        "USAGE on the warehouse that you want to use for queries.",
        "SELECT on the input table from which you want to generate synthetic data.",
        "USAGE on the database and schema that contain the input table, and on the database that contains the output table.",
        "CREATE TABLE on the schema that contains the output table.",
        "OWNERSHIP on the output tables. The simplest way to do this is by granting OWNERSHIP to the schema where the output table is\ngenerated. (However, if someone has applied a FUTURE GRANT on this schema, table ownership will be silently overridden \u2013 that is,\nGRANT OWNERSHIP ON FUTURE TABLES IN SCHEMA db.my_schema TO ROLE some_role will automatically grant OWNERSHIP to some_role on any\nnew tables created in schema my_schema.)",
        "All users can access the SNOWFLAKE.DATA_PRIVACY.GENERATE_SYNTHETIC_DATA stored procedure. Access is made available using the\nSNOWFLAKE.CORE_VIEWER database role, which is granted to the PUBLIC role.",
        "The JSON key values must be lowercase.",
        "You must accept the Anaconda terms and conditions in your Snowflake account in order to enable this\nfeature.",
        "For additional requirements, see Requirements.",
        "This example generates synthetic data from an input table containing medical information (blood type, gender, age, and ethnicity). The\nresponse shows the closeness in data between the source and generated tables. The generated synthetic data table is not shown.",
        "(The previous example also could have omitted the columns field entirely.)",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}