{
    "url": "https://docs.snowflake.com/en/developer-guide/native-apps/connector-sdk/flow/ingestion-management/overview",
    "title": "Ingestion management | Snowflake Documentation",
    "paragraphs": [
        "Preview Feature \u2014 Open",
        "Available to accounts in all regions in all cloud providers (including government regions). For details, contact your Snowflake representative.",
        "After the connector is configured it can start ingesting the data.\nHowever, usually some more information is needed before it can ingest the data from the source system.\nMost of the systems persist the data with at least some granularity, be it tables, repositories, files, or reports.\nThe Snowflake Native SDK for Connectors uses a term resource regardless of the name in the original system.\nTo identify resources and customize settings for their ingestion, resource_ingestion_definitions are being used. Additionally,\nthe actual process of ingestion is organized into ingestion_processes, which consist of multiple ingestion_runs.\nThis abstraction makes it easier to track, schedule and differentiate processes.",
        "This section requires at least the following SQL files to be executed during native app installation:",
        "ingestion/ingestion_management.sql",
        "ingestion/ingestion_definitions_view.sql",
        "ingestion/ingestion_process.sql",
        "ingestion/ingestion_run.sql",
        "ingestion/resource_ingestion_definition.sql",
        "Resource ingestion definition is a generic entity that contains the definition of the source data in the source system.\nTo keep it as generic as possible the system specific options are persisted as variants\nin the underlying STATE.RESOURCE_INGESTION_DEFINITION table. However, the Java definition of the repository ResourceIngestionDefinitionRepository\nis a generic interface to have better control over typing.",
        "Since most of the resource ingestion definition can be customized by during the implementation,\nthen it is up to the developer to decide how to use the generic fields and then make use of them during ingestion.",
        "The most important customizable properties of the resource ingestion definition are:",
        "parent_id",
        "This optional parameter allows linking resource definitions with each other, for example, to inherit a part of the configuration.",
        "resource_id",
        "This variant should allow the identification of a resource in the source system, it should be unique.",
        "ingestion_configurations",
        "This property actual configuration of the ingestion, each definition can have multiple configurations,\nfor example if for some reason the same resource should be ingested at two different schedules or saved into multiple sink tables.\nThis property has some required fields inside of it, but still allows some flexibility when it comes to defining custom configuration\nand destination of the data.",
        "resource_metadata",
        "This property should contain any additional information that is needed, but does not fit into above mentioned fields.",
        "Ingestion process is an entity representing enabled process of ingesting a defined resource. It is created once a resource is added or enabled and should be completed\nonce it\u2019s deleted or disabled. In a way it is kind of like a background process in the operating system, it can be alive but not necessarily doing any work at the particular moment.\nWhenever the ingestion is actually running it can be transitioned to IN_PROGRESS state, otherwise it can remain in SCHEDULED state.\nWhen dispatching work scheduler retrieves all the SCHEDULED processes and runs ingestion for them.",
        "The ingestion process can be also used to define different types of ingestion, for example, say that on a daily basis connector loads some data,\nbut for some reason some old data is corrupted and needs to be reloaded. If that\u2019s the case then a new process type can be introduced, for example RELOAD.\nThen scheduler can have custom logic to perform different operations for different types of processes.",
        "Ingestion run is another entity to store information about the past and ongoing ingestion. However, this data is more granular than the ingestion_process itself.\nFirst of all, ingestion run should be considered as a log data. Secondly, ingestion_run is an entry describing just a single invocation during a long running process.\nSo if a resource is ingested once a day, then every day there should be a new ingestion run entry. All of those entries will be linked with the single process.",
        "Resource creation process is used to define and schedule an ingestion of data from a source system.\nIt creates a resource ingestion definition record and corresponding ingestion processes if a given resource should be initially enabled.",
        "For more information, see Create Resource.",
        "Configured resources definitions can be examined in the PUBLIC.INGESTION_DEFINITIONS view. However, this view only returns basic information about each resource.\nAll the custom configurations are not visible to the end user, especially because some of them can be generated internally by the connector\u2019s logic.",
        "The disabling a resource step is used to stop ingesting data for a given resource.\nIt finishes active ingestion processes and marks a resource ingestion definition as disabled.",
        "For more information, see Disable Resource.",
        "Enabling a resource is used to start ingesting data for a given resource.\nIt creates new ingestion processes and marks a resource ingestion definition as enabled.",
        "For more information, see Enable Resource.",
        "Updating a resource is used to change a configuration of ingestion for a given resource.\nIt modifies a resource ingestion definition and finishes or creates new ingestion processes.",
        "For more information, see Update Resource.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}