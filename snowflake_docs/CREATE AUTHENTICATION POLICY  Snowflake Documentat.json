{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-authentication-policy",
    "title": "CREATE AUTHENTICATION POLICY | Snowflake Documentation",
    "paragraphs": [
        "Creates a new authentication policy in the current or specified schema or replaces an existing authentication policy. You can use\nauthentication policies to define authentication controls and security requirements for accounts or users.",
        "ALTER AUTHENTICATION POLICY, DESCRIBE AUTHENTICATION POLICY, DROP AUTHENTICATION POLICY, SHOW AUTHENTICATION POLICIES",
        "Specifies the identifier for the authentication policy. If the identifier contains spaces or special\ncharacters, you must enclose the string in double quotation marks. Identifiers enclosed in double quotation marks are case-sensitive. The\nidentifier must meet the identifier requirements.",
        "Caution",
        "Restricting by authentication method can have unintended consequences, such as blocking driver connections or third-party integrations.",
        "A list of authentication methods that are allowed during login. This parameter accepts one or more of the following values:",
        "Allow all authentication methods.",
        "Allows SAML2 security integrations. If SAML is\npresent, an SSO login option appears. If SAML is not present, an SSO login option does not appear.",
        "Allows users to authenticate using username and password.",
        "Allows External OAuth.",
        "Allows Key pair authentication.",
        "Default: ALL.",
        "A list of authentication methods that enforce multi-factor authentication (MFA) during login. Authentication methods not listed in this\nparameter do not prompt for multi-factor authentication.",
        "The following authentication methods support MFA:",
        "SAML",
        "PASSWORD",
        "This parameter accepts one or more of the following values:",
        "Prompts users for MFA, if they are enrolled in MFA, when authenticating with SAML2 security integrations.",
        "Prompts users for MFA, if they are enrolled in MFA, when authenticating with a username and password.",
        "Default: ('PASSWORD', 'SAML').",
        "Determines whether a user must enroll in multi-factor authentication.",
        "Enforces users to enroll in MFA. If this value is used, then the CLIENT_TYPES parameter must include\nSNOWFLAKE_UI, because Snowsight is the only place users can\nenroll in multi-factor authentication (MFA).",
        "Users can choose whether to enroll in MFA.",
        "Default: OPTIONAL.",
        "A list of clients that can authenticate with Snowflake. If a client tries to connect, and the client is not one of the valid\nCLIENT_TYPES, then the login attempt fails.",
        "The CLIENT_TYPES property of an authentication policy is a best effort method to block user logins based on specific clients. It should not be used as the sole control to establish a security boundary.",
        "This parameter accepts one or more of the following values:",
        "Allow all clients to authenticate.",
        "Snowsight or Classic Console, the Snowflake web interfaces.",
        "Caution",
        "If SNOWFLAKE_UI is not included in the CLIENT_TYPES list, MFA enrollment does not work.",
        "Drivers allow access to Snowflake from applications written in\nsupported languages. For example, the Go,\nJDBC, .NET drivers, and\nSnowpipe Streaming.",
        "Caution",
        "If DRIVERS is not included in the CLIENT_TYPES list, automated ingestion may stop working.",
        "A command-line client for connecting to Snowflake.",
        "Default: ALL.",
        "A list of security integrations the authentication policy is associated with. This parameter has no effect when SAML or\nOAUTH are not in the AUTHENTICATION_METHODS list.",
        "All values in the SECURITY_INTEGRATIONS list must be compatible with the values in the AUTHENTICATION_METHODS list. For\nexample, if SECURITY_INTEGRATIONS contains a SAML security integration, and AUTHENTICATION_METHODS contains\nOAUTH, then you cannot create the authentication policy.",
        "Allow all security integrations.",
        "Default: ALL.",
        "Specifies a description of the policy.",
        "A role used to execute this SQL command must have the following\nprivileges at a minimum:",
        "Privilege",
        "Object",
        "Notes",
        "CREATE AUTHENTICATION POLICY",
        "Schema",
        "Only the SECURITYADMIN role, or a higher role, has this privilege by default. The privilege can be granted to additional roles as needed.",
        "The USAGE privilege on the parent database and schema are required to perform operations on any object in a schema.",
        "For instructions on creating a custom role with a specified set of privileges, see Creating custom roles.",
        "For general information about roles and privilege grants for performing SQL actions on\nsecurable objects, see Overview of Access Control.",
        "After creating an authentication policy, you must use the ALTER ACCOUNT or\nALTER USER command to set it on an account or user before Snowflake enforces the policy.",
        "If you want to update an existing authentication policy and need to see the definition of the policy, run the\nDESCRIBE AUTHENTICATION POLICY command or GET_DDL function.",
        "CREATE OR REPLACE <object> statements are atomic. That is, when an object is replaced, the old object is deleted and the new object is created in a single transaction.",
        "Create an authentication policy named restrict_client_types_policy that only allows access through Snowsight or the\nClassic Console:",
        "For more examples, see Authentication policies.",
        "Was this page helpful?",
        "On this page"
    ]
}