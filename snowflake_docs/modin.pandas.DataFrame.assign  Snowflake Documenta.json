{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/reference/python/1.26.0/modin/pandas_api/modin.pandas.DataFrame.assign",
    "title": "modin.pandas.DataFrame.assign | Snowflake Documentation",
    "paragraphs": [
        "Assign new columns to a DataFrame.",
        "Returns a new object with all original columns in addition to new ones. Existing\ncolumns that are re-assigned will be overwritten.",
        "**kwargs (dict of {str: callable or Series}) \u2013 The column names are the keywords. If the values are callable, they are computed\non the DataFrame and assigned to the new columns. The callable must not change input\nDataFrame (though Snowpark pandas doesn\u2019t check it). If the values are not callable,\n(e.g. a Series, scalar, or array), they are simply assigned.",
        "A new DataFrame with the new columns in addition to all the existing columns.",
        "DataFrame",
        "Notes",
        "Assigning multiple columns within the same assign is possible. Later items in **kwargs\nmay refer to newly created or modified columns in df; items are computed and assigned into df in order.",
        "If an array that of the wrong length is passed in to assign, Snowpark pandas will either truncate the array, if it is too long,\nor broadcast the last element of the array until the array is the correct length if it is too short. This differs from native pandas,\nwhich will error out with a ValueError if the length of the array does not match the length of df.\nThis is done to preserve Snowpark pandas\u2019 lazy evaluation paradigm.",
        "Examples",
        "Was this page helpful?"
    ]
}