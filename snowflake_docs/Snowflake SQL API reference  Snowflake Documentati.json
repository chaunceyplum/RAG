{
    "url": "https://docs.snowflake.com/en/developer-guide/sql-api/reference",
    "title": "Snowflake SQL API reference | Snowflake Documentation",
    "paragraphs": [
        "This topic documents the operations, requests, and responses for the SQL API.",
        "To submit one or more SQL statements for execution, send a POST request to /api/v2/statements. You can specify that the\nstatement should be executed asynchronously.",
        "Parameter",
        "Description",
        "requestId",
        "(Optional) Unique ID (a UUID) of the API request. See Resubmitting a request to execute SQL statements.",
        "async",
        "(Optional) Set to true to execute the statement asynchronously and return the statement handle.",
        "If the parameter is not specified or is set to false, a statement is executed and the results are returned if the\nexecution is completed in 45 seconds. If the statement execution takes longer to complete, the statement handle is\nreturned.",
        "nullable",
        "(Optional) Set to false to return a SQL NULL value as the string \"null\", rather than as the value null.",
        "Note",
        "You cannot specify this parameter in a GET request.",
        "By default, SQL NULL values are returned as the value null:",
        "Setting this query parameter to false (e.g. /api/v2/statements?nullable=false returns a SQL NULL value as the string\n\"null\":",
        "The request must include the headers listed in Request headers for all operations.",
        "(Required) The request body must contain the object specified in Body of the POST request to /api/v2/statements/.",
        "This operation can return the response codes listed below.",
        "Code",
        "Description",
        "200",
        "The statement was executed successfully.",
        "For this response code, the response can have the following headers:",
        "Link",
        "If a single SQL statement was submitted in the request, the body of the response contains a\nResultSet object containing the requested data.",
        "Note",
        "If the code field in the response is set to 391908, the result set is too large, . and the\nresponse does not include the entire result set.",
        "The following is an example of a response for a single SQL statement in which the results are returned in a single\npartition. {handle} is the statement handle and {id1}, {id2}, and {id3} are uniquely generated request IDs:",
        "The following is an example of a response for a single SQL statement in which the results need to be returned in multiple\npartitions, where {handle} is the statement handle and {id1}, {id2}, {id3}, and {id4} are uniquely\ngenerated request IDs:",
        "If multiple SQL statements were submitted in the request, the body of the response contains a\nResultSet object with details about the status of the execution of the multiple\nstatements.",
        "In this case, the response does not contain the requested data. Instead, the data field just contains the message\n\u201cMultiple statements executed successfully\u201d.",
        "The response contains the statementHandles field, which is an array of statement handles that you can use to\nretrieve the results of the individual statements.",
        "The following is an example of a response for a request that specifies multiple SQL statements, where:",
        "{handle} is the statement handle for the set of statements.",
        "{handle1}, {handle2}, and {handle3} are the handles for the individual SQL statements in the request.",
        "{id1}, {id2}, and {id3} are uniquely generated request IDs:",
        "202",
        "The execution of the statement is still in progress. Use\nGET /api/v2/statements/{statementHandle} to check the status of the statement execution.\nSee GET /api/v2/statements/{statementHandle} for details.",
        "The body of the response contains a QueryStatus object with details about the\nstatus of the statement execution.",
        "The following is an example of a response:",
        "408",
        "The execution of the statement exceeded the timeout period. The execution of the statement was cancelled.",
        "The body of the response contains a QueryStatus object with details about the\ncancellation of the statement execution.",
        "422",
        "An error occurred when executing the statement. Check the error code and error message for details.",
        "The body of the response contains a QueryFailureStatus object with\ndetails about the error.",
        "The following is an example of a response:",
        "For the other response codes returned by this operation, see Response codes for all operations.",
        "To check the status of the execution of a statement, send a GET request to /api/v2/statements/{statementHandle}. If the\nstatement has been executed successfully, the body of the response includes a ResultSet\nobject containing the requested data.",
        "Parameter",
        "Description",
        "statementHandle",
        "(Required) The handle of the statement that you want to check. You can get this handle from the\nQueryStatus object returned in the response to the\nrequest to execute the statement.",
        "requestId",
        "(Optional) Unique ID (a UUID) of the API request. See Resubmitting a request to execute SQL statements.",
        "partition",
        "(Optional) The partition number to return. The size of each partition is determined by Snowflake.",
        "See Getting the results from the response for more information.",
        "The request must include the headers listed in Request headers for all operations.",
        "This operation can return the response codes listed below.",
        "Code",
        "Description",
        "200",
        "The statement was executed successfully.",
        "For this response code, the response can have the following headers:",
        "Link",
        "The body of the response has a ResultSet object containing the requested data.",
        "The following is an example of a response, where {handle} is the statement handle and {id1}, {id2}, {id3},\n{id4}, and {id5}} are uniquely generated request IDs:",
        "202",
        "The execution of the statement is still in progress. Repeat the request to check the status of the statement execution.",
        "The body of the response contains a QueryStatus object with details about the\nstatus of the statement execution.",
        "The following is an example of a response:",
        "422",
        "An error occurred when executing the statement. Check the error code and error message for details.",
        "The body of the response contains a QueryFailureStatus object with\ndetails about the error.",
        "For the other response codes returned by this operation, see Response codes for all operations.",
        "To cancel the execution of a statement, send a POST request to /api/v2/statements/{statementHandle}/cancel.",
        "Parameter",
        "Description",
        "statementHandle",
        "(Required) The handle of the statement that you want to check. You can get this handle from the\nQueryStatus object returned in the response to the\nrequest to execute the statement.",
        "Parameter",
        "Description",
        "requestId",
        "(Optional) Unique ID (a UUID) of the API request. See Resubmitting a request to execute SQL statements.",
        "The request must include the headers listed in Request headers for all operations.",
        "This operation can return the response codes listed below.",
        "Code",
        "Description",
        "200",
        "Execution of the statement was cancelled successfully.",
        "The body of the response contains a CancelStatus object that contains\ninformation about the cancellation of the statement.",
        "The following is an example of a response:",
        "422",
        "An error occurred when executing the statement. Check the error code and error message for details.",
        "The body of the response contains a QueryFailureStatus object with\ndetails about the error.",
        "The following is an example of a response:",
        "For the other response codes returned by this operation, see Response codes for all operations.",
        "The following request headers are apply to all operations:",
        "Header",
        "Required or Optional?",
        "Description",
        "Authorization",
        "Required",
        "Set this to Bearer, followed by the token used to authenticate to Snowflake.",
        "For key pair authentication, use the generated JWT as the token.",
        "For OAuth, use the generated OAuth token as the token.",
        "For example:",
        "Authorization: Bearer token",
        "See Authenticating to the server.",
        "Accept",
        "Required",
        "Set this to the list of media types (MIME types) that are acceptable in the body of the response. Include the type\napplication/json (or, if all types are acceptable, set this to */*).",
        "Content-Type",
        "Required",
        "Set this to the media type (MIME type) of the body of the request. Set this to application/json.",
        "User-Agent",
        "Required",
        "Set this to the name and version of your application (e.g. applicationName/applicationVersion). You must use a value\nthat complies with RFC 7231.",
        "X-Snowflake-Authorization-Token-Type",
        "Required for key pair authentication",
        "Optional for OAuth",
        "If you are using key pair authentication, this header is required.\nYou must set this header to KEYPAIR_JWT.",
        "If you are using OAuth for authentication, this header is optional. (If you\nchoose to set this header, set it to OAUTH.)",
        "The body of a POST request to the /api/v2/statements/ endpoint (see\nPOST /api/v2/statements) is a JSON object that you use to specify the SQL statement to execute, the\nstatement context, and the format of data in the result set. You use this object in the body of a request to execute a statement.",
        "Field",
        "Description",
        "statement",
        "(Optional) SQL statement to execute. See Limitations of the SQL API for the lists of statements that are supported\nand not supported.",
        "Type: string",
        "timeout",
        "(Optional) Timeout in seconds for statement execution. If the execution of a statement takes longer than the specified\ntimeout, the execution is automatically canceled. To set the timeout to the maximum value (604800 seconds), set timeout to\n0. If this field is not set, the timeout specified by the STATEMENT_TIMEOUT_IN_SECONDS parameter is used.",
        "Type: 64-bit signed integer",
        "Example: 10",
        "database",
        "(Optional) Database in which the statement should be executed. The value in this field is case-sensitive.",
        "If you omit this field, the SQL API uses the database from the value of the DEFAULT_NAMESPACE\nproperty of the user.",
        "Type: string",
        "Example: TESTDB",
        "schema",
        "(Optional) Schema in which the statement should be executed.  The value in this field is case-sensitive.",
        "If you omit this field, the SQL API uses the schema from the value of the DEFAULT_NAMESPACE\nproperty of the user.",
        "Type: string",
        "Example: TESTSCHEMA",
        "warehouse",
        "(Optional) Warehouse to use when executing the statement.  The value in this field is case-sensitive.",
        "If you omit this field, the SQL API uses the value of the DEFAULT_WAREHOUSE\nproperty of the user.",
        "Type: string",
        "Example: TESTWH",
        "role",
        "(Optional) Role to use when executing the statement.  The value in this field is case-sensitive.",
        "If you omit this field, the SQL API uses the value of the DEFAULT_ROLE\nproperty of the user.",
        "Type: string",
        "Example: TESTROLE",
        "bindings",
        "(Optional) Values of bind variables in the SQL statement. When executing the\nstatement, Snowflake replaces placeholders (? and :name) in the statement with these specified values.",
        "Note that the format of this field may change for the GA release of the SQL API.",
        "Type: object",
        "Example:",
        "parameters",
        "(Optional) Session parameters that you want to set for this request.",
        "Type: object (statements_parameters)",
        "The following is an example of the body object:",
        "statements_parameters is a JSON object that you use to specify the session parameters\nthat you want to set for this request. This object should be in the parameters field of the body of the POST\nrequest to the /api/v2/statements endpoint (see Body of the POST request to /api/v2/statements/).",
        "Note",
        "The SQL API only supports the session parameters listed in the following table.",
        "Field",
        "Description",
        "binary_output_format",
        "(Optional) Specifies format for VARCHAR values returned as output by BINARY-to-VARCHAR conversion functions. For\ndetails, see BINARY_OUTPUT_FORMAT.",
        "Type: string",
        "Example: HEX",
        "client_result_chunk_size",
        "(Optional) Specifies the maximum size of each set (or chunk) of query results to download (in MB).\nFor details, see CLIENT_RESULT_CHUNK_SIZE.",
        "Type: integer",
        "Example: 100",
        "date_output_format",
        "(Optional) Specifies the display format for the DATE data type. For details,\nsee DATE_OUTPUT_FORMAT. See\nFormatting the Output of Query Results for details on using parameters\nto determine the output format of query results.",
        "Type: string",
        "Example: YYYY-MM-DD",
        "multi_statement_count",
        "(Required when specifying more than one SQL statement in a request) Specifies the number of SQL statements to be submitted\nin a request when using the multi-statement capability. Valid values are:",
        "0: Indicates that a variable number of statements can be included in the request.",
        "1: Indicates that a single SQL statment can be included in the request. This is the default\nvalue used if you do not specify the MULTI_STATEMENT_COUNT field.",
        "> 1: Indicates the number of SQL statements submitted in the request. This number must match\nthe number of statements specified in the statement field.",
        "Type: string",
        "Example: 2",
        "query_tag",
        "(Optional) Query tag that you want to associate with the SQL statement. For details, see\nQUERY_TAG parameter.",
        "Type: string",
        "Example: tag-1234",
        "rows_per_resultset",
        "(Optional) Specifies the maximum number of rows returned in a result set, with 0 (default) meaning no maximum. For details, see\nROWS_PER_RESULTSET parameter.",
        "Type: integer",
        "Example: 200",
        "time_output_format",
        "(Optional) Specifies the display format for the TIME data type. For details, see\nTIME_OUTPUT_FORMAT. See\nFormatting the Output of Query Results for details on using parameters\nto determine the output format of query results.",
        "Type: string",
        "Example: HH24:MI:SS",
        "timestamp_ltz_output_format",
        "(Optional) Specifies the display format for the TIMESTAMP_LTZ data type. For details,\nsee TIMESTAMP_LTZ_OUTPUT_FORMAT. See\nFormatting the Output of Query Results for details on using parameters\nto determine the output format of query results.",
        "Type: string",
        "Example: YYYY-MM-DD HH24:MI:SS.FF3",
        "timestamp_ntz_output_format",
        "(Optional) Specifies the display format for the TIMESTAMP_NTZ data type. For details,\nsee TIMESTAMP_NTZ_OUTPUT_FORMAT. See\nFormatting the Output of Query Results for details on using parameters\nto determine the output format of query results.",
        "Type: string",
        "Example: YYYY-MM-DD HH24:MI:SS.FF3",
        "timestamp_output_format",
        "(Optional) Specifies the display format for the TIMESTAMP data type alias. For details,\nsee TIMESTAMP_OUTPUT_FORMAT. See\nFormatting the Output of Query Results for details on using parameters\nto determine the output format of query results.",
        "Type: string",
        "Example: YYYY-MM-DD HH24:MI:SS.FF3 TZHTZM",
        "timestamp_tz_output_format",
        "(Optional) Specifies the display format for the TIMESTAMP_TZ data type. For details,\nsee TIMESTAMP_TZ_OUTPUT_FORMAT. See\nFormatting the Output of Query Results for details on using parameters\nto determine the output format of query results.",
        "Type: string",
        "Example: YYYY-MM-DD HH24:MI:SS.FF3",
        "timezone",
        "(Optional) Time zone to use when executing the statement. For details, see\nTIMEZONE parameter.",
        "Type: string",
        "Example: america/los_angeles",
        "use_cached_result",
        "(Optional) Whether query results can be reused between successive invocations of the same query as long as the original result\nhas not expired. For details, see\nUSE_CACHED_RESULT parameter",
        "Type: string",
        "Example: true",
        "This section lists the response codes that apply to all operations.",
        "Code",
        "Description",
        "400",
        "Bad Request.",
        "The request payload is invalid or malformed. This happens if the application didn\u2019t send the correct request payload.\nThe response body may include the error code and message indicating the actual cause. The application must reconstruct\nthe request body for retry.",
        "The following is an example of a response:",
        "401",
        "Unauthorized.",
        "The request is not authorized. This happens if the attached access token is invalid or missing. The response body may\ninclude the error code and message indicating the actual cause, e.g., expired, invalid token. The application must obtain a\nnew access token for retry.",
        "See Authenticating to the server.",
        "The following is an example of a response:",
        "403",
        "Forbidden.",
        "The request is forbidden. This happens if the request is made even if the API is not enabled.",
        "404",
        "Not Found.",
        "The request endpoint is not valid. This happens if the API endpoint is wrong. For example, if the application requests\n/api/v2/hello, which does not exist, the server returns this code.",
        "405",
        "Method Not Allowed.",
        "The request method does not match the supported API. This happens, for example, if the application calls the API with the\nGET method but the endpoint accepts only POST. The application must use a supported method when sending the request.",
        "The following is an example of a response:",
        "415",
        "The request header Content-Type includes unsupported media type.",
        "422",
        "The request was well-formed (i.e., syntactically correct) but could not be processed.",
        "The API supports application/json only. If no Content-Type is specified, the request payload is interpreted\nas JSON, but if any other media type is specified, this error is returned.",
        "429",
        "Too many requests.",
        "The number of requests hit the rate limit. The application must reduce the frequency of requests sent to the\nAPI endpoints. The application may retry with backoff. Exponentially jittered backoff is recommended.",
        "This response can also occur when the server receives too many concurrent requests. Concurrency limits on the\nAPI are determined by the concurrency limits enforced by Snowflake.",
        "The following is an example of a response:",
        "500",
        "Internal Server Error.",
        "The server encountered an unrecoverable system error. The response body can include the error code and message for further\nguidance.",
        "You can retry exponential backoff by setting the requestId and retry parameters to true. For more information, see Resubmitting a request to execute SQL statements.",
        "502",
        "Bad Gateway.",
        "The server was acting as a gateway or proxy and received an invalid response from the upstream server.",
        "You can retry exponential backoff by setting the requestId and retry parameters to true. For more information, see Resubmitting a request to execute SQL statements.",
        "503",
        "Service Unavailable.",
        "The request was not processed due to a timeout on the server. The application may retry with backoff. Exponentially\njittered backoff is recommended.",
        "504",
        "Gateway Timeout.",
        "The request was not processed due to a timeout on the server. The application may retry with backoff. Exponentially\njittered backoff is recommended.",
        "522",
        "Invalid SSL Certificate.",
        "The server could not validate the provided SSL certificate.",
        "Responses can contain the following headers:",
        "Header",
        "Description",
        "Link",
        "This header is in the 200 response for a request to execute the statement\nand a request to check the status of the execution of a statement.",
        "This header provides links to other partitions of results (e.g. the first partition, the last partition, etc.). The header\ncan include multiple URL entries with different rel attribute values that specify the partition to return\n(first, next, prev, and last).",
        "For example:",
        "CancelStatus is a JSON object that contains information about the cancellation of the execution of a statement. This\nobject is returned in the body of the response for a cancellation request.",
        "Field",
        "Description",
        "code",
        "Type: string",
        "sqlState",
        "Type: string",
        "message",
        "Example: successfully cancelled",
        "Type: string",
        "statementHandle",
        "Unique identifier for the statement being executed.",
        "Type: string (a UUID)",
        "Example: 536fad38-b564-4dc5-9892-a4543504df6c",
        "statementStatusUrl",
        "URL to get the statement status and result set.",
        "Type: string (a URL)",
        "Example: /api/v2/statements/536fad38-b564-4dc5-9892-a4543504df6c",
        "QueryFailureStatus is a JSON object that contains information about a failure to execute a statement. This object is returned in\nthe body of the 422 response for a request to execute the statement.",
        "Field",
        "Description",
        "code",
        "Type: string",
        "Example: 0",
        "sqlState",
        "Type: string",
        "message",
        "Type: string",
        "Example: successfully executed",
        "statementHandle",
        "Unique identifier for the statement being executed.",
        "Type: string (a UUID)",
        "Example: 536fad38-b564-4dc5-9892-a4543504df6c",
        "createdOn",
        "Timestamp that specifies when the statement execution started. The timestamp is expressed in milliseconds since the epoch.",
        "Type: 64-bit signed integer",
        "Example: 1597090533987",
        "statementStatusUrl",
        "URL to get the statement status and result set.",
        "Type: string (a URL)",
        "Example: /api/v2/statements/536fad38-b564-4dc5-9892-a4543504df6c",
        "QueryStatus is a JSON object that contains information about the status of the execution of a statement. This object is\nreturned in the following:",
        "the body of the 202 and 408 response for a request to execute the statement.",
        "the body of a 202 and 422 response for a\nrequest to check the status of the execution of a statement.",
        "Field",
        "Description",
        "code",
        "Type: string",
        "Example: 0",
        "sqlState",
        "Type: string",
        "message",
        "Type: string",
        "Example: successfully executed",
        "statementHandle",
        "Unique identifier for the statement being executed.",
        "Type: string (a UUID)",
        "Example: 536fad38-b564-4dc5-9892-a4543504df6c",
        "createdOn",
        "Timestamp that specifies when the statement execution started. The timestamp is expressed in milliseconds since the epoch.",
        "Type: 64-bit signed integer",
        "Example: 1597090533987",
        "statementStatusUrl",
        "URL to get the statement status and result set.",
        "Type: string (a URL)",
        "Example: /api/v2/statements/536fad38-b564-4dc5-9892-a4543504df6c",
        "ResultSet is a JSON object that contains the results of the execution of a statement. This object is returned in the body\nof the 200 response for a request to execute the statement and a\nrequest to check the status of the execution of a statement.",
        "Field",
        "Description",
        "code",
        "Type: string",
        "Example: 0",
        "sqlState",
        "Type: string",
        "message",
        "Type: string",
        "Example: successfully executed",
        "statementHandle",
        "Unique identifier for the statement being executed.",
        "If multiple statements were specified in the request, this handle corresponds to the set of those statements. For the\nhandles of the individual statements in the request, see the statementHandles field.",
        "Type: string (a UUID)",
        "Example: 536fad38-b564-4dc5-9892-a4543504df6c",
        "statementHandles",
        "Array of unique identifiers for the statements being executed for this request.",
        "Type: array of strings (UUID)",
        "Example: [ \"019c9f9a-0502-f25e-0000-438300e0d046\", \"019c9f9a-0502-f25e-0000-438300e0d04a\", \"019c9f9a-0502-f25e-0000-438300e0d04e\" ]",
        "createdOn",
        "Timestamp that specifies when the statement execution started. The timestamp is expressed in milliseconds since the epoch.",
        "Example: 1597090533987",
        "statementStatusUrl",
        "URL to get the statement status and result set.",
        "Type: string (a URL)",
        "Example: /api/v2/statements/536fad38-b564-4dc5-9892-a4543504df6c",
        "resultSetMetaData",
        "Metadata about the result set returned.",
        "Type: object (ResultSet_resultSetMetaData)",
        "data",
        "If the request contains a single SQL statement, this field contains the result set data.",
        "A result set format is an array of arrays in JSON:",
        "Each array corresponds to a single row.",
        "The elements in a row correspond to the values in the columns for that row.",
        "The data is encoded as JSON strings, regardless of the Snowflake datatype.",
        "Type: array of arrays",
        "Example:",
        "If the request contains multiple SQL statements, this field just contains the message \u201cMultiple statements executed\nsuccessfully\u201d. To retrieve the results for each statement in the request, get the handles for these statements from the\nstatementHandles field, and\nsend requests to get the results of each statement.",
        "stats",
        "For DML statements, this field contains statistics about the number of rows affected by the operation.",
        "Type: object (ResultSet_stats)",
        "ResultSet_resultSetMetaData is a JSON object that contains metadata about the results of the execution of a statement.\nThis object is in the resultSetMetaData field of the ResultSet object.",
        "Field",
        "Description",
        "partition",
        "The index number of the partition that you want to return (where 0 specifies the first partition of data). Snowflake returns\ndata in partitions.  Snowflake determines the number of partitions and the size of each partition at runtime. You can get the\nlist of partitions from the resultSetMetaData object in the response to the POST request.",
        "See Getting the results from the response for more information.",
        "numRows",
        "The total number of rows of results.",
        "Type: 64-bit signed integer",
        "Example: 100",
        "format",
        "Format of the data in the result set.",
        "Type: string",
        "rowType",
        "Array of ResultSet_resultSetMetaData_rowType objects that describe the columns in the set of\nresults.",
        "Type: array of ResultSet_resultSetMetaData_rowType.",
        "Example:",
        "ResultSet_resultSetMetaData_rowType is a JSON object that describes a column in a set of results. An array of these\nobjects is in the rowType field of the ResultSet_resultSetMetaData object.",
        "Field",
        "Description",
        "name",
        "Name of the column.",
        "Type: string",
        "type",
        "Snowflake data type of the column.",
        "Type: string",
        "length",
        "Length of the column.",
        "Type: 64-bit signed integer",
        "precision",
        "Precision of the column.",
        "Type: 64-bit signed integer",
        "scale",
        "Scale of the column.",
        "Type: 64-bit signed integer",
        "nullable",
        "Specifies whether or not the column is nullable.",
        "Type: boolean",
        "ResultSet_stats is a JSON object that contains statistics about the execution of a DML statement. This object is in the\nstats field of the ResultSet_resultSetMetaData object.",
        "Field",
        "Description",
        "numRowsInserted",
        "Number of rows that were inserted.",
        "Type: 64-bit signed integer",
        "Example: 12",
        "numRowsUpdated",
        "Number of rows that were updated.",
        "Type: 64-bit signed integer",
        "Example: 9",
        "numRowsDeleted",
        "Number of rows that were deleted.",
        "Type: 64-bit signed integer",
        "Example: 8",
        "numDuplicateRowsUpdated",
        "Number of duplicate rows that were updated.",
        "Type: 64-bit signed integer",
        "Example: 20",
        "Was this page helpful?",
        "On this page"
    ]
}