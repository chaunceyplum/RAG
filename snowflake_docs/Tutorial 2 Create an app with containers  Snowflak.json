{
    "url": "https://docs.snowflake.com/en/developer-guide/native-apps/tutorials/na-spcs-tutorial",
    "title": "Tutorial 2: Create an app with containers | Snowflake Documentation",
    "paragraphs": [
        "Feature \u2014 Generally Available",
        "The Snowflake Native App Framework is generally available on supported cloud platforms. For additional information, see\nSupport for private connectivity, VPS, and government regions.",
        "The Snowflake Native App Framework allows providers to build, sell, and distribute apps within the\nSnowflake Data Cloud. Providers can create apps that leverage core Snowflake functionality to share data\nand application logic with consumers. The logic of a Snowflake Native App can include features such as stored procedures and user-defined functions (UDFs). Providers can share their applications with consumers through listings in the\nSnowflake Marketplace or through private listings.",
        "A Snowflake Native App can implement Snowpark Container Services to facilitate the deployment, management, and scaling of\ncontainerized apps within the Snowflake ecosystem. This tutorial describes how to create a Snowflake Native App with Snowpark Container Services, which is\na Snowflake Native App that runs container workloads in Snowflake. Snowflake Native Apps with Snowpark Container Services can run any containerized services, while\nleveraging all of the features of the Snowflake Native App Framework, including security, logging, shared data content and application logic.",
        "Note",
        "This tutorial uses both Snowflake CLI and Snowsight to perform the required tasks.",
        "In this tutorial, you learn how to:",
        "Use Snowflake CLI to initialize a Snowflake Native App with Snowpark Container Services project.",
        "Build a Docker image for an app.",
        "Create the application package and required application files for a Snowflake Native App with Snowpark Container Services.",
        "Test a Snowflake Native App with Snowpark Container Services by calling the service function within the container.",
        "To perform this tutorial, you must meet the following prerequisites:",
        "Access to a Snowflake account that supports Snowpark Container Services.",
        "You must be able to use the ACCOUNTADMIN role to create the role used in this\ntutorial and grant the required privileges to that role.",
        "You must have Snowflake CLI\nversion 3.0.0 or greater installed on your local machine.",
        "You must have Docker Desktop installed on your local machine.",
        "This tutorial walks you through the process of creating a Snowflake Native App with Snowpark Container Services using the\ntutorial_role role. Before working through this tutorial, a Snowflake user with the\nACCOUNTADMIN role must perform the following steps to configure this role.",
        "To create and set up the tutorial_role role, follow these steps:",
        "To create the tutorial_role role, run the following command:",
        "To grant the tutorial_role to the Snowflake user who performs the tutorial, run the\nfollowing command:",
        "Where:",
        "Specifies the name of the user who performs the tutorial.",
        "To grant the privileges required to create and use the Snowflake objects required by a container\napp, run the following commands:",
        "After performing the tasks in this section, the user that has the tutorial_role role granted\nto their account has the permissions to create all of the Snowflake objects required to\ncreate a Snowflake Native App with Snowpark Container Services.",
        "You use this role through the rest of this tutorial.",
        "In a real-world situation, a provider may need similar privileges or access to\nexisting objects to develop an app with containers, including a compute pool, warehouse, and database.",
        "In this section, you create the Snowflake objects required by an app with containers.",
        "To create the required objects, perform the following either through Snowsight or Snowflake CLI.",
        "To set the current context in Snowsight to use the tutorial_role role, run the following command:",
        "If you are using Snowflake CLI, you can use --role tutorial_role instead.",
        "To create a warehouse for the Snowflake Native App with Snowpark Container Services, run the following command:",
        "A warehouse is required by the Snowflake Native App to run SQL commands and stored procedures.",
        "To create the image repository used to store the container, run the following command:",
        "In this section, you created a warehouse that is used to execute queries for the app\nyou create, as well as an image repository to host container images.",
        "In the next section you create an image for the container and upload it to the\nimage repository you created above.",
        "To run the Snowflake CLI commands in this tutorial, you must setup a Snowflake CLI connection for the tutorial.",
        "To create a connection, perform the following tasks:",
        "From the terminal, run the following command:",
        "Enter tut-connection for the name of the connection.",
        "Enter additional information for the Snowflake CLI connection.",
        "The specific values you use depend on your Snowflake account. However, you must use the following\nvalues for the role, warehouse, database, and schema properties:",
        "Parameter",
        "Required value",
        "Role for the connection",
        "tutorial_role",
        "Warehouse for the connection",
        "tutorial_warehouse",
        "Database for the connection",
        "tutorial_image_database",
        "Schema for the connection",
        "tutorial_image_schema",
        "Verify the connection by running the following command:",
        "The output of this command should look similar to the following:",
        "Caution",
        "If you do not create the tut-connection connection, you must use a connection that\nspecifies the correct values for the role, database, and warehouse connection properties.",
        "In the previous section, you set up a Snowflake CLI connection for the tutorial.",
        "In this section, you use Snowflake CLI to create a project for your app. A project contains\nall of the assets required by an app. These files are stored on your local file system and can be\nmanaged by a version control system as part of your development workflow.",
        "To create a project file, run the following command:",
        "Enter a value for the project identifier.",
        "You add additional files and subfolders to this folder and edit the files\nthis command created in later subsections.",
        "This command creates a folder named na-spcs-tutorial using the app_basic project template.",
        "Within the na-spcs-tutorial folder, this command creates the following files and folders:",
        "In later sections you modify these files and add additional resources to your app.",
        "In the previous section you created a project which includes the default application\nfiles required by your app. In this section, you add the files required to create the container for your app.",
        "Create a folder called service inside the na-spcs-tutorial folder.",
        "This folder contains the source code for the container-based service we are about to build and publish to Snowflake.",
        "To obtain the Docker files required for the tutorial, download the\nna_spcs_tutorial.zip file to your local file system.",
        "Unzip the contents of the zip file into the na-spcs-tutorial/service folder. This folder should container the\nfollowing files:",
        "echo_service.py",
        "Dockerfile",
        "templates/basic_ui.html",
        "echo_spec.yaml",
        "After create the project for your app and adding the files for the service and Docker container, the project\nshould have the following structure within the na-spcs-tutorial folder:",
        "In this section, you build a Docker image and upload it to the image repository you\ncreated in the previous section.",
        "To build a Docker image and upload it to the image repository, follow these steps:",
        "From a terminal window, change to the na-spcs-tutorial/service folder.",
        "Run the following Docker CLI command. Note that you must specify the current working\ndirectory (.) in the command:",
        "This command performs the following:",
        "Builds a Docker image using the Docker file included in the zip file that you downloaded",
        "Names the image my_echo_service_image",
        "Applies the tutorial tag to the image.",
        "To identify the URL of the image repository you created in a previous section, run the following\ncommand:",
        "The URL of the image repository is captured in the $REPO_URL variable, then printed to the console.\nYou use this value in the next step.",
        "To create a tag for the image that includes the image URL, run the following Docker CLI command:",
        "This command requires two parameters:",
        "<image_name>\nSpecifies the name of the image and tag.",
        "<image_url>/<image_name>\nSpecifies the URL of the image repository where the image is uploaded and the image name\nand tag where it should be stored in the remote repository.",
        "For this tutorial, use $REPO_URL and my_echo_service_image:tutorial:",
        "To authenticate with the Snowflake registry, run the following Snowflake CLI command:",
        "This command loads necessary credentials required for the Docker CLI to use the image repositories\nin your Snowflake account. You must specify the connection name, if you are not using the default.",
        "The message Login Succeeded displays if everything was successful.",
        "To upload the Docker image to the image repository, run the following  docker push command:",
        "Using the same value as <image_name> from previous steps, this command is:",
        "Confirm the image was uploaded successfully by running the following command:",
        "In this section, you created a Docker image containing the echo service and pushed it to the\ntutorial_repository image repository you created earlier in the tutorial.",
        "In the next section, you create an application package that uses this image.",
        "In a previous section, you used the Snowflake CLI to create a project file based on a project template. This template\ncreated default versions of the files required by the app.",
        "In this section, you update these default files for your app:",
        "A YAML file that contains information about the Snowflake object(s) that you want to create.\nThis file is called snowflake.yml and is used by Snowflake CLI to deploy the application\npackage and object into your account.",
        "A YAML file that contains basic configuration and callback information about the application.\nThis file is called manifest.yml.",
        "An SQL script that runs automatically when a consumer installs an application in\ntheir account. This file can be called whatever you like, as long as it is referenced\nby your manifest.",
        "The first file is used by Snowflake CLI, while the latter two are required by the Snowflake Native App Framework.",
        "You learn more about these files, and their contents, throughout this tutorial.",
        "In this section, you also create a readme file that is useful when viewing and publishing your\napp.",
        "To modify the manifest file for the app, follow these steps:",
        "Modify na-spcs-tutorial/app/manifest.yml to look like the following:",
        "This example includes the following:",
        "The artifacts property specifies the locations of resources required by an app\nwith containers, including the location of the Docker image you created in a previous step,\nas well as the project README that is visible in Snowsight.",
        "The privileges property allows a service to respond to public requests as well\nas to create its own compute pool. These properties are required for instantiating our service\nin the next step of the tutorial.",
        "To modify the default setup script for the application package, follow these steps:",
        "Modify the na-spcs-tutorial/app/setup_script.sql file to include the following:",
        "To modify the README file for the app, follow these steps:",
        "Modify na-spcs-tutorial/app/README.md to look like the following:",
        "This README file is visible to consumers after they install your app.",
        "In this section, you modify the project definition file used by the Snowflake CLI.",
        "Modify na-spcs-tutorial/snowflake.yml to look like the following:",
        "In this section, you defined a local file structure that can be deployed to a Snowflake account\nas a Snowflake Native App with Snowpark Container Services. In the next section, you perform this deployment using Snowflake CLI.",
        "After defining the manifest file, setup script, and service specification for your Snowflake Native App with Snowpark Container Services,\nyou can test the app by deploying it to your account using Snowflake CLI.",
        "To create an app in development mode, follow these steps:",
        "In a terminal, change to the na-spcs-tutorial folder.",
        "Create the application package and object in your account by running the following command:",
        "This command displays a confirmation that an application package called\nna_spcs_tutorial_pkg and an application object called na_spcs_tutorial_app\nhave been created in your account. These names correspond to the names in the\nsnowflake.yml project definition you modified in a previous section.",
        "You can use the URL output to the console to view the application. However,\nyou must first ensure it has all necessary privileges to create its container-based service.",
        "In this section, you grant the required privileges to the app and test the app by\ncalling the services in the container.",
        "You can run SQL commands using either Snowsight or the Snowflake CLI.",
        "To grant the privileges and test the app, perform the following steps from a Snowflake worksheet:",
        "Grant the CREATE COMPUTE POOL privilege to the app by running the following:",
        "Run the app_public.start_app procedure we defined in the setup_script.sql file.",
        "This procedure creates the compute pool, instantiate the service, and creates the service function.",
        "Confirm the function was created by running the following:",
        "Note",
        "Consumers cannot see the running service because it runs as part of the Snowflake Native App.\nFor example, running SHOW SERVICES IN APPLICATION na_spcs_tutorial_app; does not\nreturn anything.",
        "To verify that the service has been created and healthy, run the following command:",
        "This statement calls the app_public.service_status procedure that you defined in the setup script. The procedure returns information about the containers for this service.",
        "If the value in the status column is not READY, execute the statement again, until the status of the service container is READY.",
        "To call the service function to send a request to the service and verify the response, run\nthe following command:",
        "You see the following message from the service you configured in an earlier section:",
        "Caution",
        "If you plan to perform the Tutorial 3: Upgrade an app with containers after completing this tutorial,\ndo not perform the steps in this section. The app with containers you created in this tutorial\nis a prerequisite for the upgrade tutorial.",
        "Because the app uses a compute pool, it accrues credits in your account\nand costs money to run. To stop the app from consuming resources, you must tear down\nboth the application object and any of the account-level objects it created, for example the\ncompute pool.",
        "To confirm that the compute pool is currently running, run the following command:",
        "If the compute pool is running, a row with an ACTIVE compute pool that was created by the\napplication object is displayed.",
        "Run the following Snowflake CLI command to tear down the app:",
        "This command removes all of the Snowflake objects created by the app. Without the --force option,\nthis command does not drop the application package because it contains versions.",
        "To confirm that the compute pool was dropped run the following command again:",
        "This command returns no data if the compute pool has been dropped successfully.",
        "Note",
        "The snow app teardown command drops both the application package and application object.\nTherefore, any stateful data is lost.",
        "Congratulations! Not only have you finished this tutorial, but you have worked through the\ndevelopment and publishing life cycle of a Snowflake Native App with Snowpark Container Services.",
        "Along the way, you:",
        "Used Snowsight and Snowflake CLI to build an application using the\nSnowflake Native App Framework.",
        "See Configuring Snowflake CLI and connecting to Snowflake for more information\non how to configure the connections used by Snowflake CLI.",
        "For more information about Snowsight, refer to\nGetting started with worksheets and\nWork with worksheets in Snowsight.",
        "For more information about Native Apps in Snowflake CLI, refer to\nUsing Snowflake Native App in Snowflake CLI.",
        "Created the manifest and setup script that are required by all applications.",
        "Refer to Create the manifest file for an application package and\nCreate a setup script for details.",
        "Created an application package that works as a container for the application logic and\ndata content of your application.",
        "Refer to Create an application package for details.",
        "Used Docker CLI and Snowflake CLI to build and upload a container to Snowflake.",
        "Used Snowpark Container Services to create a COMPUTE POOL and instantiate the\ncontainer inside of a Snowflake Native App.",
        "Was this page helpful?"
    ]
}