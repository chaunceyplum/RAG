{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-python-api/reference/latest/_autosummary/snowflake.core.stage.Stage",
    "title": "snowflake.core.stage.Stage | Snowflake Documentation",
    "paragraphs": [
        "Bases: BaseModel",
        "A model object representing the Stage resource.",
        "Constructs an object of type Stage with the provided properties.",
        "name (str) \u2013 A Snowflake object identifier.",
        "kind (str,  default 'PERMANENT') \u2013 Specifies whether the stage is permanent or temporary.",
        "url (str, optional) \u2013 URL for the external stage; blank for an internal stage.",
        "endpoint (str, optional) \u2013 The S3-compatible API endpoint associated with the stage; always NULL for stages that are not S3-compatible.",
        "storage_integration (str, optional) \u2013 A Snowflake object identifier.",
        "comment (str, optional) \u2013 Specifies a comment for the stage.",
        "credentials (Credentials, optional)",
        "encryption (StageEncryption, optional)",
        "directory_table (StageDirectoryTable, optional)",
        "created_on (datetime, optional) \u2013 Date and time when the stage was created.",
        "has_credentials (bool, optional) \u2013 Indicates that the external stage has access credentials; always false for an internal stage.",
        "has_encryption_key (bool, optional) \u2013 Indicates that the external stage contains encrypted files; always false for an internal stage.",
        "owner (str, optional) \u2013 Role that owns the stage.",
        "owner_role_type (str, optional) \u2013 The type of role that owns the object, either ROLE or DATABASE_ROLE. If a Snowflake Native App owns the object, the value is APPLICATION. Snowflake returns NULL if you delete the object because a deleted object does not have an owner role.",
        "region (str, optional) \u2013 Region where the stage is located.",
        "cloud (str, optional) \u2013 Cloud provider; always NULL for an internal stage.",
        "Create a new model by parsing and validating input data from keyword arguments.",
        "Raises [ValidationError][pydantic_core.ValidationError] if the input data cannot be\nvalidated to form a valid model.",
        "self is explicitly positional-only to allow self as a field name.",
        "Methods",
        "Create an instance of Stage from a dict.",
        "Create an instance of Stage from a JSON string.",
        "Returns the dictionary representation of the model using alias.",
        "Return the dictionary representation of the model without readonly properties.",
        "Returns the JSON representation of the model using alias.",
        "Returns the string representation of the model using alias.",
        "Was this page helpful?"
    ]
}