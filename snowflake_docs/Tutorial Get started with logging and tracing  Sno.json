{
    "url": "https://docs.snowflake.com/en/developer-guide/logging-tracing/tutorials/logging-tracing-getting-started",
    "title": "Tutorial: Get started with logging and tracing | Snowflake Documentation",
    "paragraphs": [
        "This tutorial introduces the basics of emitting, collecting, and querying log and trace data from function and procedure handler code.",
        "The tutorial uses the Snowsight web interface, but you can use any Snowflake client that supports executing SQL. For more\ninformation about Snowsight, see Getting started with worksheets and Work with worksheets in Snowsight.",
        "In this tutorial, you will learn how to:",
        "Create an event table to store log and trace data.",
        "Snowflake collects log and trace data in the table\u2019s predefined structure.",
        "Emit log messages and trace data from a user-defined function (UDF).",
        "You can use an API designed for your handler language to emit log messages and trace data from handler code.",
        "View the collected log and trace data by querying the event table.",
        "You can query the table with a SELECT statement to analyze the collected data.",
        "You must execute all of the SQL commands in the same SQL command session because the session context is required.",
        "To do this in Snowsight, for example, paste all of your code into the same worksheet as you go along. As you progress from\nsection to section, each section builds on the previous.",
        "You must be able to use the ACCOUNTADMIN role.",
        "In this tutorial, you will perform all the steps using the ACCOUNTADMIN role. In general practice, however, you would use roles\nwith privileges specifically defined for the action you\u2019re performing. For example, you might have separate roles for developers who\ncreate UDFs, for analysts who query collected log and trace data, and so on.",
        "For more about roles, see Switch your active role and Access control considerations.",
        "In this section, you\u2019ll create a warehouse and database you\u2019ll need for the tutorial. You\u2019ll also begin using the ACCOUNTADMIN role, which\nis required to execute some of the statements in this tutorial.",
        "You\u2019re creating a database in which you\u2019ll later create the event table and the user-defined function. You can delete all of the objects\nyou create in the tutorial, including the database and warehouse, when you no longer need them.",
        "To create a database and warehouse for use in the tutorial:",
        "Sign in to Snowsight.",
        "Switch to the ACCOUNTADMIN role.",
        "Open Projects \u00bb Worksheets.",
        "Select + \u00bb SQL Worksheet.",
        "Rename the new worksheet to Logging-tracing tutorial.",
        "In the new worksheet, paste and run the following statement to create a database. The new database is just for this tutorial.",
        "Paste and run the following statement to create a warehouse. The new warehouse is just for this tutorial.",
        "In this section, you put in place the pieces you need for the tutorial. In the next section, you\u2019ll create an event table for storing\nlog and trace data.",
        "In this section, you\u2019ll create an event table. As your handler code emits log messages and trace data, Snowflake saves the emitted data in\nevent table rows. You can query the event table to analyze the data.",
        "You must create an event table to collect log and trace data. An event table always uses the\npredefined structure defined by Snowflake.",
        "Important",
        "To complete this section, you\u2019ll need to be able to use the ACCOUNTADMIN role, which is required when altering an account so that the new event\ntable is the account\u2019s active event table.",
        "To create the event table, you must use a role with the CREATE EVENT TABLE privilege assigned.",
        "To create the event table and make it the active event table for the account:",
        "Paste and run the following statement to create an event table.",
        "This table is where Snowflake stores log and trace data.",
        "Paste and run the following statement to alter the account so that the event table you created is the active one for the account.",
        "This statement sets the new event table as the table that Snowflake should use for storing log messages and trace data from handlers\nin the current account. You can have only one active event table for an account.",
        "In this section, you created an event table. In the next section, you\u2019ll start emitting log messages that Snowflake stores in the table.",
        "In this section, you\u2019ll create a user-defined function (UDF) with Python handler code that emits log messages. As your code emits log\nmessages, Snowflake collects the message data and stores it in the event table you created.",
        "Snowflake supports APIs to log messages from each supported handler language. For handlers you write in Python, you can use the\nlogging module in Python\u2019s standard library.",
        "To create a UDF that emits log messages:",
        "Paste and run the following statement to set the log level to INFO.",
        "This specifies the severity of log messages that Snowflake should capture as the UDF runs. In this case, the level permits all\nmessages ranging from informational (INFO) to the most severe (FATAL).",
        "Paste and run the following statement to create a user-defined function.",
        "Highlighted lines in the code do the following:",
        "Import the Python logging module so that the handler code can use it.",
        "Create a logger, which exposes the interface your code will use to log messages.",
        "Log a message at the INFO level.",
        "Paste and run the following statement to execute the function you just created.",
        "This produces the following output. In addition, as the function executed, it emitted a log message that Snowflake collected in the\nevent table.",
        "In this section, you emitted a log message from a UDF. In the next section, you\u2019ll query the event table to retrieve data related to the message.",
        "In this section, you\u2019ll query the event table for log message data emitted by the UDF you ran in the previous section.",
        "Note",
        "It can take several seconds for log or trace data emitted by handler code to be recorded in the event table. If you don\u2019t see\nresults immediately, try again in a few seconds.",
        "Snowflake uses predefined event table columns to collect and store log and\ntrace data of the following kinds:",
        "Data you emit from handler code, such as log messages and trace event data.",
        "You\u2019ll find these in columns such as RECORD_TYPE, RECORD, RECORD_ATTRIBUTES, and others.",
        "Data about the context in which the log or trace data was emitted, such as the timestamp, name of the handler method from which the data\nwas emitted, and so on.",
        "You\u2019ll find this data in columns such as RESOURCE_ATTRIBUTES, TIMESTAMP, and SCOPE.",
        "To query the event table for log message data:",
        "Paste and run the following statement to query the event table.",
        "Some columns contain structured data expressed as key-value pairs. In this query, you specify attribute keys within a column by using\nbracket notation such as RECORD['severity_text'].",
        "You also use bracket notation (SCOPE['name']) to specify that you want to select column values only where the log entries are\nemitted with the Python logger, tutorial_logger, you created in handler code.",
        "View the output.",
        "The output illustrates how the event table\u2019s predefined columns each\ncontain parts of the collected data. For the EXECUTABLE and SEVERITY values, you\u2019ve used bracket notation\nto specify the attributes whose values you want.",
        "Output Column",
        "Description",
        "TIME",
        "The time the entry was created (from the TIMESTAMP column).",
        "EXECUTABLE",
        "UDF name and parameters (from the RESOURCE_ATTRIBUTES column\u2019s snow.executable.name attribute).",
        "SEVERITY",
        "Log entry severity (from the RECORD column\u2019s severity_text attribute).",
        "MESSAGE",
        "Log message (from the VALUE column).",
        "In this section, you used a SELECT statement to query for log data. In the next section, you\u2019ll update the UDF so that it emits trace data.",
        "In this section, you\u2019ll update the UDF handler code so that it also emits trace data. As your code emits trace data, Snowflake collects\nthe data and stores it in the event table you created.",
        "Trace data has structural qualities, including event data grouped into spans and data captured as key-value pairs, that let\nyou assemble a more detailed picture of your code\u2019s activity than log data typically allows.",
        "Snowflake supports APIs to emit trace data from each supported handler language. For handlers you write in Python, you can use the\nSnowflake telemetry package.",
        "To update the UDF to emit trace data:",
        "Paste and run the following statement to specify what trace data should be captured.",
        "This sets the trace level to ON_EVENT. This specifies that only trace data emitted explicitly by your own code should be\ncaptured.",
        "Paste and run the following statement to create a UDF that emits trace data.",
        "By running this code, you\u2019re replacing the function you created earlier with one that adds code for emitting trace data. The highlighted\nlines do the following:",
        "Add snowflake-telemetry-python \u2013 which contains the telemetry package \u2013 to the UDF\u2019s execution environment.",
        "Import the telemetry package so you can call its functions.",
        "Set an attribute and attribute value to the span that Snowflake creates when the code runs.",
        "A span represents a procedure\u2019s or UDF\u2019s execution unit, within which you can add multiple events.",
        "Add an event (with its own attributes) to record as part of the span.",
        "Paste and run the following statement to execute the function you just created.",
        "This produces the following output. In addition, as the function executed, it emitted trace data that Snowflake collected in the\nevent table.",
        "In this section, you emitted trace data from a UDF. In the next section, you\u2019ll query the event table to retrieve data related to the trace.",
        "In this section, you\u2019ll query the event table for trace data emitted by the UDF you ran in the previous section.",
        "Note",
        "It can take several seconds for log or trace data emitted by handler code to be recorded in the event table. If you don\u2019t see\nresults immediately, try again in a few seconds.",
        "The query you write will retrieve contextual information about events emitted by the function. That context includes the name of the\nfunction that emitted it.",
        "To query the event table for trace data:",
        "Paste and run the following statement to query the event table for trace data.",
        "Some columns contain structured data expressed as key-value pairs. For these, you can select attribute values within a column by using\nbracket notation, as shown in the code.",
        "View the output.",
        "The output illustrates how the event table\u2019s predefined columns each\ncontain parts of the collected data. For the EXECUTABLE and SEVERITY values, you\u2019ve used bracket notation\nto specify the attribute whose value you want.",
        "Output Column",
        "Description",
        "TIME",
        "Time the entry was created (from the TIMESTAMP column).",
        "HANDLER_NAME",
        "UDF name and parameters (from the RESOURCE_ATTRIBUTES column\u2019s snow.executable.name attribute).",
        "EVENT_NAME",
        "Name of the event added with the add_event function (from the RECORD column\u2019s name attribute).",
        "ATTRIBUTES",
        "Attributes added to accompany the event (from the RECORD_ATTRIBUTES column).",
        "In this section, you queried the event table for trace data emitted by the UDF you wrote. In the last section, you\u2019ll get links to information\nrelated to the things you did during the tutorial.",
        "You finished! Nicely done.",
        "In this tutorial, you got an end-to-end view of how you can emit and store log and trace data from handler code, then query the stored data.\nAlong the way, you:",
        "Created an event table. For information related to event tables, see the following:",
        "For more detail on setting up an event table, see Event table overview.",
        "For reference information about the columns that make up an event table, see\nEvent table columns.",
        "For more on things you can do with event tables, see Working with event tables.",
        "Created a user-defined function (UDF) that emitted log and trace data. For related information, see the following:",
        "For an overview of logging support in Snowflake, see Logging messages from functions and procedures. For specific about\nlogging with Python, see Logging messages from functions and procedures and the\nlogging module in Python\u2019s standard library.",
        "For details on setting levels, see Setting levels for logging, metrics, and tracing.",
        "For an overview of tracing support, see Trace events for functions and procedures. For specific about tracing with Python,\nsee Emitting trace events in Python.",
        "For general information on creating UDFs, see User-defined functions overview.",
        "Queried the event table for log and trace data. For information related to event tables, see the following:",
        "For a more complete view of how to query for log data, see Viewing log messages.",
        "For a view of how to query for trace data, see Viewing trace data.",
        "For more information on spans and events, along with information how Snowflake stores data for them, see\nHow Snowflake represents trace events.",
        "Was this page helpful?"
    ]
}