{
    "url": "https://docs.snowflake.com/en/user-guide/snowflake-cortex/cortex-search/tutorials/cortex-search-tutorial-1-search",
    "title": "Tutorial 1: Build a simple search application with Cortex Search | Snowflake Documentation",
    "paragraphs": [
        "This tutorial describes how to get started with Cortex Search for a simple search\napplication.",
        "Create a Cortex Search Service from on an AirBnb listings dataset.",
        "Create a Streamlit in Snowflake app that lets you query your Cortex Search Service.",
        "The following prerequisites are required to complete this tutorial:",
        "You have a Snowflake account and user with a role that grants the necessary\nprivileges to create a database, tables, virtual warehouse objects, Cortex Search services, and Streamlit apps.",
        "Refer to the Snowflake in 20 minutes for instructions to meet these requirements.",
        "You will use a sample dataset hosted on Huggingface\n, downloaded as a single JSON file. Download the file directly from your browser by following this link:",
        "AirBnB listings dataset",
        "Note",
        "In a non-tutorial setting, you would bring your own data, possibly already in a Snowflake table.",
        "Execute the following statements to create a database and a virtual warehouse needed for this tutorial.\nAfter you complete the tutorial, you can drop these objects.",
        "Note the following:",
        "The CREATE DATABASE statement creates a database. The database automatically includes a schema named \u2018public\u2019.",
        "The CREATE WAREHOUSE statement creates an initially suspended warehouse. The\nstatement also sets AUTO_RESUME = true, which starts the warehouse automatically when\nyou execute SQL statements that require compute resources.",
        "Before you can create a search service, you must load the example data into Snowflake.",
        "You can upload the dataset in Snowsight or using SQL. To upload in Snowsight:",
        "Select the + Create button above the left navigation bar.",
        "Then select Table \u00bb From File.",
        "Select your newly-created warehouse as a warehouse for your table from the drop-down at the top right corner.",
        "Drag and drop the JSON data file into the dialog.",
        "Select the database you created above and specify the PUBLIC schema.",
        "Finally, specify the creation of a new table called airbnb_listings and select Next.",
        "In the Load Data into Table dialog, make the following adjustments. First, uncheck the image_embeddings, images, and\ntext_embeddings columns, since those do not apply to this tutorial. Second, adjust the datatype of the amenities field to be\nARRAY type.",
        "Once you have made these adjustments, Select Load to proceed.",
        "After a brief moment, you should see a confirmation page showing that the data has been loaded.",
        "Select Query Data to open up a new Snowsight worksheet that you will use in the next step.",
        "Create a search service over our new table by running the following SQL command.",
        "The ON parameter specifies the column for queries to search over.\nIn this case, it\u2019s the listing_text, which is generated in the source query\nas a concatenation of several text columns in the base table.",
        "The ATTRIBUTES parameter specifies the columns that you will be able to filter search results on.\nThis example filers on room_type and amenities when issuing queries to the\nlisting_text column.",
        "The WAREHOUSE and TARGET_LAG parameters specify the user-provided warehouse and the desired\nfreshness of the search service, respectively. This example specifies to use the cortex_search_tutorial_wh\nwarehouse to create the index and perform refreshes, and to keep the service no more than '1 hour' behind the\nsource table AIRBNB_LISTINGS.",
        "The AS field defines the source table for the service. This example\nconcatenates several text columns in the original table into the search column listing_text so that queries can\nsearch over multiple fields.",
        "You can query the service with Python SDK (using the snowflake Python package). This tutorial\ndemonstrates using the Python SDK in a Streamlit in Snowflake application.",
        "First, ensure your global Snowsight UI role is the same as the role used to create\nthe service in the service creation step.",
        "Sign in to Snowsight.",
        "Select Projects \u00bb Streamlit in the left-side navigation menu.",
        "Select + Streamlit App.",
        "Important: Select the cortex_search_tutorial_db database and public schema for the app location.",
        "In the left pane of the Streamlit in Snowflake editor, select Packages and add snowflake (version >= 0.8.0)  to install the package in your application.",
        "Replace the example application code with the following Streamlit app:",
        "Here\u2019s a brief breakdown of the major components in the Streamlit-in-Snowflake code above:",
        "get_column_specification uses a DESCRIBE SQL query to get information about the attributes available in the search service and\nstores them in Stremalit state.",
        "init_layout sets up the header and intro of the page.",
        "query_cortex_search_service handles querying the Cortex Search Service via the Python client library.",
        "create_filter_object processes selected filter attributes from the Streamlit form into the right objects to be used by the\nPython library for querying Cortex Search.",
        "distinct_values_for_attribute determines which values are possible for each filterable attribute to populate the dropdown menus.",
        "init_search_input, init_limit_input, init_attribute_selection initialize inputs for the search query, limit of\nnumber of results, and attribute filters.",
        "display_search_results formats search results into Markdown elements displayed in the results page.",
        "Execute the following DROP <object> commands to return your system to its state before you began the tutorial:",
        "Dropping the database automatically removes all child database objects such as tables.",
        "Congratulations! You have successfully built a simple search app on text data in Snowflake.\nYou can move on to Tutorial 2\nto see how to layer on Cortex LLM Functions to build\nan AI chatbot with Cortex Search.",
        "Additionally, you can continue learning using the following resources:",
        "Cortex Search overview",
        "Query a Cortex Search Service",
        "Was this page helpful?"
    ]
}