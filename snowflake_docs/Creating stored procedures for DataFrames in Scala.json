{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/scala/creating-sprocs",
    "title": "Creating stored procedures for DataFrames in Scala | Snowflake Documentation",
    "paragraphs": [
        "Preview Feature \u2014 Open",
        "Preview support for this feature is available to all accounts.",
        "Using the Snowpark API, you can create stored procedures for your custom lambdas and functions. You can call these\nstored procedures to process the data in your DataFrame.",
        "You can create:",
        "Temporary stored procedures that exist only within the current session.",
        "Permanent stored procedures that you can use in other sessions, including\nfrom a Snowflake worksheet.",
        "You can create a temporary procedure that will last for the current session only. The temporary procedure can be:",
        "An anonymous procedure that you can call by reference, such as by passing a com.snowflake.snowpark.StoredProcedure variable\nrepresenting it to code that calls the procedure.",
        "A named procedure with a name you assign. You can call the procedure by name from other code within the session.",
        "To create a temporary procedure, you register it with one of the registerTemporary methods of com.snowflake.snowpark.SProcRegistration.\nThe method is overloaded multiple times to support different numbers of procedure arguments.",
        "When calling registerTemporary, you can pass as arguments the following:",
        "The procedure\u2019s name (when it is a named procedure).",
        "The procedure itself as a lambda expression.",
        "To create an anonymous temporary procedure, you register it as a temporary procedure without specifying a name. Snowflake will create a\nhidden name for its own use.",
        "Code in the following example calls the SProcRegistration.registerTemporary method to create an anonymous procedure from a lambda\nfunction. The function itself will take a Session object and an integer as arguments. The Session argument represents an implicit\nparameter that callers needn\u2019t pass as an argument.",
        "Code in the following example calls the anonymous procedure using the storedProcedure method of the\ncom.snowflake.snowpark.Session class, passing the sp variable and 1 as its arguments. Note that the Session object\nis an implicit argument that you needn\u2019t pass when you call the procedure.",
        "To create a named temporary procedure, you register it as a temporary procedure, passing its name as one of the arguments.",
        "Code in the following example calls the registerTemporary method to create a named temporary procedure called\nadd_two from a lambda expression, passing the procedure\u2019s name as an argument. The method registers an Int as\nthe single parameter type.",
        "The procedure itself will take a Session object and an integer as arguments. The Session argument represents an implicit\nparameter that callers needn\u2019t pass as an argument.",
        "Code in the following example calls the add_two procedure using a storedProcedure method of the\ncom.snowflake.snowpark.Session class, passing the procedure name and 1 as its arguments. Note that the Session object is\nan implicit argument that you needn\u2019t pass when you call the procedure.",
        "You can create a permanent stored procedure that you can call from any session, including\nfrom within a Snowflake worksheet.",
        "To create a permanent procedure, you register it with a registerPermanent method of the com.snowflake.snowpark.SProcRegistration\nclass. The method is overloaded multiple times to support a variety of procedure requirements.",
        "When calling registerPermanent, you pass as arguments the following:",
        "The procedure\u2019s name.",
        "The procedure itself as a lambda expression.",
        "An existing stage to which Snowflake should copy files resulting from compiling the procedure.",
        "Snowflake will copy all related data, including dependencies and lambda functions. This must be a permanent stage (not session temporary)\nbecause this stored procedure can be invoked outside of the current session. If the procedure is later dropped, you must manually\nremove related files from the stage.",
        "A boolean value indicating whether this procedure should execute with caller\u2019s rights.",
        "For more about caller\u2019s rights and owner\u2019s rights, refer to Understanding caller\u2019s rights and owner\u2019s rights stored procedures.",
        "Code in the following example calls the registerPermanent method to create a permanent procedure called\nadd_hundred from a lambda expression.",
        "The method specifies a stage called sproc_libs for the procedure and its dependencies. It also specifies that the procedure should\nbe executed with caller\u2019s rights.",
        "The procedure itself will take a Session object and an integer as arguments. The Session argument represents an implicit\nparameter that callers needn\u2019t pass as an argument.",
        "Code in the following example calls the add_hundred procedure using a storedProcedure method of the\ncom.snowflake.snowpark.Session class. The call passes the procedure name and 1 as its arguments. Note that the Session\nobject used in the handler as an argument is an implicit argument that you needn\u2019t pass when you call the procedure.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}