{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-cli/project-definitions/specify-entities",
    "title": "Specify entities | Snowflake Documentation",
    "paragraphs": [
        "Feature \u2014 Generally Available",
        "Not available in government regions.",
        "In the snowflake.yml definition file, you can specify multiple entities. Each entity is identified by a unique key. The example below specifies two entities with the entity_a and entity_b keys:",
        "Each entity has to specify a type. Currently supported types include:",
        "function",
        "procedure",
        "streamlit",
        "application package",
        "application",
        "You can specify multiple entities of the same type in the snowflake.yml file. You can name entities in the following ways:",
        "Use a unique key in the entities list.",
        "The following example shows using entity_a and entity_b as the unique keys:",
        "Specify an identifier name to each entity.",
        "The following example adds identifier names to the entity_a and entity_b entities:",
        "Add an identifier object to each entity.",
        "Using identifier objects allow to specify a name, database, and schema for each entity, as shown in the following example:",
        "If you don\u2019t specify an identifier, the entity key is used as the name of the object, without any database or schema qualification.",
        "In many cases you might find it useful to define project-wide default values. Mixins provide a way to extract common attributes out of individual entities. You can specify multiple mixins. You need to declare which mixins should be used by each entity using meta.use_mixins property.",
        "When using mixins with an entity, you must ensure that all properties of a mixin can be applied to that entity. Applying a property that is not available on an entity causes an error. Consequently, in some cases you might need to use multiple mixins.",
        "Note",
        "Mixin values are overridden by explicitly-declared entity attributes.",
        "The following example includes two mixins: stage_mixin and snowpark_shared. The my_dashboard entity uses only stage_mixin, while the my_function entity uses both of the mixins.",
        "If an entity uses multiple mixins that specify the same property, the entity uses the value of later mixin. In the following example, the value of key on the foo entity will be mixin_2_value.",
        "The behavior of applying mixins values depends on value type. For scalar values (strings, numbers, Booleans) values are overridden.",
        "Mixin notation",
        "Explicit result",
        "In case of sequences, values are merged to create a new sequence. This implementation avoids creating duplicate entries in the sequence.",
        "Mixin notation",
        "Explicit result",
        "For mapping values new keys are being added and existing values are updated. The update is recursive.",
        "Mixin notation",
        "Explicit result",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}