{
    "url": "https://docs.snowflake.com/en/sql-reference/functions/get_presigned_url",
    "title": "GET_PRESIGNED_URL | Snowflake Documentation",
    "paragraphs": [
        "File functions",
        "Generates a pre-signed URL to a file on a stage using the stage name and relative file path as inputs.",
        "Access files in a stage using any of the following methods:",
        "Navigate to the pre-signed URL directly in a web browser.",
        "Retrieve a pre-signed URL in Snowsight. Click on the pre-signed URL in the results table.",
        "Send the pre-signed URL in a request to the REST API for file support.",
        "Note",
        "When calling this function for files in an external stage that references Microsoft Azure cloud storage: This function returns\noutput only when the Azure container that stores the blob object is accessed using a storage integration; querying the function\nfails if the container is accessed using a shared access signature (SAS) token you generate.",
        "The GET_PRESIGNED_URL function requires Azure Active Directory authentication to create the user delegation SAS token. For this purpose,\na storage integration object stores a generated service principal for your Azure cloud storage. The Snowflake service principal is\ngranted a role that includes the Microsoft.Storage/storageAccounts/blobServices/generateUserDelegationKey permission (or action).\nBoth the Storage Blob Data Reader and Storage Blob Data Contributor roles include this permission. For more information about\nthis permission, see the\nMicrosoft documentation.",
        "For more information about accessing an Azure container, see Configuring an Azure container for loading data.",
        "Name of the internal or external stage where the file is stored.",
        "Note",
        "If the stage name includes spaces or special characters, it must be enclosed in single quotes (e.g. '@\"my stage\"' for a stage\nnamed \"my stage\").",
        "Path and filename of the file relative to its location on the stage.",
        "Length of time (in seconds) after which the short term access token expires.",
        "Default value: 3600 (60 minutes).",
        "Maximum value: If the stage uses an AWS IAM role (AWS_ROLE) to securely connect to your S3 bucket,\nthe maximum expiration time is 3600 (60 minutes). Otherwise, the maximum expiration time is 604800 (7 days).",
        "Pre-signed URL of the staged file.",
        "Note",
        "This SQL function generates a pre-signed URL for the file path that you specify, even if the file does not exist on the stage.\nTo ensure that the generated URL returns the expected file, open the URL in a web browser. If the file does not exist,\nthe browser returns a NoSuchKey error in XML format.",
        "Server-side encryption is required on the internal or external stage. For details, see CREATE STAGE.",
        "This SQL function returns a value for any role that has the following privilege on the stage:",
        "USAGE",
        "READ",
        "If files downloaded from an internal stage are corrupted, verify with the stage creator that ENCRYPTION = (TYPE = 'SNOWFLAKE_SSE') is set for the stage.",
        "Use the API for your cloud storage service to generate a list of JSON documents that contain the metadata extracted from the images.",
        "For example, suppose the JSON document for one bitmap image file is as follows:",
        "Create a table for the image metadata, load the metadata into the table, and generate the pre-signed URL for the image:",
        "Was this page helpful?",
        "On this page"
    ]
}