{
    "url": "https://docs.snowflake.com/en/sql-reference/functions/generator.html",
    "title": "GENERATOR | Snowflake Documentation",
    "paragraphs": [
        "Table functions",
        "Creates rows of data based either on a specified number of rows, a specified generation period (in seconds), or both. This system-defined table function enables synthetic row generation.",
        "Note that it is possible to generate virtual tables with 0 columns but possibly many rows. Such virtual tables are useful for queries whose SELECT clause consists entirely\nof data-generating functions.",
        "count and sec must be non-negative integer constants.",
        "If only the ROWCOUNT argument is specified, the resulting table will contain count rows.",
        "If only the TIMELIMIT argument is specified, the query runs for sec seconds, generating as many\nrows as possible within the time frame. The exact row count depends on the system speed and is not entirely\ndeterministic.",
        "If both the ROWCOUNT and TIMELIMIT arguments are specified, then:",
        "If the ROWCOUNT is reached before the TIMELIMIT, the resulting table will contain count\nrows.",
        "If the TIMELIMIT is reached before the ROWCOUNT, the table will contain the number of rows\ngenerated within the time frame. The exact row count depends on the system speed and is not entirely deterministic.",
        "If ROWCOUNT or TIMELIMIT is null, it will be ignored. So generator(ROWCOUNT => null) generates 0 rows.",
        "If both parameters (ROWCOUNT and TIMELIMIT) are omitted, the GENERATOR function returns 0 rows.",
        "The content of the rows is determined by the functions in the projection\nclause, not by the GENERATOR function itself. For more details, see\nthe Examples section below. See also the description(s) of the specific\nfunctions (e.g. SEQ()), that you plan to use in the projection clause;\nnot all valid functions produce sequences without gaps.",
        "Note",
        "These examples generate sequences that can have gaps. For examples that generate sequences without gaps, refer to\nSEQ1 / SEQ2 / SEQ4 / SEQ8 and ROW_NUMBER.",
        "This example uses the GENERATOR function to generate 10 rows. The content\nof the rows is determined by the functions in the projection clause:",
        "The SEQ4() column generates a\nsequence of 4-byte integers, starting with 0.",
        "The UNIFORM(\u2026) column generates\nvalues in the range between the first parameter (1) and the second\nparameter (10), based on either a function or a constant passed as the third\nparameter.",
        "This example includes an optional \u201cseed\u201d for the RANDOM() function so that the\noutput is consistent:",
        "This example is similar to the preceding example, except that it passes a\nconstant rather than a function as the third parameter to the UNIFORM\nfunction. The result is that the output for the UNIFORM column is the\nsame for every row.",
        "If you omit both the ROWCOUNT and TIMELIMIT parameters, the output is 0 rows:",
        "The following example uses the TIMELIMIT parameter without the ROWCOUNT parameter.",
        "Was this page helpful?",
        "On this page"
    ]
}