{
    "url": "https://docs.snowflake.com/en/sql-reference/functions/to_time",
    "title": "TO_TIME , TIME | Snowflake Documentation",
    "paragraphs": [
        "Conversion functions , Date & time functions",
        "Converts an input expression into a time.",
        "TRY_TO_TIME",
        "Required:",
        "Expression to be converted into a time:",
        "For string_expr, the string to convert to a time.",
        "For timestamp_expr, the timestamp to convert to a time. The function returns the time portion of the input value.",
        "For 'integer', a string containing an integer to convert to a time. The integer is treated as a number of seconds, milliseconds,\nmicroseconds, or nanoseconds after the start of the Unix epoch. See the Usage Notes.",
        "For this timestamp, the function gets the number of seconds after the start of the Unix epoch. The function performs a\nmodulo operation to get the remainder from dividing this number by the\nnumber of seconds in a day (86400):",
        "number_of_seconds % 86400",
        "The function interprets this remainder as the number of seconds after midnight.",
        "For example, suppose that the value is '31536002789'.",
        "Based on the magnitude of this value, the function uses milliseconds as the unit of time and determines that the value\nrepresents 1971-01-01 00:00:02.789.",
        "The function gets the number of seconds after the Unix epoch for this value (31536002).",
        "The function gets the remainder from dividing that number by the number of seconds in a day (31536002 % 86400).",
        "The function uses the remainder (2) as the number of seconds after midnight. The resulting time is 00:00:02.",
        "For variant_expr:",
        "If the VARIANT contains a string in TIME format (such as HH:MI:SS), a string conversion is performed.",
        "If the VARIANT contains a string in INTEGER format, a string conversion is performed and the value is\ntreated as the number of seconds since midnight (modulus 86400 if necessary).",
        "If the VARIANT contains a JSON null value, the output is NULL.",
        "For all other values, a conversion error is generated.",
        "Optional:",
        "Time format specifier for string_expr or\nAUTO,\nwhich specifies that Snowflake automatically detects the format to use. For more information,\nsee Date and time formats in conversion functions.",
        "Default: The current value of the TIME_INPUT_FORMAT\nsession parameter (default AUTO)",
        "The data type of the returned value is TIME. If the input is NULL, returns NULL.",
        "The display format for times in the output is determined by the TIME_OUTPUT_FORMAT\nsession parameter (default HH24:MI:SS).",
        "If the format of the input parameter is a string that contains an integer, the unit of measurement for the value (seconds,\nmicroseconds, milliseconds, or nanoseconds) is determined as follows:",
        "After the string is converted to an integer, the integer is treated as a number of seconds, milliseconds,\nmicroseconds, or nanoseconds after the start of the Unix epoch (1970-01-01 00:00:00.000000000 UTC).",
        "If the integer is less than 31536000000 (the number of milliseconds in a year), then the value is treated as\na number of seconds.",
        "If the value is greater than or equal to 31536000000 and less than 31536000000000, then the value is treated\nas milliseconds.",
        "If the value is greater than or equal to 31536000000000 and less than 31536000000000000, then the value is\ntreated as microseconds.",
        "If the value is greater than or equal to 31536000000000000, then the value is\ntreated as nanoseconds.",
        "If more than one row is evaluated (for example, if the input is the column name of a table that contains more than\none row), each value is examined independently to determine if the value represents seconds, milliseconds, microseconds, or\nnanoseconds.",
        "Unlike the TO_TIME function, the TIME function does not support the optional format parameter.",
        "These examples use the TO_TIME and TIME functions.",
        "This example shows how to use the TO_TIME function to process field separators\nother than the default colons. The example uses the period character as\nthe separator between hours and minutes, and between minutes and seconds:",
        "This example demonstrates how the TO_TIME function interprets a string containing an integer:",
        "Was this page helpful?",
        "On this page"
    ]
}