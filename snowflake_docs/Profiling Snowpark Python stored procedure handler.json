{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/python/profiling-procedure-handlers",
    "title": "Profiling Snowpark Python stored procedure handlers | Snowflake Documentation",
    "paragraphs": [
        "Preview Feature \u2014 Open",
        "The Python profiler is in preview and is available to all accounts.",
        "You can discover how much time or memory was spent executing your handler code by using the built-in code profiler. The profiler generates\ninformation describing how much time or memory was spent executing each line of the procedure handler.",
        "Using the profiler, you can generate reports that focus on one of the following at a time:",
        "Amount of time per line, in which the report shows the number of times a line was executed, how long the execution took, and so on.",
        "Amount of memory usage per line, in which the report shows the amount of memory consumed per line.",
        "The profiler saves the generated report to the Snowflake internal user stage you specify.\nYou can read the profiler output using the StoredProcedureProfiler.get_output\nfunction.",
        "Note",
        "Profiling introduces performance overhead on Python execution and can affect the performance of the query.\nIt\u2019s intended for development and testing and should not be enabled on continuous production workloads.",
        "When a stored procedure is executed after the StoredProcedureProfiler.set_active_profiler function is called, Snowflake checks\nthe following privileges for the user executing the procedure:",
        "You must have read write privileges on the profiling output stage.",
        "If the profiled stored procedure is a caller\u2019s rights stored procedure,\nyou must use a role with USAGE privilege on the stored procedure.",
        "If the profiled stored procedure is an owner\u2019s rights stored procedure,\nyou must use a role with OWNERSHIP privilege on the stored procedure.",
        "Only stored procedures are supported. UDFs support is not available yet.",
        "Recursive profiling is not supported. Only top-level functions of the specified modules are profiled, while functions defined inside\nfunctions are not.",
        "Profiling stored procedures created on the client-side via the snowflake.snowpark API is not supported.",
        "Python functions running in parallel through joblib are not profiled.",
        "System defined stored procedures cannot be profiled. They produce no output.",
        "The profiling API must be used in the same thread as the procedure was called from.",
        "Once you\u2019ve set up the profiler for use, you can use it simply by calling the stored procedure to generate profiler output. After the\nprocedure finishes executing, the profiler\u2019s output is written to a file on the stage you specify. You can fetch the profiler output\nusing a system function, as described below.",
        "Follow these steps in your code to set up and use the profiler:",
        "Acquire a profiler object from the Session object.",
        "Specify the Snowflake stage where profile output should be written.",
        "Enable the profiler and set what the profile report should focus on.",
        "Call the stored procedure.",
        "View profiling output.",
        "In Python, create a variable of type StoredProcedureProfiler with which to configure and run the profiler.",
        "Before running the profiler, you must specify a stage in which to save the output. To specify the stage, call\nStoredProcedureProfiler.set_target_stage, specifying the fully-qualified name of an internal\nSnowflake stage to which the report should be written.",
        "Keep in mind the following:",
        "The stage name must be a fully-qualified name.",
        "If the stage you put into this function does not exist, Snowflake creates a temporary stage with that name.",
        "If you want to preserve the profiler output outside of the scope of the session, create a permanent stage before executing\nset_target_stage and specify that permanent stage\u2019s name in the function call.",
        "If you do not set a target stage with set_target_stage, Snowflake sets the current session\u2019s temporary stage as the target\nstage. To discover that temporary stage, call Session.get_session_stage.",
        "Code in the following example creates a temporary profiler_output stage to receive the profiler output.",
        "Use the StoredProcedureProfiler.set_active_profiler function, specifying a value indicating which kind of profile report you want\nto generate.",
        "To have the profiler report on line use activity, set the parameter to the LINE value (case insensitive), as shown below:",
        "To have the profiler report on memory use activity, set the parameter to the MEMORY value (case insensitive), as shown below:",
        "To disable the profiler, use the StoredProcedureProfiler.disable function.",
        "After the profiler is enabled, call your stored procedure.",
        "At the end of execution, you can access the output using the StoredProcedureProfiler.get_output function.",
        "When profiling, you can include modules that aren\u2019t included by default.",
        "By default, methods defined in the your module are profiled. These methods include the following:",
        "The handler method",
        "Methods defined in the module",
        "Methods imported from packages or other modules",
        "To include additional modules for profiling, use the StoredProcedureProfiler.register_modules function, specifying the modules\nyou want to include.",
        "Code in the following example registers modules module_A and module_B for profiling.",
        "To unregister registered modules, use register_modules with no arguments, as in the following example.",
        "The following examples illustrate how to use the profiler to generate and retrieve a report of line usage.",
        "Code in this example creates a procedure profiler_test_proc.",
        "Code in the following example sets up a profiler, then profiles the profiler_test_proc procedure.",
        "The generated line profiler output looks like this:",
        "Was this page helpful?",
        "On this page"
    ]
}