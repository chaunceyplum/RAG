{
    "url": "https://docs.snowflake.com/en/sql-reference/stored-procedures-python.html#choosing-to-create-a-stored-procedure-with-in-line-code-or-with-code-uploaded-from-a-stage",
    "title": "Writing stored procedures in Python | Snowflake Documentation",
    "paragraphs": [
        "You can write a stored procedure whose handler is coded in Python. By using APIs from the Snowpark library\nwithin your handler, you can perform queries, updates, and other work on Snowflake tables.",
        "With stored procedures, you can build and run your data pipeline within Snowflake, using a Snowflake warehouse\nas the compute framework. Build your data pipeline by using the Snowpark API for Python\nto write stored procedures. To schedule the execution of these stored procedures, you use tasks.",
        "For information about machine learning models and Snowpark Python, see Training Machine Learning Models with Snowpark Python.",
        "You can write stored procedures for Python using a Python worksheet,\nor using a local development environment.",
        "You can capture log and trace data as your handler code executes. For more information, refer to\nLogging, tracing, and metrics.",
        "Note",
        "To both create and call an anonymous procedure, use CALL (with anonymous procedure). Creating and calling an anonymous procedure does\nnot require a role with CREATE PROCEDURE schema privileges.",
        "To write Python stored procedures in your local development environment, meet the following prerequisites:",
        "You must use version 0.4.0 or a more recent version of the Snowpark library.",
        "Enable Anaconda Packages so that Snowpark Python can load the required third-party dependencies. Refer to Using third-party packages from Anaconda.",
        "The supported versions of Python are:",
        "3.9",
        "3.10",
        "3.11",
        "Be sure to set up your development environment to use the Snowpark library.\nRefer to Setting Up Your Development Environment for Snowpark.",
        "You can specify Anaconda packages to install when you create Python stored procedures. To view the list of third-party packages\nfrom Anaconda, see the Anaconda Snowflake channel.\nThese third-party packages are built and provided by Anaconda.\nYou may use the Snowflake conda channel for local testing and development at no cost under the Supplemental Embedded Software Terms to Anaconda\u2019s Terms of Service.",
        "For limitations, see Python stored procedure limitations.",
        "Before you start using the packages provided by Anaconda inside Snowflake, you must acknowledge\nthe External Offerings Terms.",
        "Note",
        "You must use the ORGADMIN role to accept the terms. You only need to accept the\nExternal Offerings Terms once for your Snowflake account. If you do not have\naccess to the ORGADMIN role, see Enabling the ORGADMIN role in an account.",
        "Sign in to Snowsight.",
        "Select Admin \u00bb Billing & Terms.",
        "In the Anaconda section, select Enable.",
        "In the Anaconda Packages dialog, click the link to review the External Offerings Terms page.",
        "If you agree to the terms, select Acknowledge & Continue.",
        "If you encounter an error when attempting to accept the External Offerings Terms,\nit may be due to missing information in your user profile, such as a first name, last name, or email address. If you have administrator\nprivileges, see Add user details to your user profile to update your profile using Snowsight. Otherwise, contact an\nadministrator to update your account.",
        "Note",
        "If you don\u2019t acknowledge the Snowflake External Offerings Terms as described\nabove, you can still use stored procedures, but with these limitations:",
        "You can\u2019t use any third-party packages from Anaconda.",
        "You can still specify Snowpark Python as a package in a stored procedure, but you can\u2019t specify a specific version.",
        "You can\u2019t use the to_pandas method when interacting with a DataFrame object.",
        "You can display all available packages and their version information by querying the PACKAGES view in the Information Schema:",
        "For more information, see Using third-party packages in the Snowflake Python UDF documentation.",
        "After creating a stored procedure, you can call it in the following ways:",
        "From SQL.",
        "As part of a scheduled task.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}