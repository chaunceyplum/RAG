{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-authentication-policy",
    "title": "ALTER AUTHENTICATION POLICY | Snowflake Documentation",
    "paragraphs": [
        "Modifies the properties of an authentication policy.",
        "CREATE AUTHENTICATION POLICY, DESCRIBE AUTHENTICATION POLICY, DROP AUTHENTICATION POLICY, SHOW AUTHENTICATION POLICIES",
        "Specifies the identifier for the authentication policy to alter. If the identifier contains spaces or special characters, you must enclose\nthe string in double quotation marks. Identifiers enclosed in double quotation marks are case-sensitive. The identifier must meet the\nidentifier requirements.",
        "Specifies a new name for an existing authentication policy.",
        "Specifies one or more properties to set for the authentication policy, separated by blank spaces, commas, or new lines.",
        "Changes the authentication methods that are allowed during login. This parameter accepts one or more of the following values:",
        "Caution",
        "Restricting by authentication method can have unintended consequences, such as blocking driver connections or third-party\nintegrations.",
        "Allow all authentication methods.",
        "Allows SAML2 security integrations. If SAML is\npresent, an SSO login option appears. If SAML is not present, an SSO login option does not appear.",
        "Allows users to authenticate using username and password.",
        "Allows External OAuth.",
        "Allows Key pair authentication.",
        "Default: ALL.",
        "A list of authentication methods that enforce multi-factor authentication (MFA) during login. Authentication methods not listed in this\nparameter do not prompt for multi-factor authentication.",
        "The following authentication methods support MFA:",
        "SAML",
        "PASSWORD",
        "This parameter accepts one or more of the following values:",
        "Prompts users for MFA, if they are enrolled in MFA, when authenticating with\nSAML2 security integrations.",
        "Prompts users for MFA, if they are enrolled in MFA, when authenticating with a username and password.",
        "Default: ('PASSWORD', 'SAML').",
        "Changes whether a user must enroll in multi-factor authentication.",
        "Enforces users to enroll in MFA. If this value is used, then the CLIENT_TYPES parameter must include SNOWFLAKE_UI,\nbecause Snowsight is the only place users can\nenroll in multi-factor authentication (MFA).",
        "Users can choose whether to enroll in MFA.",
        "Default: OPTIONAL.",
        "Changes which clients can authenticate with Snowflake.",
        "The CLIENT_TYPES property of an authentication policy is a best effort method to block user logins based on specific clients. It should not be used as the sole control to establish a security boundary.",
        "This property accepts one or more of the following values:",
        "Allow all clients to authenticate.",
        "Snowsight or Classic Console, the Snowflake web interfaces.",
        "Caution",
        "If SNOWFLAKE_UI is not included in the CLIENT_TYPES list, MFA enrollment does not work.",
        "Drivers allow access to Snowflake from applications written in\nsupported languages. For example, the Go,\nJDBC, .NET drivers, and\nSnowpipe Streaming.",
        "Caution",
        "If DRIVERS is not included in the CLIENT_TYPES list, automated ingestion may stop working.",
        "A command-line client for connecting to Snowflake.",
        "If a client tries to connect, and the client is not one of the valid CLIENT_TYPES, then the login attempt fails. If\nCLIENT_TYPES is unset, any client can connect.",
        "Default: ALL.",
        "Changes the security integrations that the authentication policy is associated with. This parameter has no effect when SAML\nor OAUTH are not in the AUTHENTICATION_METHODS list.",
        "All values in the SECURITY_INTEGRATIONS list must be compatible with the values in the AUTHENTICATION_METHODS list. For\nexample, if SECURITY_INTEGRATIONS contains a SAML security integration, and AUTHENTICATION_METHODS contains\nOAUTH, then you cannot create the authentication policy.",
        "Allow all security integrations.",
        "Default: ALL.",
        "Changes the comment for the authentication policy.",
        "Specifies the properties to unset for the authentication policy, which resets them to their defaults.",
        "A role used to execute this SQL command must have the following\nprivileges at a minimum:",
        "Privilege",
        "Object",
        "Notes",
        "OWNERSHIP",
        "Authentication policy",
        "Only the SECURITYADMIN role, or a higher role, has this privilege by default. The privilege can be granted to additional roles as needed.",
        "The USAGE privilege on the parent database and schema are required to perform operations on any object in a schema.",
        "For instructions on creating a custom role with a specified set of privileges, see Creating custom roles.",
        "For general information about roles and privilege grants for performing SQL actions on\nsecurable objects, see Overview of Access Control.",
        "If you want to update an existing authentication policy and need to see the definition of the policy, run the\nDESCRIBE AUTHENTICATION POLICY command or GET_DDL function.",
        "Alter the list of allowed clients on an authentication policy:",
        "Was this page helpful?",
        "On this page"
    ]
}