{
    "url": "https://docs.snowflake.com/en/developer-guide/logging-tracing/event-table-setting-up",
    "title": "Event table overview | Snowflake Documentation",
    "paragraphs": [
        "As your Snowflake objects \u2014 including procedures and UDFs \u2014 emit telemetry data, Snowflake collects the data in an event table whose\ndata is available for queries. Snowflake includes an event table by default, but you can also create a new one.",
        "To collect telemetry data, you must have an active event table and have\nset telemetry levels to allow data collection. If you don\u2019t already have an active event table,\nSnowflake makes the default event table the active event table.",
        "When collecting telemetry data, you incur costs. To understand these costs \u2014 or to reduce or avoid these costs \u2014 see\nCosts of telemetry data collection.",
        "An event table is a special kind of database table with a predefined set of columns. The table\u2019s structure\nsupports the data model for OpenTelemetry, a framework for handling telemetry data. When an\nevent table is active, Snowflake collects telemetry data in the table \u2014 including data that\nSnowflake itself generates and data that you emit by instrumenting your handler code using certain APIs. You can view the collected data\nby executing SQL queries.",
        "After installation, Snowflake includes a default event table called\nSNOWFLAKE.TELEMETRY.EVENTS. This event table is active and collects data until you deactivate it. You can also\ncreate your own.",
        "To collect telemetry data, you must have an active event table. For more information, see Make an event table active.",
        "By default, Snowflake includes a default event table named SNOWFLAKE.TELEMETRY.EVENTS. You can use this event table instead of\ncreating your own. If you do not already have an active event table, Snowflake makes the default table the active event table.",
        "By default, Snowflake also includes a predefined view called SNOWFLAKE.TELEMETRY.EVENTS_VIEW view,\nwith which you more securely make event table data available to a range of users. You can manage access to the view with\na row access policy.",
        "Note",
        "The default event table supports only a subset of DDL commands supported for event tables you create or for regular tables. For more\ninformation, see Working with event tables.",
        "Snowflake includes the following predefined application roles you can use to manage access to the default event table and EVENTS_VIEW view.",
        "Role with privileges to execute a SELECT statement on the EVENTS_VIEW view.",
        "Role with the following privileges:",
        "SELECT, TRUNCATE, DELETE on the default event table.",
        "SELECT on the EVENTS_VIEW view of the default event table.",
        "USAGE on the following stored procedures:",
        "ADD_ROW_ACCESS_POLICY_ON_EVENTS_VIEW",
        "DROP_ROW_ACCESS_POLICY_ON_EVENTS_VIEW",
        "This role also has privileges to execute a stored procedure to apply a row access policy (RAP) on the EVENTS_VIEW view\nwhose data is based on the default event table.",
        "You can manage access to data in the EVENTS_VIEW view with\nrow access policies. Snowflake provides stored procedures you can use to add and remove a row\naccess policy to the EVENT_VIEW view.",
        "ADD_ROW_ACCESS_POLICY_ON_EVENTS_VIEW(VARCHAR, ARRAY)\n\u2014 Binds a row access policy to the specified columns in the EVENTS_VIEW.",
        "DROP_ROW_ACCESS_POLICY_ON_EVENTS_VIEW(VARCHAR)\n\u2014 Deletes the specified row access policy bound to the EVENTS_VIEW.",
        "Note",
        "You must have the EVENTS_ADMIN role to execute these procedures.",
        "Using row access policies on the EVENT_VIEW view is an Enterprise Edition feature.",
        "To create a new event table, execute the CREATE EVENT TABLE command and specify a name for the event table.",
        "Note that when you create an event table, you do not specify the columns in the table. An event table already has a set of predefined\ncolumns, as described in Event table columns.",
        "You must use a role that is granted CREATE EVENT TABLE privilege.",
        "Note",
        "Replication of event tables is not currently supported. Any event tables that are contained in primary databases\nare skipped during replication.",
        "For example, to create an event table with the name my_events, execute the following statement:",
        "To enable storage of telemetry data, you must specify that an event table is an active event table.",
        "To specify the active event table for your account, execute the ALTER ACCOUNT command, and set the\nEVENT_TABLE parameter to the name of your event table.",
        "Note",
        "In order to execute this command, you must use the ACCOUNTADMIN role.",
        "In addition, you must have both of the following privileges:",
        "OWNERSHIP privilege for the account.",
        "OWNERSHIP or INSERT privileges for the event table.",
        "See the documentation on the ALTER ACCOUNT command for more information on the\nprivileges needed to execute ALTER ACCOUNT.",
        "For example, to set up the event table named my_events in the schema my_schema in the database my_database as\nthe active event table for your account, execute the following statement:",
        "As shown above, you must specify the fully qualified name of the event table.",
        "To disassociate an event table from an account, execute the ALTER ACCOUNT command and unset the EVENT_TABLE parameter. For example:",
        "You can confirm the EVENT_TABLE value with the SHOW PARAMETERS command:",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}