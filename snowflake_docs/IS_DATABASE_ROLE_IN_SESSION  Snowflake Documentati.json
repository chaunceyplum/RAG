{
    "url": "https://docs.snowflake.com/en/sql-reference/functions/is_database_role_in_session",
    "title": "IS_DATABASE_ROLE_IN_SESSION | Snowflake Documentation",
    "paragraphs": [
        "Context functions (Session Object)",
        "Verifies whether the database role is in the user\u2019s active primary or secondary role hierarchy for the current session or if the specified\ncolumn contains a database role that is in the user\u2019s active primary or secondary role hierarchy for the current session.",
        "IS_ROLE_IN_SESSION, IS_APPLICATION_ROLE_IN_SESSION",
        "Literal \u2014 specify a database role directly:",
        "Nonliteral \u2014 specify a column:",
        "The name of the database role.",
        "Specify the relative name of the database role. The function evaluates to False if you specify the fully qualified name.",
        "The column name in a table or view.",
        "For a literal argument (database role name), the current user\u2019s active\nprimary role or secondary roles in the session inherits the privileges of the\nspecified database role.",
        "For a nonliteral argument (column name), Snowflake evaluates each row in the table and returns a row that contains a value that\nspecifies a database role in the user\u2019s current session. Each row corresponds to a database role name that originates from the\ndatabase in use or the specified database in a query.",
        "For a literal argument, the specified database role is not in the role hierarchy of the current user\u2019s primary role or secondary\nroles.",
        "For a nonliteral argument, Snowflake does not return a row if the database role is not in the table column for the database in use or\nthe database specified in a query.",
        "Specifying the fully qualified name of a database role in the format database_name.database_role_name. Use the relative\nname instead, database_role_name.",
        "These notes only apply to the IS_DATABASE_ROLE_IN_SESSION function:",
        "Use this table to predict the evaluation of the function when the function argument is a string literal:",
        "Context",
        "Evaluation",
        "Query.",
        "Session database.",
        "Table or view definition with WHERE clause.",
        "Depends on the following:",
        "If you have a database in use and you use the relative name of the table or view, the context is the database in use\n(session database).",
        "If you specify the fully-qualified name of the table or view, the context is the database that contains the table or view.",
        "Protected table or view.",
        "Database containing the table or view.",
        "Owner\u2019s Rights stored procedure.",
        "Database containing the stored procedure.",
        "Caller\u2019s Rights stored procedure.",
        "Session database.",
        "UDF",
        "Database containing the protected table or view.",
        "If the UDF is not called in a policy, the function evaluates to the database that contains the UDF.",
        "A database role becomes active in the role hierarchy when the database containing the database role is in use or when querying a table in\nthe same database that contains the database role.",
        "If you are a data sharing consumer and you are using a database role to query policy-protected data, load the database containing the\nprotected table with a USE DATABASE database_name command before querying the policy-protected data. For details, see\nShare data protected by a policy.",
        "When you specify this function in the body of a data access policy, such as a masking or row access policy, the function uses\nthe database and schema of the protected table.",
        "For example, if you add a row access policy to the hr.tables.empl_info table, the function searches for its argument, the\ndatabase role name or the column name, in the hr database because that database contains the protected table.",
        "You should avoid query structures that require Snowflake to create an inline view. In this context, an inline view is a temporary view\nthat Snowflake creates to determine the query result. For example, if your query calls this function and you specify a WITH clause at the\nbeginning of the query or specify a subquery in the FROM clause, Snowflake returns an error:",
        "Where {} is a placeholder for the function argument in your query. The reason for the error is that Snowflake does not have\nenough information to evaluate the context of the function argument. To resolve the error message, simplify your query, such as removing\nthe WITH clause or removing the subquery in the FROM clause.",
        "When the user property DEFAULT_SECONDARY_ROLES value is ALL, the function returns\nTrue if any account role granted to the user inherits the privileges of the specified database role.",
        "When using this function in the condition of a masking policy or row access policy that protects shared data, ensure the database\ncontaining the policy and the policy-protected data are both shared to the consumer account. The policy and the policy-protected data can\nbe in the same database or in different databases. For details, see Share data protected by a policy.",
        "These notes apply to both the IS_DATABASE_ROLE_IN_SESSION and IS_ROLE_IN_SESSION functions:",
        "Use one syntax.",
        "Literal syntax:",
        "Only one database role name can be passed as an argument.",
        "The argument must be a string and use the same casing as how the role is stored in Snowflake. For details, see\nIdentifier requirements.",
        "The name of an account role is not supported.",
        "Nonliteral syntax:",
        "Only one column can be passed as an argument.",
        "The column must have a STRING data type.",
        "Specify the column as one of the following:",
        "column_name",
        "table_name.column_name",
        "schema_name.table_name.column_name",
        "database_name.schema_name.table_name.column_name",
        "Virtual columns:",
        "A virtual column, which contains the result of a calculated value from an expression rather than the calculated value being stored in the\ntable, is not supported.",
        "A virtual column is supported only when the expression has an alias for the column name:",
        "Policies:",
        "If you use these functions with a masking policy or\nrow access policy, verify that your Snowflake account is Enterprise Edition or higher.",
        "Snowflake recommends using this function when the policy conditions need to evaluate role hierarchy and inherited privileges.",
        "Result cache:",
        "If you use this function in a masking policy or row access policy and neither the policy nor the table or column protected by the policy\nchange from a previous query, you can use the RESULT_SCAN function to return the results of a query on\nthe protected table. The result cache applies when using the nonliteral syntax only.",
        "These functions cannot be used in the materialized view definition because the functions are not deterministic and Snowflake cannot\ndetermine what data to materialize.",
        "Verify if the privileges granted to a specified role are inherited by the current role in the session:",
        "Return database role values for the column named ROLE_NAME:",
        "For additional examples related to secure data sharing, see Share data protected by a policy.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}