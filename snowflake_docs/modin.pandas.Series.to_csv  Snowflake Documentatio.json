{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/reference/python/1.26.0/modin/pandas_api/modin.pandas.Series.to_csv",
    "title": "modin.pandas.Series.to_csv | Snowflake Documentation",
    "paragraphs": [
        "Write object to a comma-separated values (csv) file. This can write csv file\neither to local filesystem or to snowflake stage. Filepath staring with @ is\ntreated as snowflake stage location.",
        "Note: Writing to local filesystem supports all parameters but writing to\nsnowflake stage does not support float_format, mode, encoding, quoting,\nquotechar, lineterminator, doublequote and decimal parameters. Also when\nwriting to snowflake stage chucksize, errors and storage_options parameters\nare ignored.",
        "path_or_buf (str, path object, file-like object, or None, default None) \u2013 String, path object (implementing os.PathLike[str]), or file-like\nobject implementing a write() function. If None, the result is\nreturned as a string. If a non-binary file object is passed, it should\nbe opened with newline=\u2019\u2019, disabling universal newlines. If a binary\nfile object is passed, mode might need to contain a \u2018b\u2019.",
        "sep (str, default ',') \u2013 String of length 1. Field delimiter for the output file.",
        "na_rep (str, default '') \u2013 Missing data representation.",
        "float_format (str, Callable, default None) \u2013 Format string for floating point numbers. If a Callable is given, it takes\nprecedence over other numeric formatting parameters, like decimal.",
        "header (bool or list of str, default True) \u2013 Write out the column names. If a list of strings is given it is\nassumed to be aliases for the column names.",
        "index (bool, default True) \u2013 Write row names (index).",
        "index_label (str or sequence, or False, default None) \u2013 Column label for index column(s) if desired. If None is given, and\nheader and index are True, then the index names are used. A\nsequence should be given if the object uses MultiIndex. If\nFalse do not print fields for index names. Use index_label=False\nfor easier importing in R.",
        "mode ({{'w', 'x', 'a'}}, default 'w') \u2013",
        "Forwarded to either open(mode=) or fsspec.open(mode=) to control\nthe file opening. Typical values include:",
        "\u2019w\u2019, truncate the file first.",
        "\u2019x\u2019, exclusive creation, failing if the file already exists.",
        "\u2019a\u2019, append to the end of file if it exists.",
        "",
        "encoding (str, optional) \u2013 A string representing the encoding to use in the output file,\ndefaults to \u2018utf-8\u2019. encoding is not supported if path_or_buf\nis a non-binary file object.",
        "compression (str or dict, default 'infer') \u2013",
        "For on-the-fly compression of the output data. If \u2018infer\u2019 and \u2018%s\u2019 is\npath-like, then detect compression from the following extensions: \u2018.gz\u2019,\n\u2018.bz2\u2019, \u2018.zip\u2019, \u2018.xz\u2019, \u2018.zst\u2019, \u2018.tar\u2019, \u2018.tar.gz\u2019, \u2018.tar.xz\u2019 or \u2018.tar.bz2\u2019\n(otherwise no compression).\nSet to None for no compression.\nCan also be a dict with key 'method' set\nto one of {'zip', 'gzip', 'bz2', 'zstd', 'xz', 'tar'} and\nother key-value pairs are forwarded to\nzipfile.ZipFile, gzip.GzipFile,\nbz2.BZ2File, zstandard.ZstdCompressor, lzma.LZMAFile or\ntarfile.TarFile, respectively.\nAs an example, the following could be passed for faster compression and to create\na reproducible gzip archive:\ncompression={'method': 'gzip', 'compresslevel': 1, 'mtime': 1}.",
        "Note: Supported compression algorithms are different when writing to\nsnowflake stage.\nPlease refer to https://docs.snowflake.com/en/sql-reference/sql/copy-into-table#type-csv\nfor supported compression algorithms.",
        "",
        "quoting (optional constant from csv module) \u2013 Defaults to csv.QUOTE_MINIMAL. If you have set a float_format\nthen floats are converted to strings and thus csv.QUOTE_NONNUMERIC\nwill treat them as non-numeric.",
        "quotechar (str, default '\"') \u2013 String of length 1. Character used to quote fields.",
        "lineterminator (str, optional) \u2013 The newline character or character sequence to use in the output\nfile. Defaults to os.linesep, which depends on the OS in which\nthis method is called (\u2019n\u2019 for linux, \u2018rn\u2019 for Windows, i.e.).",
        "chunksize (int or None) \u2013 Rows to write at a time.",
        "date_format (str, default None) \u2013 Format string for datetime objects.",
        "doublequote (bool, default True) \u2013 Control quoting of quotechar inside a field.",
        "escapechar (str, default None) \u2013 String of length 1. Character used to escape sep and quotechar\nwhen appropriate.",
        "decimal (str, default '.') \u2013 Character recognized as decimal separator. E.g. use \u2018,\u2019 for\nEuropean data.",
        "errors (str, default 'strict') \u2013 Specifies how encoding and decoding errors are to be handled.\nSee the errors argument for open() for a full list\nof options.",
        "storage_options (dict, optional) \u2013 Extra options that make sense for a particular storage connection, e.g.\nhost, port, username, password, etc. For HTTP(S) URLs the key-value pairs\nare forwarded to urllib.request.Request as header options. For other\nURLs (e.g. starting with \u201cs3://\u201d, and \u201cgcs://\u201d) the key-value pairs are\nforwarded to fsspec.open. Please see fsspec and urllib for more\ndetails, and for more examples on storage options refer here.",
        "If path_or_buf is None, returns the resulting csv format as a\nstring. Otherwise returns None.",
        "None or str",
        "See also",
        "Load a CSV file into a DataFrame.",
        "Write DataFrame to an Excel file.",
        "Examples",
        "Create \u2018out.csv\u2019 containing \u2018series\u2019 without indices",
        "Create \u2018out.zip\u2019 containing \u2018out.csv\u2019",
        "To write a csv file to a new folder or nested folder you will first\nneed to create it using either Pathlib or os:",
        "Was this page helpful?"
    ]
}