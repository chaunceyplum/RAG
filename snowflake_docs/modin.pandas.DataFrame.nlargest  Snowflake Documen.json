{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/reference/python/1.26.0/modin/pandas_api/modin.pandas.DataFrame.nlargest",
    "title": "modin.pandas.DataFrame.nlargest | Snowflake Documentation",
    "paragraphs": [
        "Return the first n rows ordered by columns in descending order.",
        "Return the first n rows with the largest values in columns, in\ndescending order. The columns that are not specified are returned as\nwell, but not used for ordering.",
        "This method is equivalent to\ndf.sort_values(columns, ascending=False).head(n)",
        "n (int) \u2013 Number of rows to return.",
        "columns (label or list of labels) \u2013 Column label(s) to order by.",
        "keep ({'first', 'last', 'all'}, default 'first') \u2013",
        "Where there are duplicate values:",
        "first : prioritize the first occurrence(s)",
        "last : prioritize the last occurrence(s)",
        "all : keep all the ties of the smallest item even if it means\nselecting more than n items.",
        "",
        "The first n rows ordered by the given columns in descending\norder.",
        "DataFrame",
        "See also",
        "Return the first n rows ordered by columns in ascending order.",
        "Sort DataFrame by the values.",
        "Return the first n rows without re-ordering.",
        "Examples",
        "In the following example, we will use nlargest to select the three\nrows having the largest values in column \u201cpopulation\u201d.",
        "When using keep='last', ties are resolved in reverse order:",
        "When using keep='all', the number of element kept can go beyond n\nif there are duplicate values for the smallest element, all the\nties are kept:",
        "However, nlargest does not keep n distinct largest elements:",
        "To order by the largest values in column \u201cpopulation\u201d and then \u201cGDP\u201d,\nwe can specify multiple columns like in the next example.",
        "Was this page helpful?"
    ]
}