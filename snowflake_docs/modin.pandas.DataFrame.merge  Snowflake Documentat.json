{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/reference/python/1.26.0/modin/pandas_api/modin.pandas.DataFrame.merge",
    "title": "modin.pandas.DataFrame.merge | Snowflake Documentation",
    "paragraphs": [
        "Merge DataFrame or named Series objects with a database-style join.",
        "A named Series object is treated as a DataFrame with a single named column.",
        "The join is done on columns or indexes. If joining columns on\ncolumns, the DataFrame indexes will be ignored. Otherwise if joining indexes\non indexes or indexes on a column or columns, the index will be passed on.\nWhen performing a cross merge, no column specifications to merge on are\nallowed.",
        "Warning",
        "If both key columns contain rows where the key is a null value, those\nrows will be matched against each other. This is different from usual SQL\njoin behaviour and can lead to unexpected results.",
        "right (DataFrame or named Series) \u2013 Object to merge with.",
        "how ({'left', 'right', 'outer', 'inner', 'cross'}, default 'inner') \u2013",
        "Type of merge to be performed.",
        "left: use only keys from left frame, similar to a SQL left outer join;\npreserve key order.",
        "right: use only keys from right frame, similar to a SQL right outer join;\npreserve key order.",
        "outer: use union of keys from both frames, similar to a SQL full outer\njoin; sort keys lexicographically.",
        "inner: use intersection of keys from both frames, similar to a SQL inner\njoin; preserve the order of the left keys.",
        "cross: creates the cartesian product from both frames, preserves the order\nof the left keys.",
        "",
        "on (label or list) \u2013 Column or index level names to join on. These must be found in both\nDataFrames. If on is None and not merging on indexes then this defaults\nto the intersection of the columns in both DataFrames.",
        "left_on (label or list, or array-like) \u2013 Column or index level names to join on in the left DataFrame. Can also\nbe an array or list of arrays of the length of the left DataFrame.\nThese arrays are treated as if they are columns.",
        "right_on (label or list, or array-like) \u2013 Column or index level names to join on in the right DataFrame. Can also\nbe an array or list of arrays of the length of the right DataFrame.\nThese arrays are treated as if they are columns.",
        "left_index (bool, default False) \u2013 Use the index from the left DataFrame as the join key(s). If it is a\nMultiIndex, the number of keys in the other DataFrame (either the index\nor a number of columns) must match the number of levels.",
        "right_index (bool, default False) \u2013 Use the index from the right DataFrame as the join key. Same caveats as\nleft_index.",
        "sort (bool, default False) \u2013 Sort the join keys lexicographically in the result DataFrame. If False,\nthe order of the join keys depends on the join type (how keyword).",
        "suffixes (list-like, default is (\"_x\", \"_y\")) \u2013 A length-2 sequence where each element is optionally a string\nindicating the suffix to add to overlapping column names in\nleft and right respectively. Pass a value of None instead\nof a string to indicate that the column name from left or\nright should be left as-is, with no suffix. At least one of the\nvalues must not be None.",
        "copy (bool, default True) \u2013 This argument is ignored in Snowpark pandas.",
        "indicator (bool or str, default False) \u2013 If True, adds a column to the output DataFrame called \u201c_merge\u201d with\ninformation on the source of each row. The column can be given a different\nname by providing a string argument. The column will have a Categorical\ntype with the value of \u201cleft_only\u201d for observations whose merge key only\nappears in the left DataFrame, \u201cright_only\u201d for observations\nwhose merge key only appears in the right DataFrame, and \u201cboth\u201d\nif the observation\u2019s merge key is found in both DataFrames.",
        "validate (str, optional) \u2013 This argument is not yet supported in Snowpark pandas.",
        "A DataFrame of the two merged objects.",
        "DataFrame",
        "See also",
        "Merge with optional filling/interpolation.",
        "Merge on nearest keys.",
        "Similar method using indices.",
        "Examples",
        "Merge df1 and df2 on the lkey and rkey columns. The value columns have\nthe default suffixes, _x and _y, appended.",
        "Merge DataFrames df1 and df2 with specified left and right suffixes\nappended to any overlapping columns.",
        "Was this page helpful?"
    ]
}