{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/alter-function",
    "title": "ALTER FUNCTION | Snowflake Documentation",
    "paragraphs": [
        "Modifies the properties of an existing user-defined or external function.",
        "To make any other changes to a UDF, you must drop the function (using DROP FUNCTION) and then recreate it.",
        "Writing external functions, User-defined functions overview, CREATE FUNCTION , DROP FUNCTION ,\nSHOW USER FUNCTIONS , DESCRIBE FUNCTION,  CREATE EXTERNAL FUNCTION ,\nDESCRIBE FUNCTION , DROP FUNCTION , SHOW EXTERNAL FUNCTIONS",
        "The syntax for ALTER FUNCTION varies depending on which language you\u2019re using as the UDF handler.",
        "Specifies the identifier for the UDF to alter. The identifier can contain the schema name and database name, as well as the function name.\nIf the identifier contains spaces or special characters, the entire string must be enclosed in double quotes. Identifiers enclosed in\ndouble quotes are also case-sensitive.",
        "Specifies the arguments/input data types for the external function.",
        "If the function accepts arguments, then the ALTER command must specify the argument types because functions support\nname overloading (i.e. two functions in the same schema can have the same name), and the argument types are used to\nidentify the function.",
        "Specifies the properties to set for the function:",
        "Specifies whether a function is secure. For more details, see Protecting Sensitive Information with Secure UDFs and Stored Procedures.",
        "Specifies the severity level of messages that should be ingested and made available in the active event table. Messages at\nthe specified level (and at more severe levels) are ingested.",
        "For more information about levels, see LOG_LEVEL. For information about setting log level, see\nSetting levels for logging, metrics, and tracing.",
        "Controls how trace events are ingested into the event table.",
        "For information about levels, see TRACE_LEVEL. For information about setting trace level, see\nSetting levels for logging, metrics, and tracing.",
        "The names of external access integrations needed in order for this\nfunction\u2019s handler code to access external networks.",
        "An external access integration contains network rules and\nsecrets that specify the external locations and credentials (if any) needed for handler code\nto make requests of an external network, such as an external REST API.",
        "For more information, refer to External network access overview.",
        "Assigns the names of secrets to variables so that you can use the variables to reference the secrets when retrieving information from\nsecrets in handler code.",
        "This parameter\u2019s value is a list of assignment expressions with the following parts:",
        "secret_name as the name of a secret specified in an\nexternal access integration\u2019s ALLOWED_AUTHENTICATION_SECRETS parameter\nvalue. That external access integration\u2019s name must, in turn, be specified as a value of this CREATE FUNCTION call\u2019s\nEXTERNAL_ACCESS_INTEGRATIONS parameter.",
        "You will receive an error if you specify a SECRETS value whose secret isn\u2019t also included in an integration specified by the\nEXTERNAL_ACCESS_INTEGRATIONS parameter.",
        "'secret_variable_name' as the variable that will be used in handler code when retrieving information from the secret.",
        "Adds a comment or overwrites the existing comment for the function. The value you specify is displayed in the DESCRIPTION\ncolumn in the SHOW FUNCTIONS and SHOW USER FUNCTIONS output.",
        "Specifies the tag name and the tag string value.",
        "The tag value is always a string, and the maximum number of characters for the tag value is 256.",
        "For information about specifying tags in a statement, see Tag quotas for objects and columns.",
        "Specifies the properties to unset for the function, which resets them to the defaults.",
        "Specifies the new identifier for the UDF; the combination of the identifier and existing argument data types must be unique for the schema.",
        "For more details, see Identifier requirements.",
        "Note",
        "When specifying the new name for the UDF, do not specify argument data types or parentheses; specify only the new name.",
        "You can move the object to a different database and/or schema while optionally renaming the object. To do so, specify\na qualified new_name value that includes the new database and/or schema name in the form\ndb_name.schema_name.object_name or schema_name.object_name, respectively.",
        "Note",
        "The destination database and/or schema must already exist. In addition, an object with the same name cannot already\nexist in the new location; otherwise, the statement returns an error.",
        "Moving an object to a managed access schema is prohibited unless the object owner (that is, the role that has\nthe OWNERSHIP privilege on the object) also owns the target schema.",
        "When an object is renamed, other objects that reference it must be updated with the new name.",
        "Specifies the new identifier for the function.",
        "The identifier does not need to be unique for the schema in which the function is created because functions are\nidentified and resolved by their name and argument types. However, the signature (name and parameter data types)\nmust be unique within the schema.",
        "The name must follow the rules for Snowflake identifiers.\nFor more details, see Identifier requirements.",
        "Note",
        "When specifying the new name for the external function, do not specify argument data types or parentheses;\nthe function will continue using the same arguments as before.",
        "This is the name of the API integration object that should be used to authenticate the call to the proxy service.",
        "More details about this parameter are in CREATE EXTERNAL FUNCTION.",
        "This clause allows users to attach key-value metadata that is sent with every request.",
        "The value must be a constant string, not an expression.",
        "More details about this parameter are in CREATE EXTERNAL FUNCTION.",
        "This is similar to HEADERS, but instead of allowing only constant strings, it allows binding Snowflake\ncontext function results to HTTP headers.",
        "Each value must be the name of a context function. The names should not be quoted.",
        "More details about this parameter are in CREATE EXTERNAL FUNCTION.",
        "If this clause is specified, the JSON payload is compressed using the specified format when sent from Snowflake to\nthe proxy service, and when sent back from the proxy service to Snowflake.",
        "For more details about valid values of compression_type, see CREATE EXTERNAL FUNCTION.",
        "Add a request translator or a response translator if the external function does not already have one or replace an existing request translator\nor response translator by specifying the name of a previously-created JavaScript UDF.\nFor more information, see Using request and response translators with data for a remote service.",
        "A role used to execute this SQL command must have the following\nprivileges at a minimum:",
        "Privilege",
        "Object",
        "Notes",
        "USAGE",
        "Function",
        "Enables calling a UDF or external function.",
        "APPLY",
        "Tag",
        "Enables setting a tag on the UDF or external function.",
        "The USAGE privilege on the parent database and schema are required to perform operations on any object in a schema.",
        "For instructions on creating a custom role with a specified set of privileges, see Creating custom roles.",
        "For general information about roles and privilege grants for performing SQL actions on\nsecurable objects, see Overview of Access Control.",
        "Regarding metadata:",
        "Attention",
        "Customers should ensure that no personal data (other than for a User object), sensitive data, export-controlled data, or other regulated data is entered as metadata when using the Snowflake service. For more information, see Metadata fields in Snowflake.",
        "If using a UDF in a masking policy, ensure the data type of the column, UDF, and masking policy match. For\nmore information, see User-defined functions in a masking policy.",
        "There is no UNSET command for API_INTEGRATION. You can change the API_INTEGRATION, but you cannot unset it. For more, see\nALTER API INTEGRATION.",
        "Rename the function function1 to function2:",
        "Convert a regular function function2 to a secure function:",
        "Change the API Integration for an external function:",
        "Set the maximum number of rows per batch for an external function:",
        "Was this page helpful?",
        "On this page"
    ]
}