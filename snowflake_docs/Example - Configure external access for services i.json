{
    "url": "https://docs.snowflake.com/en/developer-guide/native-apps/container-eai-example",
    "title": "Example - Configure external access for services in an app with containers | Snowflake Documentation",
    "paragraphs": [
        "Feature \u2014 Generally Available",
        "The Snowflake Native App Framework is generally available on supported cloud platforms. For additional information, see\nSupport for private connectivity, VPS, and government regions.",
        "This topic describes how to grant access to an endpoint that is external to Snowflake in an\napp with containers. This example uses external access integrations and secrets to allow access to\nthe endpoint.",
        "To grant access to an external endpoint in an app with containers, providers must define reference to the\nfollowing objects:",
        "EXTERNAL ACCESS INTEGRATION",
        "Defines a list of network rules that specify the domain names of external endpoints. An external access\nintegration can also specify a list of secrets that store the credentials used to access these endpoints.\nSecrets are optional and can be set to NONE or ALL.",
        "In the context of an app with containers, external access integrations require the USAGE privilege.",
        "Note",
        "The multi_valued property cannot be set to TRUE. Only single-valued references are supported.",
        "SECRET",
        "Contains the credentials required to use the external access integration to connect to an\nexternal endpoint.",
        "In the context of an app with containers, secrets support the USAGE and READ privileges. At least one\nof these privileges must be specified. The READ privilege must be specified if the secret is used with\na service or is attached to a stored procedure or user-defined function.",
        "The following example shows how a provider defines an external access integration in the manifest file:",
        "This example specifies the following properties, among others, under references:",
        "my_external_access: Specifies the name of the external reference.",
        "privileges: Lists the privileges required by the external access\nintegration. In this example, the USAGE privilege is required.",
        "object_type: EXTERNAL ACCESS INTEGRATION: Indicates a reference to an external access integration.",
        "required_at_setup: Indicates that the consumer must\nauthorize access on the object before the app can create the object when set to true.",
        "register_callback: Specifies the callback stored procedure used to register the reference\nwith the app.",
        "configuration_callback: Specifies the configuration callback function for the secret. See\nAdd the configuration_callback function to the setup script for more information.",
        "The following example shows how a provider defines a secret in the manifest file:",
        "This example specifies the following properties, among others, under references:",
        "consumer_secret: Specifies the name of the reference.",
        "privileges: Lists the privileges required by the secret. In this example, the READ\nprivilege is specified.",
        "object_type: SECRET: Indicates that the reference is a secret.",
        "register_callback: Specifies the callback stored procedure used to register the reference\nwith the app.",
        "configuration_callback: Specifies the configuration callback function for the secret. See\nAdd the configuration_callback function to the setup script for more information.",
        "After adding references for the secret and external access integration, you must add the\nconfiguration_callback function to the setup script. To create an external access integration\nor secret, the app must be able to determine values for the host port, secret type, the authorization and\ntoken endpoint for OAuth, and so on. The configuration_callback function provides this information\nfrom the consumer account to the app.",
        "Snowsight runs this callback procedure to populate the configuration dialog that prompts the user to configure the\nrequired objects.",
        "Note",
        "The configuration_callback function is only supported for external access integration and secret objects.",
        "The procedure needs to be granted to an app role for execution as shown in the following example:",
        "Snowflake recommends the following best practices when using external access integrations in an app with\ncontainers:",
        "Any reference to external access integrations that are specified in a CREATE SERVICE or\nALTER SERVICE command must be bound before the commands are run in the setup script. These\ncommands fail when the reference is not bound.",
        "Any references to secrets that are specified in the service specification must also be bound before the\nCREATE SERVICE or ALTER SERVICE commands are run in the setup script.\nThese commands fail when the reference is not bound.",
        "If returning a payload of type ERROR in configuration_callback function, providers should return an informative error\nmessage that helps the consumer understand the cause of the error and how to resolve it. For example:",
        "If there is an error in the app",
        "If the reference is not required yet",
        "If the reference is not ready to be allowed.",
        "If the configuration_callback function contain references with the required_at_setup property set to\nTRUE, the configuration_callback function must succeed at setup time. In this context, the configuration_callback function can\u2019t depend on\ninformation from the consumer.",
        "When using a reference to an external access integration with a service, consider creating the service using\nALLOWED_AUTHENTICATION_SECRETS = ALL if the app requires secrets provided by the consumer. This simplifies handling a\nsecret within an external access integration.",
        "If an app only needs to reach specific endpoints and does not require any secrets, use ALLOWED_AUTHENTICATION_SECRETS = NONE.\nNONE is the default value. See CREATE EXTERNAL ACCESS INTEGRATION for more information.",
        "If the app needs to update a reference, first, unbind the reference, then prompt the consumer to create and bind a new\nobject to the reference. A consumer can choose to edit and bind an existing object.\nSee CREATE EXTERNAL ACCESS INTEGRATION.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}