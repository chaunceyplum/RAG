{
    "url": "https://docs.snowflake.com/en/developer-guide/snowflake-python-api/reference/latest/_autosummary/snowflake.core.schema.SchemaCollection",
    "title": "snowflake.core.schema.SchemaCollection | Snowflake Documentation",
    "paragraphs": [
        "Bases: ObjectCollection[SchemaResource]",
        "Represents the collection operations on the Snowflake schema resource.",
        "With this collection, you can create, iterate through, and search for schemas that you have access to in the\ncurrent context.",
        "Examples",
        "Creating a schema instance:",
        "Attributes",
        "The DatabaseResource this schema belongs to.",
        "The Root object this schema belongs to.",
        "Methods",
        "Create a schema in Snowflake.",
        "schema (SchemaResource) \u2013 The Schema object, together with the Schema\u2019s properties: name; kind, comment, managed_access,\nretention_time, budget, data_retention_time_in_days, default_ddl_colaltion, log_level,\npipe_execution_paused, max_data_extension_time_in_days, suspend_task_after_num_failures, trace_level,\nuser_task_managed_initial_warehouse_size and user_task_timeout_ms are optional.",
        "clone (str, or Clone, optional) \u2013 Whether to clone an existing schema. An instance of Clone, or str of the name, None\nif no cloning is necessary.",
        "mode (CreateMode, optional) \u2013",
        "One of the following enum values.",
        "CreateMode.error_if_exists: Throw an snowflake.core.exceptions.ConflictError\nif the schema already exists in Snowflake.  Equivalent to SQL create schema <name> ....",
        "CreateMode.or_replace: Replace if the schema already exists in Snowflake. Equivalent to SQL\ncreate or replace schema <name> ....",
        "CreateMode.if_not_exists: Do nothing if the schema already exists in Snowflake.\nEquivalent to SQL create schema <name> if not exists...",
        "Default is CreateMode.error_if_exists.",
        "",
        "Examples",
        "Creating a new schema called new_schema in my_db:",
        "Creating a new schema called new_schema in my_db by cloning an existing schema:",
        "Creating a new schema called new_schema in my_db by cloning an existing schema in another database:",
        "Iterate through Schema objects from Snowflake, filtering on any optional \u2018like\u2019 pattern.",
        "like (str, optional) \u2013 A case-insensitive string functioning as a filter, with support for SQL\nwildcard characters (% and _).",
        "starts_with (str, optional) \u2013 String used to filter the command output based on the string of characters that appear\nat the beginning of the object name. Uses case-sensitive pattern matching.",
        "limit (int, optional) \u2013 Limit of the maximum number of rows returned by iter(). The default is None, which behaves equivalently\nto show_limit=10000. This value must be between 1 and 10000.",
        "from_name (str, optional) \u2013 Fetch rows only following the first row whose object name matches\nthe specified string. This is case-sensitive and does not have to be the full name.",
        "Examples",
        "Showing all schemas that you have access to see:",
        "Showing information of the exact schema you want to see:",
        "Showing schemas starting with \u2018your-schema-name-\u2018:",
        "Using a for loop to retrieve information from iterator:",
        "Was this page helpful?"
    ]
}