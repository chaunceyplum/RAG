{
    "url": "https://docs.snowflake.com/en/developer-guide/native-apps/connector-sdk/about-connector-sdk",
    "title": "Snowflake Native SDK for Connectors | Snowflake Documentation",
    "paragraphs": [
        "Preview Feature \u2014 Open",
        "Available to accounts in all regions in all cloud providers (including government regions). For details, contact your Snowflake representative.",
        "The Snowflake Native SDK for Connectors is a library that provides a skeleton of the Snowflake native app whose purpose is to ingest data from external data source into Snowflake.\nWe call such an app a native connector.",
        "The Snowflake Native SDK for Connectors is a set of application templates\nand quickstarts that show how to build a Snowflake Native App that ingests data\nfrom an external data source into Snowflake.\nThese templates cover pull-based and push-based data integration patterns.",
        "These templates do not restrict or limit developers. Instead, the templates provide examples of how\nto use core Snowflake features to ingest data and encapsulate application code within a\nSnowflake Native App.",
        "The Snowflake Native App Framework allows providers to publish and monetize a Snowflake Native App on the Snowflake Marketplace.\nSnowflake Native App developers can clone the template repository, modify the boilerplate code, and create\ntheir own Snowflake Connectors.",
        "A connector is an application that allows data flow from an external source system into Snowflake.\nA native connector is a connector application built and deployed using the Snowflake Native App Framework.\nThere are different types of connectors:",
        "pull-based connectors",
        "push-based connectors",
        "The Snowflake Native SDK for Connectors currently supports only the pull-based pattern.",
        "Pull-based patterns are effective when the source data provider does not manage customer data in Snowflake and is not\nwilling to incur COGS for a continuous data share in Snowflake. These patterns are also effective when a source data\nprovider has well-documented APIs that customers can use to replicate and consume data.",
        "By using a pull-based connector pattern, providers (Snowflake, or a third-party ETL provider) can publish and\ndistribute a native connector based on a Snowflake Native App using the Snowflake Marketplace.\nA native connector uses direct external access to connect with the source application. It performs outbound authentication, fetches data from the source directly into a customer\u2019s Snowflake account,\nprocesses and persists the data based on a user-specified configuration.",
        "Using a push-based pattern is effective when inbound access to the source application through a customer\nfirewall is not feasible because of security, performance or governance limitations.\nThis pattern uses an agent and a Snowflake Native App to allow customers to ingest data changes into Snowflake from behind a firewall .",
        "An agent is a standalone application, distributed as a Docker image, that is deployed in a customer environment and is\nresponsible for sending initial and incremental loads to Snowflake by reading data changes from a source CDC stream.",
        "A Snowflake Native App runs within Snowflake and coordinates the integration. It is primarily responsible for managing\nthe replication process, controlling the agent state and creating required objects, including the target databases.",
        "The Snowflake Native SDK for Connectors is a library that provides universal components that can be used to build a custom Snowflake native app\nthat ingests the data from an external data source into Snowflake. The provided components define the recommended flow",
        "of the connector application and allow for customization and exclusion of some features.\nAs of now the Snowflake Native SDK for Connectors is provided as code to be built locally and only in Java.\nAdditionally, a second library containing useful helper and utility classes for writing unit tests is provided.\nThose libraries can be found in the maven central repository:",
        "Native SDK for Connectors library",
        "Native SDK for Connectors Test library",
        "The provided examples using those libraries also include example scripts\nthat can be used to deploy and create instance of the application inside Snowflake.",
        "The Snowflake Native SDK for Connectors is designed to be used when building applications based on\nthe Snowflake Native App Framework and then publish and monetize them using Snowflake Marketplace.\nTo use the Snowflake Native SDK for Connectors, clone it from a template or example application.",
        "The Snowflake Native SDK for Connectors leverages the following features of Snowflake:",
        "Native App Framework",
        "External network access overview",
        "Stored procedures and UDFs",
        "Streamlit in Snowflake",
        "For more information about the templates and quickstarts, see:",
        "Example repository",
        "Quickstart: Native GitHub Connector (Python)",
        "Quickstart: Native Github Connector (Java)",
        "For more information about implementing connectors, see Getting started with the Snowflake Native SDK for Connectors",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}