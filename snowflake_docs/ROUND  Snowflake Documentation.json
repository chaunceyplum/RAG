{
    "url": "https://docs.snowflake.com/en/sql-reference/functions/round",
    "title": "ROUND | Snowflake Documentation",
    "paragraphs": [
        "Numeric functions (Rounding and Truncation)",
        "Returns rounded values for input_expr.",
        "CEIL , FLOOR , TRUNCATE , TRUNC",
        "Required:",
        "The value or expression to operate on. The data type should be one of the numeric data types, such as FLOAT or NUMBER.",
        "If you specify the EXPR => named argument, you must also specify the SCALE => named argument.",
        "Optional:",
        "The number of digits the output should include after the decimal point. The expression should evaluate to an\ninteger from -38 to +38.",
        "The default scale_expr is zero, meaning that the function removes all digits after the decimal point.",
        "For information about negative numbers, see the Usage Notes below.",
        "If you specify the SCALE => named argument, you must specify EXPR => as the preceding named argument.",
        "The rounding mode to use. You can specify one of the following values:",
        "'HALF_AWAY_FROM_ZERO'. This mode rounds the value half away from zero.",
        "'HALF_TO_EVEN'. This mode rounds the value half to even.",
        "Default: 'HALF_AWAY_FROM_ZERO'",
        "If you specify the ROUNDING_MODE => named argument, you must specify both EXPR => and SCALE => as preceding named arguments.",
        "Note",
        "If you specify either value for the rounding_mode argument, the data type of input_expr must be\none of the data types for a fixed-point number.",
        "Data types for floating point numbers (e.g. FLOAT) are not supported\nwith this argument.",
        "The return type is based on the input type:",
        "If the input expression is a FLOAT, the returned type is a FLOAT.",
        "If the input expression is a NUMBER, the returned type is a NUMBER.",
        "If the input scale is constant:",
        "If the input scale is positive, the returned type has a scale equal to the input scale and has a precision large enough to\nencompass any possible result.",
        "If the input scale is negative, the returned type has a scale of 0.",
        "If the input scale is not constant, the returned type\u2019s scale is the same as the input expression\u2019s.",
        "If the scale is zero, then the value is effectively an INTEGER.",
        "For example:",
        "The data type returned by ROUND(3.14::FLOAT, 1) is FLOAT.",
        "The NUMBER returned by ROUND(3.14, 1) has scale 1 and precision at least 3.",
        "The NUMBER returned by ROUND(-9.99, 0) has scale 0 and precision at least 2.",
        "The NUMBER returned by ROUND(33.33, -1) has scale 0 and precision at least 3.",
        "You must either specify all arguments by name or by position. You cannot specify some of the arguments by name and other\narguments by position.",
        "When specifying an argument by name, you cannot use double quotes around the argument name.",
        "If scale_expr is negative, it specifies the number of places before the decimal point to\nwhich to adjust the number. For example, if the scale is -2, the result is a multiple of 100.",
        "If scale_expr is larger than the input expression scale, the function does not have any effect.",
        "If either the input_expr or the scale_expr is NULL, the result is NULL.",
        "By default, half-points are rounded away from zero for decimals. For example, -0.5 is rounded to -1.0.",
        "To change the rounding mode to round the value half to even (e.g. to round -0.5 to 0), pass in 'HALF_TO_EVEN' for the\nrounding_mode argument.",
        "Note",
        "If you specify the rounding_mode argument, the data type of the input_expr argument must be\none of the data types for a fixed-point number.",
        "Floating point numbers are approximate values. A floating point number might not round as expected.",
        "If rounding brings the number outside of the range of values of the data type, the function returns an error.",
        "This first example shows a simple use of ROUND, with the default number of decimal places (0):",
        "The next example uses a range of values for the scale parameter:",
        "The next two examples show the difference between using the default rounding mode ('HALF_AWAY_FROM_ZERO') and the rounding\nmode 'HALF_TO_EVEN'. Both examples call the ROUND function twice, first with the default rounding behavior, then with 'HALF_TO_EVEN'.",
        "The first example uses a positive input value of 2.5:",
        "The second example uses a negative input value of -2.5:",
        "The next two examples demonstrate how to specify the arguments to the function by name, rather than by position.",
        "The next example shows that FLOAT values are not always stored exactly. As you can see below, in some cases .005 is\nrounded to .01, while in other cases it is rounded to 0. The difference is not in the rounding; the difference is\nactually in the underlying representation of the floating point number; 1.005 is stored as a number very slightly\nsmaller than 1.005 (approximately 1.004999). The DECIMAL value, however is stored as an exact number, and is rounded\nto .01 as expected in all cases.",
        "Create and load a table:",
        "Show examples of the difference between rounded FLOAT values and rounded DECIMAL values:",
        "Was this page helpful?",
        "On this page"
    ]
}