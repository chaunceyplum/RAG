{
    "url": "https://docs.snowflake.com/en/user-guide/account-replication-config",
    "title": "Replicating databases and account objects across multiple accounts | Snowflake Documentation",
    "paragraphs": [
        "Standard & Business Critical Feature",
        "Database and share replication are available to all accounts.",
        "Replication of other account objects & failover/failback require Business Critical Edition (or higher).\nTo inquire about upgrading, please contact Snowflake Support.",
        "This topic describes the steps necessary to replicate account objects and data across Snowflake accounts in the same organization,\nand keep the objects and data synchronized. Account replication can occur across Snowflake accounts in different\nregions and across cloud platforms.",
        "Note",
        "When you upgrade an account to Business Critical Edition (or higher), it might take up to 12 hours for failover capabilities\nto become available.",
        "Customers can replicate across all regions within a Region Group. To replicate between regions in different Region groups\n(for example, from a Snowflake commercial region to a Snowflake government region), please contact Snowflake Support to enable\naccess.",
        "Databases that have been enabled for replication using ALTER DATABASE must have replication\ndisabled before they can be added to a replication or failover group.",
        "Note",
        "Execute the SQL statements in this section using the ACCOUNTADMIN role.",
        "Execute the SYSTEM$DISABLE_DATABASE_REPLICATION function to disable replication for a primary database,\nalong with any secondary databases linked to it, in order to add it to a replication or failover group.",
        "Execute the following SQL statement from the source account with the primary database:",
        "Once you have successfully disabled replication for a database, you can add the primary database to a failover group in the source account.",
        "Then create a secondary failover group in the target account. When the secondary failover\ngroup is refreshed in the target account, the previously secondary database will automatically be added as a member of the secondary\nfailover group and refreshed with the changes from the primary database.",
        "For more details on creating primary and secondary failover groups, see Workflow.",
        "Note",
        "When you add a previously replicated database to a replication or failover group, Snowflake does not re-replicate the data that\nhas already been replicated for that database. Only changes since the last refresh are replicated when the group is refreshed.",
        "The following SQL statements demonstrate the workflow for enabling account and database object replication and refreshing objects. Each step\nis discussed in detail below.",
        "Note",
        "The following examples require replication be enabled for the source and target accounts. For details, see\nPrerequisite: Enable replication for accounts in the organization.",
        "Execute the following SQL statements in your preferred Snowflake client to enable account and database object replication and failover,\nand refresh objects.",
        "Create a role and grant it the CREATE FAILOVER GROUP privilege. This step is optional:",
        "Create a failover group in the source account and enable replication to specific target accounts.",
        "Note",
        "If you have databases to add to a replication or failover group that have been previously enabled for database replication and failover\nusing ALTER DATABASE, follow the Transitioning from database replication to group-based replication instructions (in this\ntopic) before adding them to a group.",
        "To add a database to a failover group, the active role must have the MONITOR privilege on the database. For details\non database privileges, see Database privileges (in a separate topic).",
        "Create a role in the target account and grant it the CREATE FAILOVER GROUP privilege. This step is optional:",
        "Create a failover group in the target account as a replica of the failover group in the source account.",
        "Note",
        "If account objects (e.g. users or roles) exist in the target account that do not exist in the source account, refer to\nInitial replication of users and roles before creating a secondary group.",
        "Manually refresh the secondary failover group. This is an optional step. If the primary failover group is created with\na replication schedule, the initial refresh of the secondary failover group is automatically executed when the secondary\nfailover group is created.",
        "Create a role with the REPLICATE privilege on the failover group. This step is optional.",
        "Execute in the target account using a role with the OWNERSHIP privilege on the failover group:",
        "Execute the refresh statement using a role with the REPLICATE privilege:",
        "Create a role with the FAILOVER privilege on the failover group. This step is optional.",
        "Execute in the target account using a role with the OWNERSHIP privilege on the failover group:",
        "The instructions in this section explain how to prepare your accounts for replication, enable the replication of specific objects from the\nsource account to the target account, and synchronize the objects in the target account.",
        "Important",
        "Target accounts do not have Tri-Secret Secure or private connectivity to the Snowflake service, such as\nAWS PrivateLink, enabled by default. If you require Tri-Secret Secure or private\nconnectivity to the Snowflake service for compliance, security or other purposes, it is your responsibility to configure and enable\nthose features in the target account.",
        "The organization administrator (ORGADMIN role) must enable replication for the source and target accounts.",
        "To enable replication for accounts, a user with the ORGADMIN role uses the\nSYSTEM$GLOBAL_ACCOUNT_SET_PARAMETER function to set the ENABLE_ACCOUNT_DATABASE_REPLICATION\nparameter to true. Note that multiple accounts in an organization can be enabled for replication from the same ORGADMIN account.",
        "Log into an ORGADMIN account to enable replication for each source and target account in your organization.",
        "Though the SYSTEM$GLOBAL_ACCOUNT_SET_PARAMETER function supports the legacy account locator identifier,\nit causes unexpected results when an organization has multiple accounts that share the same locator (in different regions).",
        "Create a role and grant it the CREATE FAILOVER GROUP privilege. This step is optional. If you have already created this role, skip to\nStep 2: Create a primary failover group in a source account.",
        "Create a primary failover group and enable the replication and failover of specific objects from the current (source) account to one or more\ntarget accounts in the same organization.",
        "To retrieve the list of accounts in your organization that are enabled for replication, use\nSHOW REPLICATION ACCOUNTS.",
        "Execute the following SQL statement using the ACCOUNTADMIN role:",
        "Returns:",
        "See the complete list of Region IDs.",
        "Account, database, and share objects have constraints on group membership. Before creating new\ngroups or adding objects to existing groups, you can review the list of existing failover groups and the objects in each group.",
        "Note",
        "Only an account administrator (user with the ACCOUNTADMIN role) or the group owner (role with the OWNERSHIP privilege on the group) can\nexecute the SQL statements in this section.",
        "View all failover groups linked to the current account, and the object types in each group:",
        "View all the databases in failover group myfg:",
        "View all the shares in failover group myfg:",
        "You can create a replication or failover group using Snowsight\nor SQL.",
        "Note",
        "If you have databases to add to a replication or failover group that have been previously enabled for database replication\nusing ALTER DATABASE, follow the Transitioning from database replication to group-based replication instructions (in this\ntopic) before adding them to a group.",
        "Preview Feature \u2014 Open",
        "Available to accounts in all regions and cloud platforms.\nCurrently this feature is not supported for accounts using private connectivity.",
        "Note",
        "Only account administrators can create a replication or failover group using Snowsight (refer to\nLimitations of using Snowsight for replication configuration).",
        "You must be signed in to the target account as a user with the ACCOUNTADMIN role. If you are not, you will be\nprompted to sign in.",
        "Both the source account and the target account must use the same connection type (public internet). Otherwise, signing\nin to the target account fails.",
        "Complete the following steps to create a new replication or failover group:",
        "Sign in to Snowsight and navigate to Admin \u00bb Accounts.",
        "Select Replication, select Groups.",
        "Select + Add Group.",
        "Select Target Account, then select Next.",
        "In the Group Name box, enter a name for the group that meets the following requirements:",
        "Must start with an alphabetic character and cannot contain spaces or special characters unless the identifier string is\nenclosed in double quotes (e.g. \u201cMy object\u201d). Identifiers enclosed in double quotes are also case-sensitive.",
        "For more information, see Identifier requirements.",
        "Must be unique across failover and replication groups in an account.",
        "Choose Select Objects to add share and account objects to your group.",
        "Note",
        "Account objects can only be added to one replication or failover group. If a replication or failover group with any account\nobjects already exists in your account, you cannot select those objects.",
        "Choose Select Databases to add database objects to your group.",
        "Select the Replication Frequency.",
        "If the account is Business Critical Edition or higher, a failover group is created by default. You can choose to create a replication group\ninstead. To create a replication group, select Advanced Options, then unselect Enable Failover.",
        "Select Start Replication to create the replication group.",
        "If creating the replication group is unsuccessful, refer to Troubleshoot issues with creating and editing replication groups using Snowsight for common errors\nand how to resolve them.",
        "Create a failover group of specified account and database objects in the source account and enable replication and failover to a list of\ntarget accounts. See CREATE FAILOVER GROUP for syntax.",
        "For example, enable replication of users, roles, warehouses, resources monitors, and databases db1 and db2 from the source account\nto the myaccount2 account in the same organization. Set the replication schedule to automatically refresh myaccount2 every 10\nminutes.",
        "Execute the following statement on the source account:",
        "Create a role in the target account and grant it the CREATE FAILOVER GROUP privilege. This step is optional. If you have already created\nthis role, skip to Step 4: Create a secondary failover group in the target account.",
        "Note",
        "If account objects (e.g. users or roles) exist in the target account that do not exist in the source account, refer to\nInitial replication of users and roles before creating a secondary group.",
        "Create a secondary failover group in the target account as a replica of the primary failover group in the source account.",
        "Execute a CREATE FAILOVER GROUP \u2026 AS REPLICA OF statement in each target account for which you\nenabled replication in Step 2: Create a primary failover group in a source account (in this topic).",
        "Executed from each target account:",
        "To manually refresh the objects in a target account, execute the ALTER FAILOVER GROUP \u2026 REFRESH\ncommand.",
        "As a best practice, we recommend scheduling your secondary refreshes by setting the REPLICATION_SCHEDULE parameter using\nCREATE FAILOVER GROUP or ALTER FAILOVER GROUP.",
        "Note",
        "If the user who calls the function in the target account was dropped in the source account, the refresh operation fails.",
        "To execute the command to refresh a secondary replication or failover group in the target account, you must use a role with the\nREPLICATE privilege on the failover group. The REPLICATE privilege is currently not replicated and must be granted on a\nfailover (or replication) group in both the source and target accounts.",
        "Execute this statement from the source account using a role with the OWNERSHIP privilege on the group:",
        "Execute this statement from the target account using a role with the OWNERSHIP privilege on the group:",
        "For example, to refresh the objects in the failover group myfg, execute the following statement from the target account:",
        "To execute the command to fail over a secondary failover group in a target account, you must use a role with the\nFAILOVER privilege on the failover group. The FAILOVER privilege is currently not\nreplicated and must be granted in each source and target account.",
        "For more information, see Replication of roles and grants.",
        "For example, to grant the FAILOVER privilege to role my_failover_role on failover group my_fg, execute the\nfollowing statement in the target account using a role with the OWNERSHIP privilege on the group:",
        "For instructions on creating a custom role with a specified set of privileges, see Creating custom roles.",
        "For general information about roles and privilege grants for performing SQL actions on\nsecurable objects, see Overview of Access Control.",
        "If you created account objects, for example, users and roles, in your target account by any means other than via replication (e.g.\nusing scripts), these users and roles have no global identifier by default. The refresh operation uses global identifiers to synchronize\nthese objects to the same objects in the source account.",
        "In most cases, when a target account is refreshed from the source account, the refresh operation drops any account objects of the\ntypes in the OBJECT_TYPES list in the target account that have no global identifier. The initial replication of users and roles to\na target account, however, might cause the first refresh operation to fail. For details on this behavior, refer to\nInitial replication of users and roles.",
        "You can prevent the loss of some object types by linking matching objects with the same name in the source and target accounts. The\nSYSTEM$LINK_ACCOUNT_OBJECTS_BY_NAME function adds a global identifier to account objects in the target account.",
        "Note",
        "Global identifiers are only added to account objects that are included in a replication or failover group for the\nfollowing object types:",
        "RESOURCE_MONITOR",
        "ROLE",
        "USER",
        "WAREHOUSE",
        "Apply global identifiers to account objects in the target account of the types included in the object_types list for failover\ngroup myfg:",
        "Execute the following SQL statement using the ACCOUNTADMIN role:",
        "The behavior of the initial refresh operation for USERS and ROLES object types can vary depending on whether or not there are matching\nobjects with the same name in the target account.",
        "Note",
        "The behavior described in this section applies only the first time these object types are replicated to the target account.",
        "The scenarios below describe the replication of USERS. The same also applies to the replication of ROLES.",
        "If there are existing users in the target account with the same name as users in the source account, the initial refresh operation\nfails and describes the two options you have to continue:",
        "Force the refresh operation and allow any existing users in the target account to be dropped. The users in the source account\nwill be replicated to the target account.",
        "To force a refresh for a group, use the FORCE parameter for the refresh command. For example, to force the refresh of a failover\ngroup, execute the following command:",
        "Link the account objects by name. The SYSTEM$LINK_ACCOUNT_OBJECTS_BY_NAME function links\nusers with the same name in both the target account and the source account. Users in the target account that are linked are\nnot deleted.",
        "To link account objects by name, execute the following command:",
        "Note",
        "Any user in the target account that does not have a matching user in the source account with the same name is dropped.",
        "If there are no users in the target account with names matching users in the source account, the initial refresh operation in\nthe target account drops all users. This can result in the following data and metadata loss:",
        "If USERS are included in the OBJECT_TYPES list for a replication or failover group:",
        "Worksheets are lost.",
        "Query history is lost.",
        "If USERS are included in the OBJECT_TYPES list, but ROLES is not:",
        "Privilege grants to users are lost.",
        "If ROLES are included in the OBJECT_TYPES list:",
        "Privilege grants to share objects are lost.",
        "To avoid dropping users or roles in the target account:",
        "In the source account, manually recreate any users or roles that exist only in the target account before the initial replication.",
        "In the target account, link matching objects with the same name in both accounts using the\nSYSTEM$LINK_ACCOUNT_OBJECTS_BY_NAME function.",
        "If you enable storage integration replication, you must take additional steps after the\nstorage integration is replicated to target accounts.\nThe replicated integration has its own identity and access management (IAM) entity that is different from the identity\nand IAM entity of the primary integration. Therefore, you must update your cloud provider permissions\nto grant the replicated integration access to your cloud storage.",
        "You only need to configure this trust relationship on target accounts one time.",
        "The process is similar to granting access in the source account.\nSee the following pages for more information:",
        "Configuring a Snowflake storage integration to access Amazon S3",
        "Configuring an integration for Google Cloud Storage",
        "Configuring a Snowflake storage integration for Azure",
        "If you replicate an external stage with a directory table, and you have configured automated refresh for the source directory table,\nyou must take steps to configure automated refresh for the secondary directory table.",
        "The process is similar to setting up automated refresh in your source account. See the following for more information:",
        "Amazon S3: The configuration process depends on how you set up event notifications.",
        "If you use Amazon S3 Event Notifications with Amazon Simple Queue Service (SQS),\nfollow the instructions in Step 2: Configure event notifications.\nYou can also migrate from SQS to SNS. For more information, see Migrate to Amazon Simple Notification Service (SNS).",
        "If you use Amazon Simple Notification Service (SNS), see Subscribing the Snowflake SQS Queue to your SNS topic.",
        "Google Cloud Storage: Create a new subscription to your Pub/Sub topic and a new notification integration in your target account.\nThen, grant Snowflake access to the Pub/Sub subscription. For instructions,\nsee Configuring Automation Using GCS Pub/Sub.",
        "Azure Blob Storage: Create a new Event Grid subscription and storage queue. Then, create a new notification integration in the\ntarget account and grant Snowflake access to your storage queue. For instructions,\nsee Configuring Automation With Azure Event Grid.",
        "Important",
        "After you complete these configuration steps in your target account,\nyou should perform a full refresh of your directory table to ensure that it has not missed any notifications.",
        "For Google Cloud Storage and Azure Blob Storage, the name of the notification integration in each target account must match the name of\nthe notification integration in the source account.",
        "You must take additional steps to configure cloud notifications for secondary auto-ingest pipes before failover.\nThis section covers why this additional configuration is required, and how to complete it for each supported cloud provider.",
        "The configuration process depends on how you set up event notifications. For example,\nsuppose you have an auto-ingest pipe that relies on an Amazon Simple Notification Service (SNS) topic\nto publish messages about the Snowflake stage location.",
        "When you replicate the pipe to a target account, Snowflake automatically creates a new Amazon Simple Queue Service (SQS) queue.\nYou must subscribe this SQS queue for your target account to the SNS topic to get notifications about the stage location.",
        "If you use Amazon S3 Event Notifications with Amazon Simple Queue Service (SQS),\nfollow the instructions in Step 4: Configure event notifications.",
        "Important",
        "To ensure that the pipe has not missed any notifications, you should refresh the pipe after switching to the new SQS queue.",
        "You can also migrate from SQS to SNS. For more information, see Migrate to Amazon Simple Notification Service (SNS).",
        "If you use Amazon Simple Notification Service (SNS), see\nSubscribing the Snowflake SQS Queue to your SNS topic.",
        "If you use Amazon EventBridge, see Option 3: Setting up Amazon EventBridge to automate Snowpipe.",
        "A pipe that automatically loads data from files located on a stage in Microsoft Azure blob storage requires an Event Grid\nsubscription, storage queue, and a notification integration bound to the storage queue. A secondary pipe in a target account needs a separate\nEvent Grid, storage queue, and notification integration bound to the storage queue. The Event Grid in both source and target accounts must be\nconfigured as endpoints for the same Azure Storage source.",
        "See the diagram below for configuration details:",
        "Create a new Event Grid subscription and storage queue. Then, create a new notification integration in the target account and\ngrant Snowflake access to your storage queue. For instructions, see Configuring Automation With Azure Event Grid.",
        "Important",
        "The name of the notification integration in each target account must match the name of the notification integration in\nthe source account.",
        "A pipe that automatically loads data from files located in Google Cloud Storage requires a\nGoogle Pub/Sub subscription and a notification integration\nthat references that subscription. Each replicated pipe in a target account also requires a Google Pub/Sub subscription and a\nnotification integration that references that subscription.\nThe Pub/Sub subscription in each source and target account must be subscribed to the same Pub/Sub Topic\nthat receives notifications from the Google Cloud Storage source.",
        "See the diagram below for configuration details:",
        "Then, grant Snowflake access to the Pub/Sub subscription. For instructions,\nsee Configuring Automation Using GCS Pub/Sub.",
        "Important",
        "The name of the notification integration in each target account must match the name of the notification integration in\nthe source account.",
        "If you have enabled API integration replication, additional steps are required after the API integration is replicated to the target account.\nThe replicated integration has its own identity and access management (IAM) entity that are different from the identity and IAM entity\nof the primary integration. Therefore, you must update the permissions on the remote service to grant access to replicated functions.\nThe process is similar to granting access to the functions on the primary account. See the below links for more details:",
        "Amazon Web Services Set up the trust relationship(s) between Snowflake and the new IAM role.",
        "Google Cloud Platform:\nCreate a GCP Security Policy for the Proxy Service.",
        "Microsoft Azure:",
        "Step 1. Link the API integration for Azure",
        "Step 2. Create a validate-JWT policy",
        "If database objects are replicated in a replication or failover group, the HASH_AGG function can be used\nto compare the rows in a random set of tables in a primary and secondary database to verify data consistency. The HASH_AGG function\nreturns an aggregate signed 64-bit hash value over the (unordered) set of input rows. Query this function on all or a random subset of\ntables in a secondary database and on the primary database (as of the timestamp for the primary database snapshot) and compare the output.",
        "In the examples below, the database mydb is included in the failover group myfg. The database mydb contains the table\nmytable.",
        "Query the REPLICATION_GROUP_REFRESH_PROGRESS table function\n(in the Snowflake Information Schema).\nNote the primarySnapshotTimestamp in the DETAILS column for the PRIMARY_UPLOADING_METADATA phase. This is the timestamp\nfor the latest snapshot of the primary database.",
        "Query the HASH_AGG function for a specified table in the secondary database. The following query returns a hash value for all rows\nin the mytable table:",
        "Query the HASH_AGG function for the same table in the primary database. Using Time Travel, specify the timestamp when the latest\nsnapshot was taken for the secondary database:",
        "Compare the results from the two queries. The output should be identical.",
        "You can edit the name, included objects, and replication schedule of a replication or failover group using Snowsight\nor SQL.",
        "Preview Feature \u2014 Open",
        "Available to accounts in all regions and cloud platforms.\nCurrently this feature is not supported for accounts using private connectivity.",
        "Note",
        "Only account administrators can edit a replication or failover group using Snowsight (refer to\nLimitations of using Snowsight for replication configuration).",
        "To edit the name of the group, you must be signed in to the target account. If you are not signed in, the Status column\ndisplays a sign in message instead of the refresh status.",
        "Both the source account and the target account must use the same connection type (public internet). Otherwise, signing in to the\ntarget account fails.",
        "Sign in to Snowsight and navigate to Admin \u00bb Accounts.",
        "Select Replication, select Groups.",
        "Locate the replication or failover group you want to edit. Select the More menu (\u2026) in the last column of the row.",
        "Select Edit.",
        "To change the group name, enter a new name in the Group Name box that meets the following requirements:",
        "Must start with an alphabetic character and cannot contain spaces or special characters unless the identifier string is\nenclosed in double quotes (e.g. \u201cMy object\u201d). Identifiers enclosed in double quotes are also case-sensitive.",
        "For more information, see Identifier requirements.",
        "Names for failover groups and replication groups in an account must be unique.",
        "Choose Select Objects to add or remove share and account objects.",
        "Note",
        "Account objects can only be added to one replication or failover group. If a replication or failover group with any account\nobjects already exists in your account, you cannot select those objects.",
        "Choose Select Databases to add or remove database objects.",
        "Select the Replication Frequency to change the replication schedule for a group.",
        "Select Save Changes to update the group.",
        "If saving the changes to the group is unsuccessful, refer to Troubleshoot issues with creating and editing replication groups using Snowsight for common errors\nand how to resolve them.",
        "You can modify a replication or failover group properties using the ALTER REPLICATION GROUP or\nALTER FAILOVER GROUP command.",
        "You can drop a secondary replication or failover using the DROP REPLICATION GROUP or the\nDROP FAILOVER GROUP command. Only the replication or failover group owner (i.e. the role with the OWNERSHIP\nprivilege on the group) can drop the group.",
        "To drop a secondary replication or failover group using Snowsight, you must drop the group in the source account. See\nDrop a replication or failover group using Snowsight.",
        "You can drop a primary replication or failover group using Snowsight or SQL. If you are deleting a primary group using SQL,\nyou must first drop all secondary groups. See Dropping a secondary replication or failover group.",
        "A primary replication or failover group can only be dropped after all the replicas of the group (i.e. secondary replication or failover\ngroups) have been dropped. Alternatively, you can promote a secondary failover group to serve as the primary failover group,\nthen drop the former primary failover group.",
        "Note that only the group owner can drop the group.",
        "Preview Feature \u2014 Open",
        "Available to accounts in all regions and cloud platforms.\nCurrently this feature is not supported for accounts using private connectivity.",
        "Note",
        "Only account administrators can delete a replication or failover group using Snowsight (refer to\nLimitations of using Snowsight for replication configuration).",
        "You can delete a primary replication or failover group and any linked secondary groups.",
        "Sign in to Snowsight and navigate to Admin \u00bb Accounts.",
        "Select Replication, select Groups.",
        "Locate the replication or failover group you want to delete. Select the More menu (\u2026) in the last column of the row.",
        "Select Drop, then select Drop Group.",
        "The following scenarios can help you troubleshoot common issues that can occur when creating or editing replication or\nfailover group using Snowsight.",
        "You cannot add a database to a group",
        "You cannot add a share to a group",
        "Error",
        "Cause",
        "A database can only be in one replication or failover group. One of the databases you selected for the group is already\nincluded in another replication or failover group.",
        "Solution",
        "Choose Select Databases and unselect any database(s) that are already included in another group.",
        "Error",
        "Cause",
        "The database you want to add to a replication or failover group was previously configured for database replication.",
        "Solution",
        "Disable database replication for the database. See Transitioning from database replication to group-based replication.",
        "Error",
        "Cause",
        "A share can only be in one replication or failover group. One of the shares you selected for the group is already included\nin another replication or failover group.",
        "Solution",
        "Choose Select Objects and unselect any share(s) that are already included in another group.",
        "Only a user with the ACCOUNTADMIN role can create a replication or failover group using Snowsight. A user with a role with the\nCREATE REPLICATION GROUP or CREATE FAILOVER GROUP privilege can create a group using the respective SQL commands.",
        "Only a user with the ACCOUNTADMIN role can edit or drop a replication or failover group using Snowsight. A user with a role\nwith the OWNERSHIP privilege on a replication or failover group can edit and drop groups using the respective SQL commands.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}