{
    "url": "https://docs.snowflake.com/en/user-guide/query-acceleration-service",
    "title": "Using the Query Acceleration Service | Snowflake Documentation",
    "paragraphs": [
        "Enterprise Edition Feature",
        "This feature requires Enterprise Edition (or higher). To inquire about upgrading, please contact Snowflake Support.",
        "The query acceleration service (QAS) can accelerate parts of the query workload in a warehouse. When it is enabled for a warehouse,\nit can improve overall warehouse performance by reducing the impact of outlier queries, which are queries that use more resources than the\ntypical query. The query acceleration service does this by offloading portions of the query processing work to shared compute resources that\nare provided by the service.",
        "Examples of the types of workloads that might benefit from the query acceleration service include:",
        "Ad hoc analytics.",
        "Workloads with unpredictable data volume per query.",
        "Queries with large scans and selective filters.",
        "The query acceleration service can handle these types of workloads more efficiently by performing more work in parallel and reducing the\nwall-clock time spent in scanning and filtering.",
        "Note",
        "The query acceleration service depends on server availability. Therefore, performance improvements might fluctuate over time.",
        "To identify the queries or warehouses that might benefit from the query acceleration service, you can\nquery the QUERY_ACCELERATION_ELIGIBLE view. You can also use the\nSYSTEM$ESTIMATE_QUERY_ACCELERATION function to assess whether a specific\nquery is eligible for acceleration.",
        "In general, queries are eligible because they have a portion of the query plan that can be run in parallel using QAS\ncompute resources. These queries fall into one of two patterns:",
        "Large scans with an aggregation or selective filter.",
        "Large scans that insert many new rows.",
        "Snowflake doesn\u2019t have a specific cutoff for what constitutes a \u201clarge enough\u201d scan to be eligible. The threshold for eligibility depends on a variety\nof factors, including the query plan and warehouse size. Snowflake only marks a query as eligible if there is high confidence that the query\nwould be accelerated if QAS was enabled.",
        "Some queries are ineligible for query acceleration. The following are common reasons why a query cannot be accelerated:",
        "There are not enough partitions in the scan. If there are not enough partitions to scan, the benefits of query acceleration are offset by\nthe latency in acquiring resources for the query acceleration service.",
        "Even if a query has a filter, the filters may not be selective enough. Alternatively, if the query has an aggregation with GROUP BY,\nthe cardinality of the GROUP BY expression might be too high for eligibility.",
        "The query includes a LIMIT clause but does not have an ORDER BY clause.",
        "The query includes functions that return nondeterministic results (for example, SEQ or\nRANDOM).",
        "The SYSTEM$ESTIMATE_QUERY_ACCELERATION function can help determine if a previously executed query might\nbenefit from the query acceleration service. If the query is eligible for query acceleration, the function returns the estimated query\nexecution time for different query acceleration scale factors.",
        "Execute the following statement to help determine if query acceleration might benefit a specific query:",
        "In this example, the query is eligible for the query acceleration service and includes estimated query times using the service:",
        "The following example shows the results for a query that is not eligible for query acceleration service:",
        "The statement above produces the following output:",
        "Query the QUERY_ACCELERATION_ELIGIBLE view to identify the queries and\nwarehouses that might benefit the most from the query acceleration service. For each query, the view includes the amount of query execution\ntime that is eligible for the query acceleration service.",
        "Note",
        "These examples assume the ACCOUNTADMIN role (or a role granted IMPORTED PRIVILEGES on the\nshared SNOWFLAKE database) is in use. If it is not in use, execute the following command before running the queries in the examples:",
        "Identify the queries in the past week that might benefit the most from the service by the longest amount of query execution time that is\neligible for acceleration:",
        "Identify the queries in the past week that might benefit the most from the service in a specific warehouse mywh:",
        "Identify the warehouses with the most queries, in the past week, eligible for the query acceleration service:",
        "Identify the warehouses with the most eligible time for the query acceleration service in the past week:",
        "Identify the upper limit scale factor in the past week for the query acceleration\nservice for warehouse mywh:",
        "Identify the distribution of scale factors in the past week for the query acceleration service for warehouse mywh:",
        "The query acceleration service supports the following SQL commands:",
        "SELECT",
        "INSERT",
        "CREATE TABLE AS SELECT (CTAS)",
        "COPY INTO <table>",
        "A query, or a portion of a query (i.e. subquery or clause), with a supported SQL command might be accelerated by the query\nacceleration service if it is eligible for acceleration.",
        "Enable the query acceleration service by specifying ENABLE_QUERY_ACCELERATION = TRUE when creating a warehouse (using\nCREATE WAREHOUSE) or later (using ALTER WAREHOUSE).",
        "The following example enables the query acceleration service for a warehouse named my_wh:",
        "Execute the SHOW WAREHOUSES command to display details about the my_wh warehouse.",
        "The query acceleration service may increase the credit consumption rate of a warehouse. The maximum scale factor can help limit the consumption rate.\nSee CREATE WAREHOUSE or ALTER WAREHOUSE for more details about the\nQUERY_ACCELERATION_MAX_SCALE_FACTOR property.",
        "The QUERY_ACCELERATION_ELIGIBLE view and the SYSTEM$ESTIMATE_QUERY_ACCELERATION function might be useful in determining an appropriate\nscale factor for a warehouse. See Identifying queries and warehouses that might benefit from query acceleration (in this topic) for details.",
        "The scale factor is a cost control mechanism that allows you to set an upper bound on the amount of compute resources a warehouse can\nlease for query acceleration. This value is used as a multiplier based on warehouse size and cost.",
        "For example, suppose that you set the scale factor to 5 for a medium warehouse. This means that:",
        "The warehouse can lease compute resources up to 5 times the size of a medium warehouse.",
        "Because a medium warehouse costs 4 credits per hour, leasing these resources can cost up\nto an additional 20 credits per hour (4 credits per warehouse x 5 times its size).",
        "The cost is the same no matter how many queries are using the query acceleration service at the same time.\nThe query acceleration service is billed by the second, only when the service is in use. These credits are billed separately from warehouse\nusage.",
        "Not all queries require the full set of resources that are made available by the scale factor. The amount of resources requested for the service\ndepends on how much of the query is eligible for acceleration and how much data will be processed to answer it. Regardless of the scale\nfactor value or the amount of resources requested, the amount of available compute resources for query acceleration is bound by the\navailability of resources in the service and the number of other concurrent requests. The query acceleration service only uses as many\nresources as it needs and that are available at the time the query is executed.",
        "If the scale factor is not explicitly set, the default value is 8. Setting the scale factor to 0 eliminates the upper bound limit\nand allows queries to lease as many resources as necessary and as available to service the query.",
        "The following example modifies the warehouse named my_wh to enable the query acceleration service with a maximum\nscale factor of 0.",
        "Once you enable the query acceleration service, you can view the Profile Overview panel in the\nQuery Profile tab to see the effects of the query acceleration results.",
        "The following screenshot displays an example of the statistics displayed for the query overall. If multiple operations in a query were\naccelerated, the results are aggregated in this view so you can see the total amount of work done by the query acceleration service.",
        "The Query Acceleration section of the Profile Overview panel includes the following statistics:",
        "Partitions scanned by service \u2014 number of files offloaded for scanning to the query acceleration service.",
        "Scans selected for acceleration \u2014 number of table scans being accelerated.",
        "In the operator details (see Statistics), click on the operator to see detailed information.\nThe following screenshot displays an example of the statistics displayed for a TableScan operation:",
        "The Query Acceleration section of the TableScan details panel includes the following statistics:",
        "Partitions scanned by service \u2014 number of files offloaded for scanning to the query acceleration service.",
        "To see the effects of query acceleration on a query, you can use the following columns in the\nQUERY_HISTORY view.",
        "QUERY_ACCELERATION_BYTES_SCANNED",
        "QUERY_ACCELERATION_PARTITIONS_SCANNED",
        "QUERY_ACCELERATION_UPPER_LIMIT_SCALE_FACTOR",
        "You can use these columns to identify the queries that benefited from the query acceleration service. For each query, you can also\ndetermine the total number of partitions and bytes scanned by the query acceleration service.",
        "For descriptions of each of these columns, see QUERY_HISTORY view.",
        "Note",
        "For a given query, the sum of the QUERY_ACCELERATION_BYTES_SCANNED and BYTES_SCANNED columns might be greater when the query\nacceleration service is used than when the service is not used. The same is true for the sum of the columns\nQUERY_ACCELERATION_PARTITIONS_SCANNED and PARTITIONS_SCANNED.",
        "The increase in the number of bytes and partitions is due to the intermediary results that are generated by the service to\nfacilitate query acceleration.",
        "For example, to find the queries with the most bytes scanned by the query acceleration service in the past 24 hours:",
        "To find the queries with the largest number of partitions scanned by the query acceleration service in the past 24 hours:",
        "Query Acceleration consumes credits as it uses serverless compute resources to execute portions of\neligible queries.",
        "Query Acceleration is billed like other serverless features in Snowflake in that you pay by the second for the compute resources used. To\nlearn how many credits per compute-hour are consumed by the Query Acceleration Service, refer to the \u201cServerless\nFeature Credit Table\u201d in the Snowflake Service Consumption Table.",
        "If you have Query Acceleration enabled for your account, the billing page in the Classic Console includes a warehouse called\nQUERY_ACCELERATION that shows all credits used by the service across all warehouses in your account.",
        "The screenshot below shows an example of the billing information displayed for the QUERY_ACCELERATION warehouse:",
        "You can view billing data in the Account Usage QUERY_ACCELERATION_HISTORY view.",
        "This query returns the total number of credits used by each warehouse in your account for the query acceleration service\n(month-to-date):",
        "You can view billing data for the query acceleration service for all accounts in your organization in the Organization Usage\nQUERY_ACCELERATION_HISTORY view.",
        "This query returns the total number of credits used by each warehouse in each account for the query acceleration service (month-to-date):",
        "You can also view billing data using the Information Schema QUERY_ACCELERATION_HISTORY function.",
        "The following example uses the QUERY_ACCELERATION_HISTORY function to return information about the queries accelerated by this service\nwithin the past 12 hours:",
        "This section includes example queries that might help you evaluate query performance and cost before and after enabling the query\nacceleration service.",
        "The following query computes the costs of the warehouse and the query acceleration service for a specific warehouse. You can execute\nthis query after enabling the query acceleration service for a warehouse to compare costs before and after enabling query acceleration.\nThe date range for the query begins 8 weeks prior to the first credit usage for the query acceleration service to 8 weeks after the last\nincurred cost for query acceleration service (or up to the current date).",
        "Note",
        "This query is most useful for evaluating the cost of the service if the warehouse properties and workload remain the same\nbefore and after enabling the query acceleration service.",
        "This query returns results only if there has been credit usage for accelerated queries in the warehouse.",
        "This example query returns the warehouse and query acceleration service costs for my_warehouse:",
        "This query returns the average execution time for query acceleration eligible queries for a given warehouse. The date range for the query\nbegins 8 weeks prior to the first credit usage for the query acceleration service to 8 weeks after the last incurred cost for query\nacceleration service (or up to the current date). The results might help you evaluate how the average query performance changed after\nenabling the query acceleration service.",
        "Note",
        "This query is most useful for evaluating query performance if the warehouse workload remains the same before and after enabling\nthe query acceleration service.",
        "If the warehouse workload remains stable, the value in the num_execs column should remain consistent.",
        "If the value in the num_execs column of the query results dramatically increases or decreases, the results of this query\nwill likely not be useful for query performance evaluation.",
        "This example query returns the query execution time by day and computes the 7 day average for the week prior for queries that are\neligible for acceleration in the warehouse my_warehouse:",
        "The output from the statement includes the following columns:",
        "Column",
        "Description",
        "EXEC_DATE",
        "Query execution date.",
        "AVG_EXEC_TIME_7DAYS",
        "The average execution time for the prior 7 days inclusive of EXEC_DATE.",
        "AVG_EXEC_TIME",
        "The average query execution time.",
        "QAS_ACCEL_FLAG",
        "1 if any queries were accelerated; NULL if no queries were accelerated.",
        "NUM_EXECS",
        "Number of queries accelerated.",
        "EXEC_TIME",
        "Total execution time of all query acceleration eligible queries.",
        "Query acceleration and search optimization can work together to\noptimize query performance. First, search optimization can prune the micro-partitions not needed for a query. Then, for eligible queries, query acceleration can offload portions of the rest of the work to\nshared compute resources provided by the service.",
        "Performance of queries accelerated by both services varies depending on workload and available resources.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}