{
    "url": "https://docs.snowflake.com/en/developer-guide/external-network-access/secret-api-reference",
    "title": "API Reference for Access to Secrets | Snowflake Documentation",
    "paragraphs": [
        "You can use Java or Python to retrieve credentials contained in a secret you created with the CREATE SECRET\nstatement. This topic lists the methods for getting information from a secret. These are available with APIs included in Snowflake.",
        "For code in Java, use the com.snowflake.snowpark_java.types.SnowflakeSecrets class.",
        "The following table lists methods for accessing data in a secret.",
        "Method",
        "Description",
        "public String getGenericSecretString(String genericStringSecretName)",
        "Gets the generic token string held by the secret specified by genericStringSecretName. Returns a valid token string.",
        "public String getOAuthAccessToken(String oauthSecretName)",
        "Gets the OAuth2 access token held by the secret specified by oauthSecretName. Returns an OAuth2 token string.",
        "public String getSecretType(String secretName)",
        "Gets the type of the secret specified by secretName. Returns the TYPE parameter value set for this secret when it was\ncreated with the CREATE SECRET statement.",
        "public UsernamePassword getUsernamePassword(String usernamePasswordSecretName)",
        "Gets the username and password from the secret specified by usernamePasswordSecretName. Returns a\ncom.snowflake.snowpark_java.types.UsernamePassword with username and password.",
        "public CloudProviderToken getCloudProviderToken(String cloudProviderSecretName)",
        "Gets a cloud provider token containing values you can use to create a session with the cloud provider, such as AWS. Returns a\ncom.snowflake.snowpark_java.types.CloudProviderToken with the following methods:",
        "String getAccessKeyId",
        "String getSecretAccessKey",
        "String getToken",
        "To use the SnowflakeSecrets class:",
        "Make the Snowpark library available to your handler code using the PACKAGES clause as described in\nCREATE FUNCTION.",
        "In your handler code, import com.snowflake.snowpark_java.types.SnowflakeSecrets.",
        "Construct a SnowflakeSecrets object, and call one of the methods listed above to access the secret.",
        "Code in the following example retrieves the value set for the TYPE clause when the secret was created with CREATE SECRET. Here,\nthe oauth_token secret is of type OAUTH2.",
        "For code in Python, use the _snowflake module exposed to Python UDFs that execute within Snowflake. The following table lists\n_snowflake functions for accessing data in a secret.",
        "Function",
        "Description",
        "get_generic_secret_string(generic_string_secret_name)",
        "Gets the generic token string held by the secret specified by generic_string_secret_name. Returns a valid token string.",
        "get_oauth_access_token(oauth_secret_name)",
        "Gets the OAuth2 access token held by the secret specified by oauth_secret_name. Returns an OAuth2 token string.",
        "get_secret_type(secret_name)",
        "Gets the type of the secret specified by secret_name. Returns the TYPE parameter value set for this secret when it was\ncreated with the CREATE SECRET statement.",
        "get_username_password(username_password_secret_name)",
        "Gets the username and password from the secret specified by username_password_secret_name. Returns an object with\nusername and password attributes.",
        "get_cloud_provider_token(cloud_provider_secret_name)",
        "Gets a cloud provider object containing values you can use to create a session with the cloud provider, such as AWS. Returns a\ntype with the following attributes:",
        "access_key_id",
        "secret_access_key",
        "token",
        "To use the _snowflake module in your handler code, import it as you would another module.",
        "Code in the following example retrieves the value set for the TYPE clause when the secret was created with CREATE SECRET. Here,\nthe oauth_token secret is of type OAUTH2.",
        "Code in the following example retrieves the username and password held by the secret.",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}