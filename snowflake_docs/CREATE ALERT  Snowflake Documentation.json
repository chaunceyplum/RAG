{
    "url": "https://docs.snowflake.com/en/sql-reference/sql/create-alert",
    "title": "CREATE ALERT | Snowflake Documentation",
    "paragraphs": [
        "Creates a new alert in the current schema.",
        "This command also supports the following variant:",
        "CREATE ALERT \u2026 CLONE (creates a clone of an existing alert)",
        "Tip",
        "In addition to SQL, you can also use other interfaces, such as Snowflake REST APIs, Snowflake Python APIs, and Snowflake CLI.\nSee Alternate interfaces.",
        "ALTER ALERT , DESCRIBE ALERT, DROP ALERT , SHOW ALERTS , EXECUTE ALERT",
        "Important",
        "Newly created or cloned alerts are suspended upon creation. For information on resuming suspended alerts, see\nSuspending and resuming an alert.",
        "CREATE ALERT \u2026 CLONE",
        "Creates a new alert with the same parameter values:",
        "For more details, see CREATE <object> \u2026 CLONE.",
        "Note",
        "When you clone an alert by using CREATE ALERT <name> CLONE or by cloning a schema or database containing the alert, the new\nalert has all of the properties of the original alert except for any properties that you explicitly override.",
        "String that specifies the identifier (i.e. name) for the alert; must be unique for the schema in which the alert is created.",
        "In addition, the identifier must start with an alphabetic character and cannot contain spaces or special characters unless the\nentire identifier string is enclosed in double quotes (e.g. \"My object\"). Identifiers enclosed in double quotes are also\ncase-sensitive.",
        "For more details, see Identifier requirements.",
        "Specifies the schedule for periodically evaluating the condition for the alert.",
        "You can specify the schedule in one of the following ways:",
        "USING CRON expr time_zone",
        "Specifies a cron expression and time zone for periodically evaluating the condition for the alert. Supports a subset of\nstandard cron utility syntax.",
        "The cron expression consists of the following fields:",
        "The following special characters are supported:",
        "Special Character",
        "Description",
        "*",
        "Wildcard. When specified for a given field, the alert runs at every unit of time for that field.",
        "For example, * in the month field specifies that the alert runs every month.",
        "L",
        "Stands for \u201clast\u201d. When used in the day-of-week field, it allows you to specify constructs such as \u201cthe last Friday\u201d\n(\u201c5L\u201d) of a given month. In the day-of-month field, it specifies the last day of the month.",
        "/n",
        "Indicates the nth instance of a given unit of time. Each quanta of time is computed independently.",
        "For example, if 4/3 is specified in the month field, then the evaluation of the condition is scheduled for April,\nJuly and October (i.e. every 3 months, starting with the 4th month of the year).",
        "The same schedule is maintained in subsequent years. That is, the condition is not scheduled to be evaluated in January\n(3 months after the October run).",
        "Note",
        "The cron expression currently evaluates against the specified time zone only. Altering the\nTIMEZONE parameter value for the account (or setting the value at the user or session level) does not\nchange the time zone for the alert.",
        "The cron expression defines all valid times for the evaluation of the condition for the alert. Snowflake attempts\nto evaluate the condition based on this schedule; however, any valid run time is skipped if a previous run has not\ncompleted before the next valid run time starts.",
        "When both a specific day of month and day of week are included in the cron expression, then the evaluation of the\ncondition is scheduled on days satisfying either the day of month or day of week. For example,\nSCHEDULE = 'USING CRON 0 0 10-20 * TUE,THU UTC' schedules an evaluation at 0AM on any 10th to 20th day of the month\nand also on any Tuesday or Thursday outside of those dates.",
        "num MINUTE",
        "Specifies an interval (in minutes) of wait time inserted between evaluations of the alert. Accepts positive integers only.",
        "Also supports num M syntax.",
        "To avoid ambiguity, a base interval time is set when the alert is resumed (using\nALTER ALERT \u2026 RESUME).",
        "The base interval time starts the interval counter from the current clock time. For example, if an alert is created with\n10 MINUTE and the alert is resumed at 9:03 AM, then the condition for the alert is evaluated at 9:13 AM, 9:23 AM, and so\non. Note that we make a best effort to ensure absolute precision, but only guarantee that conditions are not evaluated\nbefore their set interval occurs (e.g. in the current example, the condition could be evaluated first at 9:14 AM but\ndefinitely not at 9:12 AM).",
        "Note",
        "The maximum supported value is 11520 (8 days). Alerts that have a greater num MINUTE value never have their\nconditions evaluated.",
        "Specifies a comment for the alert.",
        "Specifies the tag name and the tag string value.",
        "The tag value is always a string, and the maximum number of characters for the tag value is 256.",
        "For information about specifying tags in a statement, see Tag quotas for objects and columns.",
        "The SQL statement that represents the condition for the alert. You can use the following commands:",
        "SELECT",
        "SHOW <objects>",
        "CALL",
        "If the statement returns one or more rows, the action for the alert is executed.",
        "The SQL statement that should be executed if the condition returns one or more rows.",
        "To send a notification, you can\ncall the SYSTEM$SEND_EMAIL or SYSTEM$SEND_SNOWFLAKE_NOTIFICATION stored procedure.",
        "Specifies the virtual warehouse that provides compute resources for executing this alert.",
        "For serverless alerts, do not set this property.",
        "A role used to execute this SQL command must have the following\nprivileges at a minimum:",
        "Privilege",
        "Object",
        "Notes",
        "EXECUTE MANAGED ALERT",
        "Account",
        "Required only for serverless alerts.",
        "EXECUTE ALERT",
        "Account",
        "CREATE ALERT",
        "Schema",
        "USAGE",
        "Warehouse",
        "Required only for alerts that specify a warehouse to use.",
        "The USAGE privilege on the parent database and schema are required to perform operations on any object in a schema.",
        "For instructions on creating a custom role with a specified set of privileges, see Creating custom roles.",
        "For general information about roles and privilege grants for performing SQL actions on\nsecurable objects, see Overview of Access Control.",
        "Alerts are executed using the privileges granted to the alert owner (i.e. the role that has the OWNERSHIP privilege on the\nalert). For the list of minimum required privileges to execute alerts, see Granting the privileges to create alerts.",
        "To verify that the alert owner role has the required privileges to execute SQL statements for the condition and action, we\nrecommend that you execute these statements using the alert owner role before specifying them in CREATE ALERT.",
        "When you create an alert, the alert is suspended by default.",
        "To make the alert active, you must execute ALTER ALERT \u2026 RESUME.",
        "When you execute CREATE ALERT or ALTER ALERT, some validation checks are not performed on the statements in the condition and\naction, including:",
        "The resolution of the identifiers for objects.",
        "The resolution of the data types of expressions.",
        "The verification of the number and types of arguments in a function call.",
        "The CREATE ALERT and ALTER ALERT commands do not fail if the SQL statement for a condition or action specifies an invalid\nidentifier, incorrect data type, incorrect number and types of function arguments, etc. Instead, the failure occurs when the\nalert executes.",
        "To check for failures in an existing alert, use the ALERT_HISTORY table function.",
        "To avoid these types of failures, before you specify the conditions and actions for alerts, verify the SQL expressions and\nstatements for those conditions and actions.",
        "Regarding metadata:",
        "Attention",
        "Customers should ensure that no personal data (other than for a User object), sensitive data, export-controlled data, or other regulated data is entered as metadata when using the Snowflake service. For more information, see Metadata fields in Snowflake.",
        "CREATE OR REPLACE <object> statements are atomic. That is, when an object is replaced, the old object is deleted and the new object is created in a single transaction.",
        "See Creating an alert.",
        "Snowflake REST APIs",
        "Create an alert endpoint",
        "Snowflake Python APIs",
        "alert.AlertCollection.create method",
        "Snowflake CLI",
        "Not supported",
        "Was this page helpful?",
        "On this page",
        "Related content"
    ]
}