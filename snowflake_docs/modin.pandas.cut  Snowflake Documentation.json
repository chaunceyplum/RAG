{
    "url": "https://docs.snowflake.com/en/developer-guide/snowpark/reference/python/1.26.0/modin/pandas_api/modin.pandas.cut",
    "title": "modin.pandas.cut | Snowflake Documentation",
    "paragraphs": [
        "Bin values into discrete intervals.",
        "Use cut when you need to segment and sort data values into bins. This\nfunction is also useful for going from a continuous variable to a\ncategorical variable. For example, cut could convert ages to groups of\nage ranges. Supports binning into an equal number of bins, or a\npre-specified array of bins.",
        "x (array-like) \u2013 The input array to be binned. Must be 1-dimensional.",
        "bins (int, sequence of scalars) \u2013",
        "The criteria to bin by.",
        "int : Defines the number of equal-width bins in the range of x. The\nrange of x is extended by .1% on each side to include the minimum\nand maximum values of x.",
        "sequence of scalars : Defines the bin edges allowing for non-uniform\nwidth. No extension of the range of x is done.",
        "",
        "right (bool, default True) \u2013 Indicates whether bins includes the rightmost edge or not. If\nright == True (the default), then the bins [1, 2, 3, 4]\nindicate (1,2], (2,3], (3,4]. This argument is ignored when\nbins is an IntervalIndex.",
        "labels (array or False, default None) \u2013",
        "Specifies the labels for the returned bins. Must be the same length as\nthe resulting bins. If False, returns only integer indicators of the\nbins. This affects the type of the output container (see below).\nThis argument is ignored when bins is an IntervalIndex. If True,\nraises an error. When ordered=False, labels must be provided.",
        "Snowpark pandas API does not support labels=None.\nLabels must be of a Snowpark pandas API supported dtype.",
        "",
        "retbins (bool, default False) \u2013 Snowpark pandas API does not support this parameter yet.",
        "precision (int, default 3) \u2013 The precision at which to store and display the bins labels.",
        "include_lowest (bool, default False) \u2013 Whether the first interval should be left-inclusive or not.",
        "duplicates ({default 'raise', 'drop'}, optional) \u2013 If bin edges are not unique, raise ValueError or drop non-uniques.",
        "ordered (bool, default True) \u2013 Whether the labels are ordered or not. Applies to returned types\nCategorical and Series (with Categorical dtype). If True,\nthe resulting categorical will be ordered. If False, the resulting\ncategorical will be unordered (labels must be provided).",
        "",
        "out (Categorical, Series, or ndarray) \u2013 An array-like object representing the respective bin for each value\nof x. The type depends on the value of labels.",
        "None (default) : returns a Series for Series x or a\nCategorical for all other inputs. The values stored within\nare Interval dtype.",
        "sequence of scalars : returns a Series for Series x or a\nCategorical for all other inputs. The values stored within\nare whatever the type in the sequence is.",
        "False : returns an ndarray of integers.",
        "bins (numpy.ndarray) \u2013 The computed or specified bins. Only returned when retbins=True.\nFor scalar or sequence bins, this is an ndarray with the computed\nbins. If set duplicates=drop, bins will drop non-unique bin.",
        "",
        "Notes",
        "Any NA values will be NA in the result. Out of bounds values will be NA in\nthe resulting Series or Categorical object.",
        "Snowpark pandas API does not natively support Categorical and categorical types. When calling cut with a\nSnowpark pandas Series and using labels=False, a Snowpark pandas Series object is returned. However,\nfor labels != False an error is raised.",
        "Examples",
        "Discretize into three equal-sized bins.",
        "labels=False implies you just want the bins back.",
        "Passing a Series as an input returns a Series with labels=False:",
        "Was this page helpful?"
    ]
}