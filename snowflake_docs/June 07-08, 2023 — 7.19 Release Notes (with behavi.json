{
    "url": "https://docs.snowflake.com/en/release-notes/2023/7_19",
    "title": "June 07-08, 2023 \u2014 7.19 Release Notes (with behavior changes) | Snowflake Documentation",
    "paragraphs": [
        "The following new features, behavior changes, and updates (enhancements, fixes, etc.) have been introduced in this release. If you have any\nquestions about these additions, please contact\nSnowflake Support.",
        "Important",
        "Each release may include updates that require the web interface to be refreshed.",
        "As a general practice, to ensure these updates do not impact your usage, we recommend refreshing the web interface after each Snowflake\nrelease has been deployed.",
        "This release contains the following behavior change bundles:",
        "Bundle Name",
        "Status in this Release",
        "Previous Status",
        "2023_04",
        "Disabled by default; admins can enable for testing",
        "N/A (introduced in this release)",
        "2023_03",
        "Enabled by default; admins can disable for opt-out",
        "Disabled by default",
        "2023_02",
        "Generally enabled; admins can no longer enable/disable",
        "Enabled by default",
        "The status for each bundle will change in the next behavior change release, planned for July; however, this schedule is subject to\nchange.",
        "For more information about bundle statuses and how they may impact your accounts, see About Behavior Changes.",
        "With this release, we are pleased to announce the general availability of support for creating anonymous procedures. An anonymous procedure\nis similar to a stored procedure, but not stored for later use.",
        "You can create an anonymous procedure using the WITH\u2026CALL syntax. With this command, you both create\nan anonymous procedure defined by parameters in the WITH clause and call that procedure. You do not need to have a role with CREATE\nPROCEDURE schema privileges for this command.",
        "With this release, we are pleased to announce the general availability of support for reading staged files with a UDF or procedure handler\ncode written in Java.",
        "For more information, refer to Reading a file with a Java UDF and Reading a file with a Java procedure.",
        "With this release, we are pleased to announce a preview of support for reading staged files with a UDF or procedure handler code written in\nScala.",
        "For more information, refer to Reading a file with a Scala UDF and Reading a file with a Scala procedure.",
        "With this release, we are pleased to announce a preview of Python support for reading files with the SnowflakeFile class.",
        "SnowflakeFile is a new class in the snowflake.snowpark.files module that provides dynamic read access for files on an\ninternal or external stage. With SnowflakeFile, you can stream files to accomplish tasks such as reading unstructured data or using\nyour own machine learning model in a user-defined function (UDF), user-defined table function (UDTF), or stored procedure.",
        "For more information, refer to:",
        "Reading a File from a Python UDF Handler",
        "Reading Files from a UDF with the Snowpark API",
        "Reading a File from a Python Stored Procedure Handler",
        "Reading Files from a Stored Procedure with the Snowpark API",
        "With this release, we are pleased to announce a preview of the schema detection feature for JSON and CSV. The schema detection feature uses\nthe INFER_SCHEMA function to automatically detect the schema in a set of staged data files and retrieve the column definitions. The\ngenerally available INFER_SCHEMA function applies to Apache Parquet, Apache Avro, and ORC files. This preview function expands support to\ninclude JSON and CSV files.",
        "For more information, refer to Schema detection of column definitions from staged semi-structured data files.",
        "With this release, we are pleased to announce a preview of the table schema evolution feature. The structure of tables in Snowflake can now\nevolve automatically to support the structure of new data received from the data sources. Snowflake allows adding new columns or dropping\nthe NOT NULL constraint from columns missing in new data files, and supports dropping columns or changing the data type, length, or\nprecision of existing columns.",
        "To enable table schema evolution, you can set the ENABLE_SCHEMA_EVOLUTION parameter to TRUE when you create or alter a table.",
        "For more information, refer to Table schema evolution.",
        "With this release, we are pleased to announce support for Python 3.9 in Snowpark Python, Python UDFs and Python stored procedures as a\npreview feature to all accounts.",
        "For more information, refer to:",
        "Setting Up Your Development Environment for Snowpark Python",
        "Introduction to Python UDFs",
        "Writing stored procedures in Python",
        "When calling a UDF, UDTF, or stored procedure, you can now pass arguments by name, in addition to by position.",
        "For example, suppose that you created a UDF with the following statement:",
        "To pass the arguments by name, specify the argument name followed by => and the argument value. For example:",
        "You can pass the arguments in any order:",
        "For more information, refer to:",
        "Calling a UDF",
        "Calling a stored procedure",
        "If there are multiple functions or procedures with the same name, the same number of arguments, and different data types for the arguments,\nyou can specify the argument names in the call to indicate which function or procedure to execute. The argument names that you specify in\nthe call take precedence over the argument positions. For more information, refer to Overloading procedures and functions.",
        "Finally, the following built-in functions support passing arguments by name:",
        "CHECK_XML",
        "PARSE_XML",
        "ROUND",
        "This release introduces a new schema, \u201cML\u201d, to the Snowflake database, along with an ML_USER SNOWFLAKE database role, which is granted to\nthe PUBLIC role in all Snowflake accounts containing a shared SNOWFLAKE database.",
        "For more information, refer to:",
        "The ML schema in the SNOWFLAKE Database",
        "SNOWFLAKE database roles",
        "The schema, roles, and privileges support features that will be made available in Public Preview at Snowflake Summit 2023.",
        "With this release, we are pleased to announce the preview of the ACCOUNTS view in the ORGANIZATION_USAGE schema. The ACCOUNTS view allows an\norganization administrator to obtain details about the accounts in an organization, including accounts deleted within the last year.",
        "For more information, refer to ACCOUNTS view.",
        "Starting May 30, 2023, new Snowflake organizations only have access to Snowsight and no longer have access to Classic Console.",
        "For more information, refer to About the Snowsight upgrade.",
        "Was this page helpful?",
        "On this page"
    ]
}